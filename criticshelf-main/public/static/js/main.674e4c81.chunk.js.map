{"version":3,"sources":["components/Header.js","components/HeaderStranger.js","components/Welcome.js","components/SignUp.js","components/Login.js","components/GameSearchCard.js","components/GameSearchContainer.js","components/AddGame.js","components/SearchGames.js","components/MovieSearchCard.js","components/MovieSearchContainer.js","components/AddMovie.js","components/SearchMovies.js","components/BookSearchCard.js","components/BookSearchContainer.js","components/AddBook.js","components/SearchBooks.js","components/TVSearchCard.js","components/TVSearchContainer.js","components/AddTV.js","components/SearchTV.js","components/AlbumSearchCard.js","components/AlbumSearchContainer.js","components/AddAlbum.js","components/SearchAlbums.js","components/SearchMedia.js","components/BookShelfCard.js","components/GameShelfCard.js","components/MovieShelfCard.js","components/TVShelfCard.js","components/AlbumShelfCard.js","components/UpdateMovie.js","components/UpdateBook.js","components/UpdateTV.js","components/UpdateAlbum.js","components/UpdateGame.js","components/MyShelf.js","components/MovieShelf.js","components/TVShelf.js","components/AlbumShelf.js","components/BookShelf.js","components/GameShelf.js","components/About.js","components/App.js","index.js"],"names":["Header","theme","user","setUser","ThemeProvider","AppBar","position","sx","p","mb","border","borderColor","width","Container","maxWidth","Toolbar","disableGutters","Box","flexGrow","display","xs","md","Grid","container","spacing","direction","justifyContent","item","component","Typography","variant","align","ml","Rating","label","name","defaultValue","precision","readOnly","Button","my","color","href","username","onClick","fetch","method","headers","Welcome","marginTop","flexDirection","alignItems","mt","Copyright","props","Link","Date","getFullYear","SignUp","useState","firstname","setFirstname","lastname","setLastname","email","setEmail","setUsername","emailValid","setEmailValid","password","setPassword","passwordRepeat","setPasswordRepeat","passwordMatch","setPasswordMatch","phone","setPhone","history","useHistory","checkEmail","String","toLowerCase","match","checkPassword","CssBaseline","Avatar","m","bgcolor","noValidate","onSubmit","e","preventDefault","first_name","last_name","body","JSON","stringify","then","res","ok","json","newUser","console","log","id","alert","push","errors","target","reset","sm","TextField","required","fullWidth","autoComplete","autoFocus","value","onChange","error","helperText","type","Login","data","margin","GameSearchCard","gameInfo","handleGameSelect","reviews","setReviews","useEffect","r","checkForReviews","filter","givenReview","artwork","identifier","Card","CardMedia","height","image","background_image","alt","CardHeader","title","backgroundColor","CardContent","flex","released","slice","getYear","length","numberOfReviews","cumulativeScore","rating","averageRating","parseFloat","parseReviewData","GameSearchContainer","setPage","page","searchedCategory","setSelectedGame","selectedGame","spawnGameCards","map","givenGame","lg","mr","pageNum","parseInt","pageState","borderTop","AddGame","setGameInfo","setRating","review","setReview","hasReviewed","setHasReviewed","submitted","setSubmitted","reviewDate","setReviewDate","handleRating","handleReview","gamePicture","shortSummary","description","summary","replaceAll","cleanUpSummary","split","join","review_text","updated_at","style","textAlign","float","discipline","discipline_id","artworkInDB","reviewInDB","submitReview","user_id","artwork_id","submitArtwork","CardActions","multiline","rows","subheaderTypographyProps","new_review","fontSize","reviewData","year","month","day","getReviewDate","gutterBottom","SearchGames","setSearchedCategory","gameQuery","setGameQuery","gameOptions","setGameOptions","gameResults","setGameResults","searched","setSearched","handleSearchCheckBox","results","titles","givenItem","Autocomplete","disablePortal","options","onInputChange","event","getOptionLabel","option","givenResult","handleGameLabels","renderInput","params","FormGroup","List","ListItem","MovieSearchCard","movieInfo","handleMovieSelect","release_date","poster_path","MovieSearchContainer","setSelectedMovie","selectedMovie","spawnMovieCards","givenMovie","AddMovie","setMovieInfo","moviePicture","overview","SearchMovies","movieQuery","setMovieQuery","movieOptions","setMovieOptions","movieResults","setMovieResults","handleMovieLabels","input","includes","index","indexOf","renderOption","key","BookSearchCard","vi","bookInfo","handleBookSelect","volumeInfo","imageLinks","thumbnail","smallThumbnail","authors","publishedDate","BookSearchContainer","setSelectedBook","selectedBook","spawnBookCards","givenBook","counter","AddBook","setBookInfo","bookPicture","subheader","SearchBooks","bookQuery","setBookQuery","bookOptions","setBookOptions","bookResults","setBookResults","handleBookLabels","items","TVSearchCard","tvInfo","handleTVSelect","first_air_date","TVSearchContainer","setSelectedTV","selectedTV","spawnTVCards","givenTV","AddTV","setTVInfo","hasSubmitted","setHasSubmitted","tvPicture","SearchTV","tvQuery","setTVQuery","tvOptions","setTVOptions","tvResults","setTVResults","handleTVLabels","AlbumSearchCard","details","albumInfo","handleAlbumSelect","albumDetails","setAlbumDetails","mbid","album","artist","AlbumSearchContainer","setSelectedAlbum","selectedAlbum","spawnAlbumCards","givenAlbum","AddAlbum","setAlbumInfo","albumPicture","spawnTracks","tracks","track","givenTrack","dense","overflow","SearchAlbums","albumQuery","setAlbumQuery","albumOptions","setAlbumOptions","albumResults","setAlbumResults","handleAlbumLabels","albummatches","SearchMedia","exact","path","BookShelfCard","setMediaInfo","setSelectedMedia","titleTypographyProps","rawDate","GameShelfCard","MovieShelfCard","TVShelfCard","AlbumShelfCard","UpdateMovie","movieData","UpdateBook","bookData","UpdateTV","tvData","UpdateAlbum","albumData","UpdateGame","gameData","MyShelf","setDisplayReviews","filters","selectedMedia","mediaInfo","Stack","onlyMovies","reverse","onlyBooks","onlyTV","onlyAlbums","onlyGames","MovieShelf","setFilter","viewOrganizers","setViewOrganizers","Chip","icon","sort","a","b","byRating","reviewDateA","parse","reviewDateB","sortByFilter","TVShelf","AlbumShelf","BookShelf","GameShelf","About","toggleWhy","setToggleWhy","toggleTech","setToggleTech","toggleAboutMe","setToggleAboutMe","toggleVersion","setToggleVersion","handleWhy","handleAboutMe","handleTech","handleVersion","noWrap","pl","IconButton","rel","aria-label","LinkedInIcon","GitHubIcon","TwitterIcon","RssFeedIcon","EmailIcon","App","colorTheme","createTheme","palette","primary","main","contrastText","secondary","HeaderStranger","GlobalStyle","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.674e4c81.chunk.js","sourcesContent":["import React from \"react\";\nimport {ThemeProvider } from \"@mui/material/styles\";\nimport Container from \"@mui/material/Container\";\nimport Button from \"@mui/material/Button\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport { Grid } from \"@mui/material\";\nimport { Rating } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = ({theme, user, setUser} ) => {\n\n    const handleLogout = () => {\n        setUser(null);\n        fetch(\"/logout\", {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n      };\n\n    return (\n        <ThemeProvider theme={theme}>\n      <AppBar position=\"static\" sx={{ p: 1, mb:1, border: 1, borderColor: \"#FFD700\", width: \"100vw\"}}>\n        <Container maxWidth=\"xl\">\n          <Toolbar  disableGutters>\n            <Box sx={{ flexGrow: 1, display: { xs: 1, md: \"flex\" } }}>\n            <Grid container\n        spacing={0}\n        direction=\"column\"\n        justifyContent=\"center\"\n        \n        >\n              <Grid item component={Typography}\n                variant=\"h7\"\n                align=\"center\"\n                sx={{ ml: .3, display: { xs: 1, md: \"flex\" } }}\n              >\n                  CRITICSHELF\n                </Grid>\n                <Grid item component={Rating} align=\"center\" sx={{display:{xs: 1, md:\"flex\"} }}label=\"Average Rating\" name=\"half-rating-read\" defaultValue={5} precision={0.5} readOnly />\n            </Grid>\n            </Box>\n            <Box sx={{ flexGrow: 1, display: { xs: 1, md: \"flex\" } }}>\n            <Button sx={{ my: 2, color: \"#fafafa\", display: \"block\" }} href=\"/myshelf\">\n              My Shelf\n            </Button>\n          </Box>\n          <Box sx={{ flexGrow: 1, display: { xs: 1, md: \"flex\" } }}>\n            <Button sx={{ my: 2, color: \"#fafafa\", display: \"block\" }} href=\"/search\">\n              Add To Shelf\n            </Button>\n          </Box>\n            <Box sx={{ flexGrow: 1 }}>\n            <Button\n              sx={{ my: 2, color: \"white\", display: \"block\" }}\n            >\n              {user.username}\n            </Button>\n          </Box>\n          \n            <Box sx={{ flexGrow: 1 }}>\n            <Button\n              sx={{ my: 2, color: \"white\", display: \"block\" }}\n              onClick={handleLogout}\n            >\n              Logout\n            </Button>\n          </Box>\n          \n          </Toolbar>\n        </Container>\n      </AppBar>\n      </ThemeProvider>\n    );\n  };\n  export default Header","import React from \"react\";\nimport {ThemeProvider } from \"@mui/material/styles\";\nimport Container from \"@mui/material/Container\";\nimport Button from \"@mui/material/Button\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport { Grid } from \"@mui/material\";\nimport { Rating } from \"@mui/material\";\n\nconst Header = ({theme, user, setUser} ) => {\n\n    return (\n        <ThemeProvider theme={theme}>\n      <AppBar position=\"static\" sx={{ p: 2, width: \"100vw\", border: 1, borderColor: \"#FFD700\", }}>\n        <Container maxWidth=\"xl\">\n          <Toolbar disableGutters>\n            <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\n            <Grid container\n        spacing={0}\n        direction=\"column\"\n        justifyContent=\"center\"\n        >\n              <Grid item component={Typography}\n                variant=\"h7\"\n                align=\"center\"\n                sx={{ ml: .3, display: { xs: 1, md: \"flex\" } }}\n              >\n                CRITICSHELF\n                </Grid>\n                <Grid item component={Rating} align=\"center\" sx={{display:{xs: 1, md:\"flex\"} }}label=\"Average Rating\" name=\"half-rating-read\" defaultValue={5} precision={0.5} readOnly />\n            </Grid>\n            </Box>\n            <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\n            <Button sx={{ my: 2, color: \"#fafafa\", display: \"block\" }} href=\"/login\">\n              Log In\n            </Button>\n          </Box>\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\n            <Button sx={{ my: 2, color: \"#fafafa\", display: \"block\" }} href=\"/signup\">\n              Sign Up\n            </Button>\n          </Box>\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\n            <Button sx={{ my: 2, color: \"#fafafa\", display: \"block\" }} href=\"/about\">\n              About\n            </Button>\n          </Box>\n          </Toolbar>\n        </Container>\n      </AppBar>\n      </ThemeProvider>\n    );\n  };\n  export default Header","import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport {ThemeProvider } from \"@mui/material/styles\";\n\nfunction Welcome({theme}) {\n\nreturn (\n<ThemeProvider theme={theme}>\n        <Box\n          sx={{\n            marginTop: 3,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n        <Typography component=\"h1\" variant=\"h4\" color=\"black\">\n            Welcome to CRITICSHELF.COM\n          </Typography>\n        <Typography component=\"h1\" variant=\"h5\" color=\"black\" sx={{mt:2, mb: 2}}>\n            We all love to consume media and share our opinions.\n          </Typography>\n      <Grid item xs={12} md={12}>\n          <Typography sx={{ mt: 1, mb: 2 }} variant=\"h6\" component=\"div\" color=\"black\">\n            On CriticShelf, rate Movies, TV Shows, Books, Video Games or Albums.\n          </Typography>\n      </Grid>\n      <Grid item xs={12} md={12}>\n          <Typography sx={{ mt: 1, mb: 2 }} variant=\"h6\" component=\"div\" color=\"black\">\n            Whether you watch it, read it, play it or otherwise consume it--this is the place.\n          </Typography>\n      </Grid>\n      <Grid item xs={12} md={12}>\n          <Typography sx={{ mt: 1, mb: 0 }} variant=\"h6\" component=\"div\" color=\"black\">\n            Sign up now and start building up your shelf!\n          </Typography>\n      </Grid>\n      </Box>\n      </ThemeProvider>\n    );\n  };\nexport default Welcome","import { useState } from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport {ThemeProvider } from \"@mui/material/styles\";\nimport { useHistory } from \"react-router-dom\";\n\nconst SignUp = ({ setUser, theme }) => {\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [emailValid, setEmailValid] = useState(true);\n  const [password, setPassword] = useState(\"\");\n  const [passwordRepeat, setPasswordRepeat] = useState(\"\");\n  const [passwordMatch, setPasswordMatch] = useState(true);\n  const [phone,setPhone] = useState(\"\")\n  const [setSignUp, setSetSignUp] = useState(\"\");\n  const [errors, setErrors] = useState(\"\");\n  const history = useHistory()\n\n  const checkEmail = () => {\n    if (\n      String(email)\n        .toLowerCase()\n        .match(\n          /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n        )\n    ) {\n      setEmailValid(true);\n      return emailValid;\n    } else {\n      setEmailValid((emailValid) => !emailValid);\n    }\n  };\n\n  const checkPassword = () => {\n    if (password === passwordRepeat) {\n      setPasswordMatch(true);\n      return passwordMatch;\n    } else {\n      setPasswordMatch((passwordMatch) => !passwordMatch);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    checkEmail();\n    checkPassword();\n\n    if (checkEmail && checkPassword) {\n      const user = {\n        first_name: firstname,\n        last_name: lastname,\n        email,\n        username,\n        password,\n        phone: phone\n      };\n\n      fetch(\"/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(user),\n      }).then((res) => {\n        if (res.ok) {\n          res.json().then((newUser) => {\n            console.log(newUser);\n            if(newUser.id){\n              alert(\n                `You have sucessfully signed up with email ${newUser.email}. Log in to get started!`\n              )\n              history.push(\"/login\")\n            }\n            else{\n              alert(\"Something went a bit wrong with your registration. Maybe you already have an account? Or that username is taken maybe?\")\n            }\n            ;\n          });\n        } else {\n          res.json().then((errors) => console.log(errors));\n        }\n      });\n\n      setFirstname(\"\");\n      setLastname(\"\");\n      setEmail(\"\");\n      setUsername(\"\");\n      setPassword(\"\");\n      setPhone(\"\")\n      setPasswordRepeat(\"\");\n\n      e.target.reset();\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"primary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleSubmit}\n            sx={{ mt: 3 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  fullWidth\n                  autoComplete=\"given-name\"\n                  name=\"firstname\"\n                  id=\"firstname\"\n                  label=\"First name\"\n                  autoFocus\n                  value={firstname}\n                  onChange={(e) => setFirstname(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  fullWidth\n                  autoComplete=\"family-name\"\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastname\"\n                  value={lastname}\n                  onChange={(e) => setLastname(e.target.value)}\n                />\n              </Grid>\n\n              <Grid item xs={12} sm={6}>\n                {emailValid ? (\n                  <TextField\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                ) : (\n                  <TextField\n                    error\n                    required\n                    fullWidth\n                    id=\"filled-error-helper-text\"\n                    label=\"Email Address\"\n                    helperText=\"Must be a valid email containing '@'\"\n                    variant=\"filled\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                )}\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  fullWidth\n                  autoComplete=\"phone #\"\n                  id=\"phone\"\n                  label=\"Phone #\"\n                  name=\"Phone\"\n                  value={phone}\n                  onChange={(e) => setPhone(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  autoComplete=\"username\"\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  value={username}\n                  onChange={(e) => setUsername(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                {passwordMatch ? (\n                  <TextField\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"new-password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                ) : (\n                  <TextField\n                    error\n                    required\n                    fullWidth\n                    id=\"filled-error-helper-text\"\n                    label=\"Password\"\n                    helperText=\"Passwords don't match, please try again\"\n                    variant=\"filled\"\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                )}\n              </Grid>\n              <Grid item xs={12}>\n                {passwordMatch ? (\n                  <TextField\n                    required\n                    fullWidth\n                    name=\"password-match\"\n                    label=\"Type Password Again\"\n                    type=\"password\"\n                    id=\"password-match\"\n                    autoComplete=\"new-password-match\"\n                    value={passwordRepeat}\n                    onChange={(e) => setPasswordRepeat(e.target.value)}\n                  />\n                ) : (\n                  <TextField\n                    error\n                    required\n                    fullWidth\n                    id=\"filled-error-helper-text\"\n                    label=\"Type Password Again\"\n                    helperText=\"Passwords don't match, please try again\"\n                    variant=\"filled\"\n                    type=\"password\"\n                    value={passwordRepeat}\n                    onChange={(e) => setPasswordRepeat(e.target.value)}\n                  />\n                )}\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link href=\"/login\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <Copyright sx={{ mt: 5 }} />\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nconst Copyright = (props) => {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"/\">\n        Score Counter\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n};\n\nexport default SignUp;\n","import { useState } from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport {ThemeProvider} from \"@mui/material/styles\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Login = ({ setUser, theme }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailValid, setEmailValid] = useState(true);\n  const [login, setLogin] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const history = useHistory()\n\n  const checkEmail = () => {\n    if (\n      String(email)\n        .toLowerCase()\n        .match(\n          /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n        )\n    ) {\n      setEmailValid(true);\n      return emailValid;\n    } else {\n      setEmailValid((emailValid) => !emailValid);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    checkEmail();\n    const user = {\n      email,\n      password,\n    };\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(user),\n    }).then((res) => {\n      if (res.ok) {\n        res.json().then((data) => setUser(data));\n        history.push(\"/myshelf\")\n      } else {\n        res.json().then((errors) => console.log(errors));\n      }\n    });\n\n    setEmail(\"\");\n    setPassword(\"\");\n    e.target.reset();\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"primary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            {emailValid ? (\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n                type=\"text\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            ) : (\n              <TextField\n                error\n                required\n                fullWidth\n                id=\"filled-error-helper-text\"\n                label=\"Email Address\"\n                helperText=\"Must be a valid email containing '@'\"\n                variant=\"filled\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            )}\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"/signup\" variant=\"body2\">\n                  Don't have an account? Sign Up\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\n\nexport default Login;\n","import React, { useState, useEffect } from \"react\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardHeader from '@mui/material/CardHeader'\nimport Button from '@mui/material/Button';\nimport Box from \"@mui/material/Box\";\nimport Typography from '@mui/material/Typography';\nimport Grid from \"@mui/material/Grid\";\nimport Rating from '@mui/material/Rating';\n\n\nfunction GameSearchCard ({gameInfo, theme, handleGameSelect}) {\nconst [reviews,setReviews]=useState([])\n\n// function getPlatforms(gameInfo) {\n//   let platforms = \"\"\n//   let platformMap = gameInfo.parent_platforms.map((givenParentPlatform) => {\n//     platforms = platforms + `${givenParentPlatform.platform.name}, `\n//   })\n//   let display = platforms.slice(0,-2)\n//   return display\n// }\n\nfunction getYear(gameInfo) {\n  if (gameInfo.released) {\n  let release_date = gameInfo.released\n  let year = release_date.slice(0,4)\n  return year\n  }\n  else {\n    return gameInfo.released\n  }\n}\n\nuseEffect(() => {\n  fetch(`/reviews`)\n  .then((r) => {\n    if (r.ok) {\n      r.json()\n      .then((data) => {\n          let checkForReviews = data.filter((givenReview) => {\n              return (givenReview.artwork.identifier==gameInfo.id)\n          })\n          setReviews(checkForReviews)\n      })\n      }})}, [gameInfo])\n\n      function parseReviewData(reviews){\n        if (reviews.length>0){\n          let numberOfReviews = reviews.length\n          let cumulativeScore = 0\n          for (const eachReview of reviews){\n            cumulativeScore=cumulativeScore+eachReview.rating\n          }\n          let averageRating=parseFloat(cumulativeScore/numberOfReviews)\n          return (\n            <>\n          <Rating label=\"Average Rating\" name=\"half-rating-read\" value={parseFloat(averageRating)} precision={0.5} readOnly />\n          <Typography variant=\"subtitle1\">Average Rating:</Typography>\n          <Typography variant=\"subtitle1\">{`${parseFloat(averageRating)} ☆ on ${numberOfReviews} reviews`}</Typography>\n          </>\n          )\n        }\n        else {\n          return (\n            <>\n          <Rating label=\"Average Rating\" name=\"half-rating-read\" value={0} precision={0.5} readOnly />\n          <Typography variant=\"subtitle1\">No reviews yet!</Typography>\n          </>\n          )\n        }\n      }\n\n    return (\n      <Card sx={{ display: 'flex' }}>\n            <Grid container \n          spacing={0}\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"stretch\"\n          sx={{border: 2, borderColor: \"black\"}}>\n  <Grid item xs={12} component={Box} sx={{ display: 'flex'}}>\n  <CardMedia\n    component=\"img\"\n    // height=\"100%\"\n    // width=\"100%\"\n    xs={12}\n    sx={{ height: 470}}\n    image={`${gameInfo.background_image}`}\n  alt={`${gameInfo.name} Screenshot`}\n  />\n  </Grid>\n  <Grid xs={12} item component={Box} sx={{display: 'flex', flexDirection: 'column' }}>\n  <CardHeader\n              \n              title={`${gameInfo.name}`}\n              // style={{ textAlign: 'center' }}\n              sx={{\n                  color: \"white\",\n                  // backgroundColor: \"blue\",\n                  backgroundColor: \"black\",\n                  border: 1, borderColor: \"#black\",\n                  // height: 60\n              }}\n        >\n        </CardHeader>\n    <CardContent sx={{ flex: '1 0 auto' }} \n    // style={{ textAlign: 'center' }}\n    >\n      <Typography component=\"div\" variant=\"h6\">\n      {getYear(gameInfo)}\n      </Typography>\n      {parseReviewData(reviews)}\n    </CardContent>\n    </Grid>\n    <Grid item xs={12} component={Button}\n                          variant=\"contained\"\n                          sx={{\n                            color: \"white\",\n                            // backgroundColor: \"blue\"\n                            backgroundColor: \"black\",\n                            border: 1, borderColor: \"#FFD700\"\n                        }}\n                        value={gameInfo.id}\n                        onClick={handleGameSelect}\n                        >\n                          Add To Shelf\n                        </Grid>\n  </Grid>\n  \n  </Card>\n  )\n\n\n}\n\nexport default GameSearchCard","import Button from \"@mui/material/Button\";\nimport Grid from \"@mui/material/Grid\";\nimport {ThemeProvider } from \"@mui/material/styles\";\nimport GameSearchCard from \"./GameSearchCard\";\n\n\nfunction GameSearchContainer ({data, theme, setPage, page, searchedCategory, selectedGame, setSelectedGame}) {\n\n    function handleNextPage(e){\n        let pageNum = parseInt(page)\n        let newPage = pageNum+1\n        let pageState = String(newPage)\n        setPage(pageState)\n    }\n\n    function handlePreviousPage(e){\n        let pageNum = parseInt(page)\n        if (pageNum > 1) {\n        let newPage = pageNum-1\n        let pageState = String(newPage)\n        setPage(pageState)\n        }\n    }\n\n    function handleGameSelect(e){\n      setSelectedGame(e.target.value)\n    }\n\n  const spawnGameCards = data.map((givenGame) => {\n    if (searchedCategory===\"Video Games\") {\n      return (\n        <Grid item xs={12} sm={5} md={5} lg={3}  sx={{ mt: 3, mr: 5, display:\"flex\",}} key={givenGame.id} align=\"center\">\n        <GameSearchCard gameInfo={givenGame} key={givenGame.id} handleGameSelect={handleGameSelect}/>\n        </Grid>\n      )}\n      })\n    \n\n      return (\n        <ThemeProvider theme={theme}>\n            <Grid container \n            spacing={2}\n            direction=\"row\"\n            justifyContent=\"center\"\n            alignItems=\"stretch\">\n            {spawnGameCards}\n            </Grid>\n            <Grid container\n            spacing={1}\n            direction=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"stretch\"\n            sx={{mt: 3}}>\n        <Grid item component={Button}\n            align=\"center\"\n            xs={12} sm={6}\n            \n                          variant=\"contained\"\n                          onClick={handlePreviousPage}\n                          sx={{ mt: 3, mb: 2,border: 1, borderColor: \"#FFD700\", borderTop: 1}}\n                        >\n                          Previous Page\n                        </Grid>\n          <Grid item component={Button}\n          xs={12} sm={6}\n                          variant=\"contained\"\n                          onClick={handleNextPage}\n                          sx={{ mt: 3, mb: 2, border: 1, borderColor: \"#FFD700\", borderTop: 1}}\n                        >\n                          Next Page\n                        </Grid>\n                        </Grid>\n      </ThemeProvider>\n        )\n}\n\n\n\nexport default GameSearchContainer","import React, { useState, useEffect } from \"react\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardHeader from '@mui/material/CardHeader'\nimport Button from '@mui/material/Button';\nimport Box from \"@mui/material/Box\";\nimport Typography from '@mui/material/Typography';\nimport { Grid } from \"@mui/material\";\nimport Rating from '@mui/material/Rating';\nimport TextField from '@mui/material/TextField'\n\nfunction AddGame({id, user}) {\n    const [gameInfo, setGameInfo] = useState(false)\n    const [rating,setRating] = useState(2.5)\n    const [review,setReview] = useState(\"It stinks! -Jay Sherman, The Critic\")\n    const [hasReviewed,setHasReviewed] = useState(false)\n    const [submitted,setSubmitted] = useState(false)\n    const [reviewDate,setReviewDate] = useState(\"\")\n    \n    function getReviewDate(reviewData){\n      let year = reviewData.slice(0,4)\n      let month = reviewData.slice(5,7)\n      let day = reviewData.slice(8,10)\n      let date = `${month}-${day}-${year}`\n      return date\n    }\n\n    useEffect(() => {\n        fetch(`https://api.rawg.io/api/games/${id}?key=3399fc338e8a43b19b6edf538ebbb5a2`)\n        .then((r) => {\n          if (r.ok) {\n            r.json()\n            .then((data) => {\n              if (data) {\n                setGameInfo(data)\n                }\n                })\n            }})}, [id])\n\n            useEffect(() => {\n                fetch(`/users/${user.id}/reviews`)\n                .then((r) => {\n                  if (r.ok) {\n                    r.json()\n                    .then((data) => {\n                        let checkForReview = data.map((givenReview) => {\n                            if (givenReview.artwork.identifier === id){\n                                setHasReviewed(givenReview)\n                                setRating(givenReview.rating)\n                                setReview(givenReview.review_text)\n                                setReviewDate(givenReview.updated_at)\n                            }\n                        })\n                    })\n                    }})}, [id,gameInfo,submitted])\n\n    function handleSubmit(e){\n        e.preventDefault()\n        let identifier = id\n        let title = gameInfo.name\n        let discipline = 3\n        submitArtwork(discipline,identifier,title,rating,review,user)\n    }\n\n    function handleUpdate(e){\n        e.preventDefault()\n       let new_review = {\n           id: hasReviewed.id,\n           artwork_id: hasReviewed.artwork_id,\n           user_id: hasReviewed.user_id,\n           rating: rating,\n           review_text: review\n       } \n       fetch(`/reviews/${hasReviewed.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(new_review),\n      }).then((res) => {\n        if (res.ok) {\n          res.json().then((reviewInDB) => {\n            setSubmitted(reviewInDB);\n          });\n        } else {\n          res.json().then((errors) => console.log(errors));\n        }\n      });\n    }\n\n    function submitArtwork(discipline,identifier,name,rating,review,user){\n        let artwork = {\n            identifier: identifier,\n            discipline_id: discipline,\n            name: name\n        }\n        fetch(\"/artworks\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(artwork),\n          }).then((res) => {\n            if (res.ok) {\n              res.json().then((artworkInDB) => {\n                let newReview = {\n                    rating: rating,\n                    review_text: review,\n                    user_id: user.id,\n                    artwork_id: artworkInDB.id\n                }\n                submitReview(newReview)\n              });\n            } else {\n              res.json().then((errors) => console.log(errors));\n            }\n          });\n    }\n\n    function submitReview(review) {\n        fetch(\"/reviews\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(review),\n          }).then((res) => {\n            if (res.ok) {\n              res.json().then((reviewInDB) => {\n                setSubmitted(reviewInDB);\n              });\n            } else {\n              res.json().then((errors) => console.log(errors));\n            }\n          })};\n\n    function handleRating(e){\n        setRating(e.target.value)\n    }\n\n    function handleReview(e){\n        setReview(e.target.value)\n    }\n\n    function getYear(gameInfo) {\n        if (gameInfo.released) {\n        let release_date = gameInfo.released\n        let year = release_date.slice(0,4)\n        return year\n        }\n        else {\n          return gameInfo.released\n        }\n      }\n    \n    function gamePicture(gameInfo){\n        if (gameInfo.background_image){\n            return gameInfo.background_image\n        }\n        else {\n            return (\"https://st3.depositphotos.com/23594922/31822/v/600/depositphotos_318221368-stock-illustration-missing-picture-page-for-website.jpg\")\n        }\n    }\n\n      function cleanUpSummary(summary){\n          let noBold = summary.replaceAll(\"<b>\",\"\")\n          let noBoldClose = noBold.replaceAll(\"</b>\",\"\")\n          let noItalic = noBoldClose.replaceAll(\"<i>\",\"\")\n          let noItalicClose = noItalic.replaceAll(\"</i>\",\"\")\n          let noP = noItalicClose.replaceAll(\"<p>\",\"\")\n          let noPClose = noP.replaceAll(\"</p>\",\"\")\n          let noBR = noPClose.replaceAll(\"<br>\",\"-\")\n          let noBRClose = noBR.replaceAll(\"</br>\",\"\")\n          let moreClean = noBRClose.replaceAll(\"<br />\",\"\")\n          let wowWhat = moreClean.replaceAll(\"&#39;\",\"'\")\n          return wowWhat\n      }\n\n      function shortSummary(gameInfo) {\n        if (gameInfo.description) {\n        let splitSummary = gameInfo.description.split(\" \")\n        let shortenedSummary = splitSummary.slice(0,100)\n        let summary = shortenedSummary.join(\" \")\n        let cleanSummary = cleanUpSummary(summary)\n        return (cleanSummary + \"...\")\n        }\n        else {\n          return gameInfo.description\n        }\n      }\n\n    if (gameInfo && hasReviewed===false) {\n            return (<Card sx={{width:\"50vw\", border: 1, borderColor: \"black\"}} >\n            <CardHeader\n                    xs = {12}\n                                title={`${gameInfo.name}`}\n                                style={{ textAlign: 'center' }}\n                                sx={{\n                                    color: \"white\",\n                                    backgroundColor: \"black\",\n                                    border: 1,\n                                    borderColor: \"#FFD700\"\n                                }}\n                          >\n                          </CardHeader>\n                          <CardMedia\n                      component=\"img\"\n                      height=\"100%\"\n                      width=\"100%\"\n                      sx={{ width: \"20vw\", height: \"30vw\", float:\"right\" }}\n                      image={`${gamePicture(gameInfo)}`}\n              alt={`${gameInfo.title} Cover`}\n                    />\n                      <CardContent sx={{ flex: '1 0 auto' }} style={{ textAlign: 'center' }}>\n                      <Typography component=\"div\" variant=\"h5\">\n                  {getYear(gameInfo)}\n                </Typography>\n                        <Typography component=\"div\" variant=\"h7\">\n                          {shortSummary(gameInfo)}\n                        </Typography>\n                      </CardContent>\n                      <Box textAlign='center' component=\"form\" onSubmit={handleSubmit}> \n                      <CardActions style={{justifyContent: 'center'}} sx={{alignItems: 'center', width:\"29.8vw\"}}>\n                      <Grid container spacing={1} style={{ justifyContent: \"center\"}}>\n                      <Rating label = \"Rating\" sx={{ mt: 1, mr: 1,}} name=\"half-rating\" value={rating} precision={0.5} onChange={handleRating}/>\n                      <TextField\n                  id=\"filled-multiline-static\"\n                  label=\"Your Review\"\n                  multiline\n                  rows={4}\n                  fullWidth\n                  value={review}\n                  variant=\"filled\"\n                  onChange={handleReview}\n        \n                />\n                   <Button\n                          type=\"submit\"\n                          variant=\"contained\"\n                          sx={{ mt: 3, mb: 2, color: \"white\", backgroundColor: \"black\" }}\n                        >\n                          Add To Shelf\n                        </Button>\n                </Grid>\n                \n              </CardActions>\n                      </Box>\n                    </Card>\n        )\n    }\n    else if (gameInfo && hasReviewed) {\n            return (<Card sx={{width:\"50vw\", border: 1, borderColor: \"black\"}} >\n            <CardHeader\n                    xs = {12}\n                                title={`${gameInfo.name}`}\n                    subheaderTypographyProps={{color: \"white\"}}\n                                style={{ textAlign: 'center' }}\n                                sx={{\n                                    color: \"white\",\n                                    backgroundColor: \"black\",\n                                    border: 1,\n                                    borderColor: \"#FFD700\"\n                                }}\n                          >\n                          </CardHeader>\n                          <CardMedia\n                      component=\"img\"\n                      height=\"100%\"\n                      width=\"100%\"\n                      sx={{ width: \"20vw\", height: \"30vw\", float:\"right\" }}\n                      image={`${gamePicture(gameInfo)}`}\n              alt={`${gameInfo.name} Cover`}\n                    />\n                      <CardContent sx={{ flex: '1 0 auto' }} style={{ textAlign: 'center' }}>\n                      <Typography component=\"div\" variant=\"h5\">\n                  {getYear(gameInfo)}\n                </Typography>\n                        <Typography component=\"div\" variant=\"h7\">\n                          {shortSummary(gameInfo)}\n                        </Typography>\n                      </CardContent>\n                      <Box textAlign='center' component=\"form\" onSubmit={handleUpdate}> \n                      <CardActions style={{justifyContent: 'center'}} sx={{alignItems: 'center', width:\"29.8vw\"}}>\n                      <Grid container spacing={1} style={{ justifyContent: \"center\"}}>\n                      <Rating label = \"Rating\" sx={{ mt: 1, mr: 1,}} name=\"half-rating\" value={rating} precision={0.5} onChange={handleRating}/>\n                      <TextField\n                  id=\"filled-multiline-static\"\n                  label=\"Your Review\"\n                  multiline\n                  rows={4}\n                  fullWidth\n                  value={review}\n                  variant=\"filled\"\n                  onChange={handleReview}\n        \n                />\n                   <Grid item xs={12} component={Typography} variant=\"subtitle1\" sx={{mt:1}} fontSize=\".75vw\" textAlign=\"center\">\n              {`Previous Review on: ${getReviewDate(reviewDate)}`}\n          </Grid>\n                   <Grid item component={Button}\n                          type=\"submit\"\n                          variant=\"contained\"\n                          sx={{ mt: 1, mb: .1, color: \"white\", backgroundColor: \"black\" }}\n                        >\n                          Update Review\n                        </Grid>\n                </Grid>\n                \n              </CardActions>\n                      </Box>\n                    </Card>\n        )\n    }\n    else {\n        return (\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\n          Loading...\n        </Typography>\n        )\n    }\n}\n\n\n\nexport default AddGame\n","import React, { useState, useEffect } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport {ThemeProvider } from \"@mui/material/styles\";\nimport Autocomplete from '@mui/material/Autocomplete';\nimport FormGroup from '@mui/material/FormGroup';\nimport Button from \"@mui/material/Button\";\nimport List from '@mui/material/List'\nimport ListItem from '@mui/material/ListItem'\nimport GameSearchContainer from \"./GameSearchContainer\";\nimport { Typography } from \"@mui/material\";\nimport AddGame from \"./AddGame\";\n\nfunction SearchGames({theme, searchedCategory, setSearchedCategory, user}) {\n\nconst [gameQuery, setGameQuery] = useState(\"Dune\")\nconst [gameOptions,setGameOptions] = useState([])\nconst [gameResults,setGameResults] = useState([])\nconst [searched, setSearched] = useState(false)\nconst [selectedGame,setSelectedGame] = useState(false)\nconst [page,setPage] = useState(\"1\")\n\n\nfunction handleSearchCheckBox(e){\n    setSearchedCategory(e.target.value)\n  }\n  \n\nfunction handleGameQuery(event,value){\n  if (searchedCategory !== \"Video Games\"){\n    setSearchedCategory(\"Video Games\")\n  }\n    setGameQuery(value)\n}\n\nuseEffect(() => {\n    fetch(`https://rawg.io/api/games?search=${gameQuery}&page=${page}&page_size=10&key=3399fc338e8a43b19b6edf538ebbb5a2`)\n    .then((r) => {\n      if (r.ok) {\n        r.json()\n        .then((data) => {\n          if (data.results) {\n            setGameResults(data.results)\n            let titles = data.results.map((givenItem) => {\n              return (givenItem.name)\n            })\n            setGameOptions(titles)\n            }\n            })\n        }})}, [gameQuery,page])\n\nfunction handleGameLabels(option) {\n    let label = option\n    for (const givenResult of gameResults){\n        if (option===givenResult.name && givenResult.released){\n            label = (`${option} (${givenResult.released.slice(0,4)})`)\n        }\n    }\n    return label\n}\n\nfunction handleGameSubmit(e){\n    e.preventDefault()\n    setSearchedCategory(\"Video Games\")\n    setSearched(true)\n}\n\nfunction handleResetSearch(e){\n    setSearched(false)\n    setGameQuery(\"Dune\")\n    setGameResults([])\n    setGameOptions([])\n}\n\nfunction handleResetSelection(e){\n  setSelectedGame(false)\n  setSearched(false)\n  setGameQuery(\"Dune\")\n  setGameResults([])\n  setGameOptions([])\n}\nif (searched===false && selectedGame===false) {\n        return (\n            <ThemeProvider theme={theme}>\n                <Box\n                  sx={{\n                    marginTop: 3,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                  }}\n                  component=\"form\"\n                  onSubmit={handleGameSubmit}\n                >\n        <Autocomplete\n          disablePortal\n          id=\"combo-box-demo\"\n          options={[...gameOptions]}\n          onInputChange={handleGameQuery}\n          sx={{ width: 300 }}\n          getOptionLabel={option => handleGameLabels(option)}\n          renderInput={(params) => <TextField {...params} label=\"Video Game\" />}\n        />\n              <Button\n                          type=\"submit\"\n                          variant=\"contained\"\n                          sx={{ mt: 1, mb: 2 }}\n                        >\n                          Search\n                        </Button>\n            <FormGroup>\n            <Typography component=\"div\" variant=\"h7\" align=\"center\" sx={{mt:2}}>\n      Or search for...\n    </Typography>\n            <List sx={{display: \"flex\"}}>\n            \n              <ListItem>\n              <Button\n                          variant=\"contained\"\n                          value=\"Books\"\n                          label=\"Books\"\n                          onClick={handleSearchCheckBox}\n                          href=\"/search/movies\"\n                          sx={{ mt: 1, mb: 2 }}\n                        >\n                          Movies\n                        </Button>\n              </ListItem>\n              <ListItem>\n              <Button\n                          variant=\"contained\"\n                          value=\"Video Games\"\n                          label=\"Video Games\"\n                          onClick={handleSearchCheckBox}\n                          href=\"/search/books\"\n                          sx={{ mt: 1, mb: 2 }}\n                        >\n                          Books\n                        </Button>\n              </ListItem>\n              <ListItem>\n              <Button\n                          variant=\"contained\"\n                          value=\"TV\"\n                          label=\"TV\"\n                          href=\"/search/TV\"\n                          sx={{ mt: 1, mb: 2 }}\n                        >\n                          TV\n                        </Button>\n                        </ListItem>\n                        <ListItem>\n                        <Button\n                          variant=\"contained\"\n                          value=\"Music\"\n                          label=\"Music\"\n                          href=\"/search/music\"\n                          sx={{ mt: 1, mb: 2 }}\n                        >\n                          Music\n                        </Button>\n\n              </ListItem>\n              </List>\n            </FormGroup>\n            </Box>\n            </ThemeProvider>\n        )\n                }\n\nif (searched===true && searchedCategory===\"Video Games\" && selectedGame===false){\n    return (\n        <ThemeProvider theme={theme}>\n            <Box\n              sx={{\n                marginTop: 3,\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n              }}\n            >\n                 <Typography variant=\"h5\" component=\"div\">\n              Results for {`${gameQuery}, Page ${page}`}\n            </Typography>\n        <Button\n                      type=\"submit\"\n                      variant=\"contained\"\n                      onClick={handleResetSearch}\n                      sx={{ mt: 3, mb: 2 }}\n                    >\n                      Reset\n                    </Button>\n        </Box>\n       \n        <GameSearchContainer selectedGame={selectedGame} setSelectedGame={setSelectedGame} searchedCategory={searchedCategory} theme={theme} data={gameResults} setPage={setPage} page={page}/>\n        </ThemeProvider>\n        \n    )\n}\nif (searched===true && searchedCategory===\"Video Games\" && selectedGame){\n  return (\n      <ThemeProvider theme={theme}>\n          <Box\n            sx={{\n              marginTop: 3,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}>\n                <AddGame id={selectedGame} user={user} />\n                <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    onClick={handleResetSelection}\n                    sx={{ mt: 3, mb: 2 }}\n                  >\n                    Reset\n                  </Button>\n            </Box>\n      </ThemeProvider>\n      \n  )\n}\n}\n\n\nexport default SearchGames","import React, { useState, useEffect } from \"react\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardHeader from '@mui/material/CardHeader'\nimport Button from '@mui/material/Button';\nimport Box from \"@mui/material/Box\";\nimport Typography from '@mui/material/Typography';\nimport Rating from '@mui/material/Rating';\nimport { Grid } from \"@mui/material\";\n\n\nfunction MovieSearchCard ({movieInfo, theme, handleMovieSelect}) {\nconst [reviews,setReviews] = useState([])\n\nfunction getYear(movieInfo) {\n  if (movieInfo.release_date) {\n  let release_date = movieInfo.release_date\n  let year = release_date.slice(0,4)\n  return year\n  }\n  else {\n    return movieInfo.release_date\n  }\n}\n\n// function shortSummary(movieInfo) {\n//   if (movieInfo.overview) {\n//   let splitSummary = movieInfo.overview.split(\" \")\n//   let shortenedSummary = splitSummary.slice(0,15)\n//   let summary = shortenedSummary.join(\" \")\n//   return (summary + \"...\")\n//   }\n//   else {\n//     return movieInfo.overview\n//   }\n// }\n\nuseEffect(() => {\n  fetch(`/reviews`)\n  .then((r) => {\n    if (r.ok) {\n      r.json()\n      .then((data) => {\n          let checkForReviews = data.filter((givenReview) => {\n              return (givenReview.artwork.identifier==movieInfo.id)\n          })\n          setReviews(checkForReviews)\n      })\n      }})}, [movieInfo])\n\n      function parseReviewData(reviews){\n        if (reviews.length>0){\n          let numberOfReviews = reviews.length\n          let cumulativeScore = 0\n          for (const eachReview of reviews){\n            cumulativeScore=cumulativeScore+eachReview.rating\n          }\n          let averageRating=parseFloat(cumulativeScore/numberOfReviews)\n          return (\n            <>\n          <Rating label=\"Average Rating\" name=\"half-rating-read\" value={parseFloat(averageRating)} precision={0.5} readOnly />\n          <Typography variant=\"subtitle1\">Average Rating:</Typography>\n          <Typography variant=\"subtitle1\">{`${parseFloat(averageRating)} ☆ on ${numberOfReviews} reviews`}</Typography>\n          </>\n          )\n        }\n        else {\n          return (\n            <>\n          <Rating label=\"Average Rating\" name=\"half-rating-read\" value={0} precision={0.5} readOnly />\n          <Typography variant=\"subtitle1\">No reviews yet!</Typography>\n          </>\n          )\n        }\n      }\n\nreturn (\n  <Card sx={{ display: 'flex' }}>\n        <Grid container \n      spacing={0}\n      direction=\"row\"\n      justifyContent=\"center\"\n      alignItems=\"stretch\"\n      sx={{border: 2, borderColor: \"black\"}}>\n<Grid item xs={12} component={Box} sx={{ display: 'flex'}}>\n<CardMedia\ncomponent=\"img\"\n// height=\"100%\"\n// width=\"100%\"\nxs={12}\nsx={{ height: 470}}\nimage={\"https://image.tmdb.org/t/p/w500\" + `${movieInfo.poster_path}`}\nalt={`Poster for ${movieInfo.title} (${getYear(movieInfo)}) not found.`}\n/>\n</Grid>\n<Grid xs={12} item component={Box} sx={{display: 'flex', flexDirection: 'column' }}>\n<CardHeader\n          \n          title={`${movieInfo.title}`}\n          style={{ textAlign: 'center' }}\n          sx={{\n              color: \"white\",\n              // backgroundColor: \"blue\",\n              backgroundColor: \"black\",\n              border: 1, borderColor: \"#black\",\n              // height: 60\n          }}\n    >\n    </CardHeader>\n<CardContent sx={{ flex: '1 0 auto' }} style={{ textAlign: 'center' }}>\n  <Typography component=\"div\" variant=\"h6\">\n    {getYear(movieInfo)}\n  </Typography>\n  {parseReviewData(reviews)}\n</CardContent>\n</Grid>\n<Grid item xs={12} component={Button}\n                      variant=\"contained\"\n                      sx={{\n                        color: \"white\",\n                        // backgroundColor: \"blue\"\n                        backgroundColor: \"black\",\n                        border: 1, borderColor: \"#FFD700\"\n                    }}\n                    value={movieInfo.id}\n                    onClick={handleMovieSelect}\n                    >\n                      Add To Shelf\n                    </Grid>\n</Grid>\n\n</Card>\n)\n\n\n}\n\nexport default MovieSearchCard\n\n// return (\n//   <Card sx={{ display: 'flex' }}>\n// <Box sx={{ display: 'flex', flexDirection: 'column' }}>\n// <CardHeader\n// xs = {12}\n//       title={`${bookInfo.volumeInfo.title}`}\n//       style={{ textAlign: 'center' }}\n//       sx={{\n//           color: \"white\",\n//           backgroundColor: \"green\"\n//       }}\n// >\n// </CardHeader>\n// <CardContent sx={{ flex: '1 0 auto' }} style={{ textAlign: 'center' }}>\n// <Typography component=\"div\" variant=\"h5\" sx={{pb: 1}}>\n// {bookInfo.volumeInfo.authors[0]}\n// </Typography>\n// <Typography component=\"div\" variant=\"h5\">\n// {getYear(bookInfo)}\n// </Typography>\n// </CardContent>\n// <Box sx={{ display: 'flex', alignItems: 'center'}}>\n// </Box>\n// </Box>\n// <CardMedia\n// component=\"img\"\n// height=\"100%\"\n// width=\"100%\"\n// sx={{ width: 201, height: 302 }}\n// image={`${bookPicture(bookInfo.volumeInfo)}`}\n// alt={`${bookInfo.volumeInfo.title} Cover`}\n// />\n// </Card>\n// )","\nimport Button from \"@mui/material/Button\";\nimport Grid from \"@mui/material/Grid\";\nimport {ThemeProvider } from \"@mui/material/styles\";\nimport MovieSearchCard from \"./MovieSearchCard\";\n\n\nfunction MovieSearchContainer ({data, theme, setPage, page, setSelectedMovie, selectedMovie}) {\n\n    function handleNextPage(e){\n        let pageNum = parseInt(page)\n        let newPage = pageNum+1\n        let pageState = String(newPage)\n        setPage(pageState)\n    }\n\n    function handlePreviousPage(e){\n        let pageNum = parseInt(page)\n        if (pageNum > 1) {\n        let newPage = pageNum-1\n        let pageState = String(newPage)\n        setPage(pageState)\n        }\n    }\n\n    function handleMovieSelect(e){\n      setSelectedMovie(e.target.value)\n    }\n\n  const spawnMovieCards = data.map((givenMovie) => {\n    return (\n      <Grid item xs={12} sm={5} md={5} lg={3}  sx={{ mt: 3, mr: 5, display:\"flex\",}} key={givenMovie.id} align=\"center\">\n      <MovieSearchCard movieInfo={givenMovie} key={givenMovie.id} handleMovieSelect={handleMovieSelect}/>\n      </Grid>\n    )\n      })\n    \n\n      return (\n        <ThemeProvider theme={theme}>\n            <Grid container \n            spacing={2}\n            direction=\"row\"\n            justifyContent=\"center\"\n            alignItems=\"stretch\">\n            {spawnMovieCards}\n            </Grid>\n            <Grid container\n            spacing={1}\n            direction=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"stretch\"\n            sx={{mt: 3}}>\n        <Grid item component={Button}\n            align=\"center\"\n            xs={12} sm={6}\n            \n                          variant=\"contained\"\n                          onClick={handlePreviousPage}\n                          sx={{ mt: 3, mb: 2,border: 1, borderColor: \"#FFD700\", borderTop: 1}}\n                        >\n                          Previous Page\n                        </Grid>\n          <Grid item component={Button}\n          xs={12} sm={6}\n                          variant=\"contained\"\n                          onClick={handleNextPage}\n                          sx={{ mt: 3, mb: 2, border: 1, borderColor: \"#FFD700\", borderTop: 1}}\n                        >\n                          Next Page\n                        </Grid>\n                        </Grid>\n      </ThemeProvider>\n        )\n}\n\n\n\nexport default MovieSearchContainer","import React, { useState, useEffect } from \"react\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardHeader from '@mui/material/CardHeader'\nimport Button from '@mui/material/Button';\nimport Box from \"@mui/material/Box\";\nimport Typography from '@mui/material/Typography';\nimport { Grid } from \"@mui/material\";\nimport Rating from '@mui/material/Rating';\nimport TextField from '@mui/material/TextField'\n\nfunction AddMovie({id, user}) {\n    const [movieInfo, setMovieInfo] = useState(false)\n    const [rating,setRating] = useState(2.5)\n    const [review,setReview] = useState(\"It stinks! -Jay Sherman, The Critic\")\n    const [hasReviewed,setHasReviewed] = useState(false)\n    const [submitted,setSubmitted] = useState(false)\n    const [reviewDate,setReviewDate] = useState(\"\")\n    \n    function getReviewDate(reviewData){\n      let year = reviewData.slice(0,4)\n      let month = reviewData.slice(5,7)\n      let day = reviewData.slice(8,10)\n      let date = `${month}-${day}-${year}`\n      return date\n    }\n\n    useEffect(() => {\n        fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=3776580a8d92df7064c0e2ee058f3d0d`)\n        .then((r) => {\n          if (r.ok) {\n            r.json()\n            .then((data) => {\n              if (data) {\n                setMovieInfo(data)\n                }\n                })\n            }})}, [id])\n\n            useEffect(() => {\n                fetch(`/users/${user.id}/reviews`)\n                .then((r) => {\n                  if (r.ok) {\n                    r.json()\n                    .then((data) => {\n                        let checkForReview = data.map((givenReview) => {\n                            if (givenReview.artwork.identifier === id){\n                                setHasReviewed(givenReview)\n                                setRating(givenReview.rating)\n                                setReview(givenReview.review_text)\n                                setReviewDate(givenReview.updated_at)\n                            }\n                        })\n                    })\n                    }})}, [id,movieInfo,submitted])\n\n    function handleSubmit(e){\n        e.preventDefault()\n        let identifier = id\n        let title = movieInfo.title\n        let discipline = 1\n        submitArtwork(discipline,identifier,title,rating,review,user,e)\n    }\n\n    function handleUpdate(e){\n        e.preventDefault()\n       let new_review = {\n           id: hasReviewed.id,\n           artwork_id: hasReviewed.artwork_id,\n           user_id: hasReviewed.user_id,\n           rating: rating,\n           review_text: review\n       } \n       fetch(`/reviews/${hasReviewed.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(new_review),\n      }).then((res) => {\n        if (res.ok) {\n          res.json().then((reviewInDB) => {\n            setSubmitted(reviewInDB)\n            e.target.reset()\n          });\n        } else {\n          res.json().then((errors) => console.log(errors));\n        }\n      });\n    }\n\n    function submitArtwork(discipline,identifier,name,rating,review,user,e){\n        let artwork = {\n            identifier: identifier,\n            discipline_id: discipline,\n            name: name\n        }\n        fetch(\"/artworks\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(artwork),\n          }).then((res) => {\n            if (res.ok) {\n              res.json().then((artworkInDB) => {\n                let newReview = {\n                    rating: rating,\n                    review_text: review,\n                    user_id: user.id,\n                    artwork_id: artworkInDB.id\n                }\n                submitReview(newReview,e)\n              });\n            } else {\n              res.json().then((errors) => console.log(errors));\n            }\n          });\n    }\n\n    function submitReview(review,e) {\n        fetch(\"/reviews\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(review),\n          }).then((res) => {\n            if (res.ok) {\n              res.json().then((reviewInDB) => {\n                setSubmitted(reviewInDB)\n                e.target.reset();\n              });\n            } else {\n              res.json().then((errors) => console.log(errors));\n            }\n          })};\n\n    function handleRating(e){\n        setRating(e.target.value)\n    }\n\n    function handleReview(e){\n        setReview(e.target.value)\n    }\n\n    function getYear(movieInfo) {\n        if (movieInfo.release_date) {\n        let release_date = movieInfo.release_date\n        let year = release_date.slice(0,4)\n        return year\n        }\n        else {\n          return movieInfo.release_date\n        }\n      }\n    \n    function moviePicture(movieInfo){\n        if (movieInfo.poster_path){\n            return (\"https://image.tmdb.org/t/p/w500\" + `${movieInfo.poster_path}`)\n        }\n        else {\n            return (\"https://st3.depositphotos.com/23594922/31822/v/600/depositphotos_318221368-stock-illustration-missing-picture-page-for-website.jpg\")\n        }\n    }\n\n      function cleanUpSummary(summary){\n          let noBold = summary.replaceAll(\"<b>\",\"\")\n          let noBoldClose = noBold.replaceAll(\"</b>\",\"\")\n          let noItalic = noBoldClose.replaceAll(\"<i>\",\"\")\n          let noItalicClose = noItalic.replaceAll(\"</i>\",\"\")\n          let noP = noItalicClose.replaceAll(\"<p>\",\"\")\n          let noPClose = noP.replaceAll(\"</p>\",\"\")\n          let noBR = noPClose.replaceAll(\"<br>\",\"-\")\n          let noBRClose = noBR.replaceAll(\"</br>\",\"\")\n          return noBRClose\n      }\n\n      function shortSummary(movieInfo) {\n        if (movieInfo.overview) {\n        let splitSummary = movieInfo.overview.split(\" \")\n        let shortenedSummary = splitSummary.slice(0,100)\n        let summary = shortenedSummary.join(\" \")\n        let cleanSummary = cleanUpSummary(summary)\n        return (cleanSummary + \"...\")\n        }\n        else {\n          return movieInfo.overview\n        }\n      }\n\n    if (movieInfo && hasReviewed===false) {\n            return (<Card sx={{width:\"50vw\", border: 1, borderColor: \"black\"}} >\n            <CardHeader\n                    xs = {12}\n                                title={`${movieInfo.title}`}\n                                style={{ textAlign: 'center' }}\n                                sx={{\n                                    color: \"white\",\n                                    backgroundColor: \"black\",\n                                    border: 1,\n                                    borderColor: \"#FFD700\"\n                                }}\n                          >\n                          </CardHeader>\n                          <CardMedia\n                      component=\"img\"\n                      height=\"100%\"\n                      width=\"100%\"\n                      sx={{ width: \"20vw\", height: \"30vw\", float:\"right\" }}\n                      image={`${moviePicture(movieInfo)}`}\n              alt={`${movieInfo.title} Cover`}\n                    />\n                      <CardContent sx={{ flex: '1 0 auto' }} style={{ textAlign: 'center' }}>\n                      <Typography component=\"div\" variant=\"h5\">\n                  {getYear(movieInfo)}\n                </Typography>\n                <Typography component=\"div\" variant=\"h7\">\n                  {shortSummary(movieInfo)}\n                </Typography>\n                      </CardContent>\n                      <Box textAlign='center' component=\"form\" onSubmit={handleSubmit}> \n                      <CardActions style={{justifyContent: 'center'}} sx={{alignItems: 'center', width:\"29.8vw\"}}>\n                      <Grid container spacing={1} style={{ justifyContent: \"center\"}}>\n                      <Rating label = \"Rating\" sx={{ mt: 1, mr: 1,}} name=\"half-rating\" value={rating} precision={0.5} onChange={handleRating}/>\n                      <TextField\n                  id=\"filled-multiline-static\"\n                  label=\"Your Review\"\n                  multiline\n                  rows={4}\n                  fullWidth\n                  value={review}\n                  variant=\"filled\"\n                  onChange={handleReview}\n        \n                />\n                   <Grid item component={Button}\n                          type=\"submit\"\n                          variant=\"contained\"\n                          sx={{ mt: 1, mb: .1, color: \"white\", backgroundColor: \"black\" }}\n                        >\n                          Add To Shelf\n                        </Grid>\n                </Grid>\n                \n              </CardActions>\n                      </Box>\n                    </Card>\n        )\n    }\n    else if (movieInfo && hasReviewed) {\n            return (<Card sx={{width:\"50vw\", border: 1, borderColor: \"black\"}} >\n            <CardHeader\n                    xs = {12}\n                                title={`${movieInfo.title}`}\n                                style={{ textAlign: 'center' }}\n                                sx={{\n                                    color: \"white\",\n                                    backgroundColor: \"black\",\n                                    border: 1,\n                                    borderColor: \"#FFD700\"\n                                }}\n                          >\n                          </CardHeader>\n                          <CardMedia\n                      component=\"img\"\n                      height=\"100%\"\n                      width=\"100%\"\n                      sx={{ width: \"20vw\", height: \"30vw\", float:\"right\" }}\n                      image={`${moviePicture(movieInfo)}`}\n              alt={`${movieInfo.title} Cover`}\n                    />\n                      <CardContent sx={{ flex: '1 0 auto' }} style={{ textAlign: 'center' }}>\n                      <Typography component=\"div\" variant=\"h5\">\n                  {getYear(movieInfo)}\n                </Typography>\n                <Typography component=\"div\" variant=\"h7\">\n                  {shortSummary(movieInfo)}\n                </Typography>\n                      </CardContent>\n                      <Box textAlign='center' component=\"form\" onSubmit={handleUpdate}> \n                      <CardActions style={{justifyContent: 'center'}} sx={{alignItems: 'center', width:\"29.8vw\"}}>\n                      <Grid container spacing={1} style={{ justifyContent: \"center\"}}>\n                      <Rating label = \"Rating\" sx={{ mt: 1, mr: 1,}} name=\"half-rating\" value={rating} precision={0.5} onChange={handleRating}/>\n                      <TextField\n                  id=\"filled-multiline-static\"\n                  label=\"Your Review\"\n                  multiline\n                  rows={4}\n                  fullWidth\n                  value={review}\n                  variant=\"filled\"\n                  onChange={handleReview}\n        \n                />\n                   <Grid item xs={12} component={Typography} variant=\"subtitle1\" sx={{mt:1}} fontSize=\".75vw\" textAlign=\"center\">\n              {`Previous Review on: ${getReviewDate(reviewDate)}`}\n          </Grid>\n                   <Grid item component={Button}\n                          type=\"submit\"\n                          variant=\"contained\"\n                          sx={{ mt: 1, mb: .1, color: \"white\", backgroundColor: \"black\" }}\n                        >\n                          Update Review\n                        </Grid>\n                </Grid>\n                \n              </CardActions>\n                      </Box>\n                    </Card>\n        )\n    }\n    else {\n        return (\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\n          Loading...\n        </Typography>\n        )\n    }\n}\n\n\n\nexport default AddMovie\n","import React, { useState, useEffect } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport {ThemeProvider } from \"@mui/material/styles\";\nimport Autocomplete from '@mui/material/Autocomplete';\nimport FormGroup from '@mui/material/FormGroup';\nimport Button from \"@mui/material/Button\";\nimport List from '@mui/material/List'\nimport ListItem from '@mui/material/ListItem'\nimport MovieSearchContainer from \"./MovieSearchContainer\";\nimport { Typography } from \"@mui/material\";\nimport AddMovie from \"./AddMovie\";\n\nfunction SearchMovies({theme, searchedCategory, setSearchedCategory, user}) {\n\nconst [movieQuery, setMovieQuery] = useState(\"Dune\")\nconst [movieOptions,setMovieOptions] = useState([])\nconst [movieResults,setMovieResults] = useState([])\nconst [searched, setSearched] = useState(false)\nconst [selectedMovie,setSelectedMovie] = useState(false)\nconst [page,setPage] = useState(\"1\")\n\n\nfunction handleMovieQuery(event,value){\n    if (searchedCategory !== \"Movies\"){\n        setSearchedCategory(\"Movies\")\n    }\n    let input\n    if (value.includes(\" (\")){\n        let index = value.indexOf(\" (\")\n        input = value.slice(0,index)\n    }\n    if (input !== movieQuery){\n    setMovieQuery(value)\n    }\n}\n\nuseEffect(() => {\n    fetch(`https://api.themoviedb.org/3/search/movie?api_key=3776580a8d92df7064c0e2ee058f3d0d&language=en-US&query=${movieQuery}&page=${page}&include_adult=false`)\n    .then((r) => {\n      if (r.ok) {\n        r.json()\n        .then((data) => {\n          if (data.results) {\n            setMovieResults(data.results)\n            let titles = data.results.map((givenItem) => {\n              return (givenItem.title)\n            })\n            setMovieOptions(titles)\n            }\n            })\n        }})}, [movieQuery,page])\n\n        function handleMovieLabels(option) {\n            let label = option\n            for (const givenResult of movieResults){\n                if (option===givenResult.title && givenResult.release_date){\n                    label = (`${option} (${givenResult.release_date.slice(0,4)})`)\n                }\n            }\n            return label\n        }\n\nfunction handleMovieSubmit(e){\n    setSearchedCategory(\"Movies\")\n    e.preventDefault()\n    setSearched(true)\n}\n\nfunction handleResetSearch(e){\n    setSearched(false)\n    setMovieQuery(\"Dune\")\n    setMovieResults([])\n    setMovieOptions([])\n}\n\nfunction handleResetSelection(e){\n  setSelectedMovie(false)\n  setSearched(false)\n  setMovieQuery(\"Dune\")\n  setMovieResults([])\n  setMovieOptions([])\n}\nif (searched===false && selectedMovie===false) {\n        return (\n            <ThemeProvider theme={theme}>\n                <Box\n                  sx={{\n                    marginTop: 3,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                  }}\n                  component=\"form\"\n                  onSubmit={handleMovieSubmit}\n                >\n        <Autocomplete\n          disablePortal\n          id=\"combo-box-demo\"\n          options={[...movieOptions]}\n          onInputChange={handleMovieQuery}\n          sx={{ width: 300 }}\n          getOptionLabel={option => handleMovieLabels(option)}\n          renderOption={(props, option) => {\n            return (\n              <li {...props} key={option.id}>\n                {handleMovieLabels(option)}\n              </li>\n            );\n          }}\n          renderInput={(params) => <TextField {...params} label=\"Movies\" />}\n        />\n         <Button\n                          type=\"submit\"\n                          variant=\"contained\"\n                          sx={{ mt: 1, mb: 2 }}\n                        >\n                          Search\n                        </Button>\n            <FormGroup>\n            <Typography component=\"div\" variant=\"h7\" align=\"center\" sx={{mt:2}}>\n      Or search for...\n    </Typography>\n            \n            <List sx={{display: \"flex\"}}>\n            \n              <ListItem>\n              <Button\n                          variant=\"contained\"\n                          value=\"Books\"\n                          label=\"Books\"\n                          href=\"/search/books\"\n                          sx={{ mt: 1, mb: 2 }}\n                        >\n                          Books\n                        </Button>\n              </ListItem>\n              <ListItem>\n              <Button\n                          variant=\"contained\"\n                          value=\"Video Games\"\n                          label=\"Video Games\"\n                          href=\"/search/games\"\n                          sx={{ mt: 1, mb: 2 }}\n                        >\n                          Games\n                        </Button>\n              </ListItem>\n              <ListItem>\n              <Button\n                          variant=\"contained\"\n                          value=\"TV\"\n                          label=\"TV\"\n                          href=\"/search/TV\"\n                          sx={{ mt: 1, mb: 2 }}\n                        >\n                          TV\n                        </Button>\n                        </ListItem>\n                        <ListItem>\n                        <Button\n                          variant=\"contained\"\n                          value=\"Music\"\n                          label=\"Music\"\n                          href=\"/search/music\"\n                          sx={{ mt: 1, mb: 2 }}\n                        >\n                          Music\n                        </Button>\n\n              </ListItem>\n              </List>\n            </FormGroup>\n            </Box>\n            </ThemeProvider>\n        )\n                }\n\nif (searched===true && searchedCategory===\"Movies\" && selectedMovie===false){\n    return (\n        <ThemeProvider theme={theme}>\n            <Box\n              sx={{\n                marginTop: 3,\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n              }}\n            >\n                 <Typography variant=\"h5\" component=\"div\">\n              Results for {`${movieQuery}, Page ${page}`}\n            </Typography>\n        <Button\n                      type=\"submit\"\n                      variant=\"contained\"\n                      onClick={handleResetSearch}\n                      sx={{ mt: 3, mb: 2 }}\n                    >\n                      Reset\n                    </Button>\n        </Box>\n       \n        <MovieSearchContainer theme={theme} data={movieResults} setPage={setPage} page={page} selectedMovie={selectedMovie} setSelectedMovie={setSelectedMovie}/>\n        </ThemeProvider>\n        \n    )\n}\nif (searched===true && searchedCategory===\"Movies\" && selectedMovie){\n  return (\n      <ThemeProvider theme={theme}>\n          <Box\n            sx={{\n              marginTop: 3,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}>\n                <AddMovie id={selectedMovie} user={user} />\n                <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    onClick={handleResetSelection}\n                    sx={{ mt: 3, mb: 2 }}\n                  >\n                    Reset\n                  </Button>\n            </Box>\n      </ThemeProvider>\n      \n  )\n}\n}\n\n\nexport default SearchMovies","import React, { useState,useEffect } from \"react\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardHeader from '@mui/material/CardHeader'\nimport Button from '@mui/material/Button';\nimport Box from \"@mui/material/Box\";\nimport Typography from '@mui/material/Typography';\nimport Rating from '@mui/material/Rating';\nimport { Grid } from \"@mui/material\";\n\n\nfunction BookSearchCard ({bookInfo, theme, handleBookSelect}) {\nconst [reviews,setReviews] = useState([])\n\nfunction getYear(bookInfo) {\n    if (bookInfo.volumeInfo.publishedDate) {\n    let release_date = bookInfo.volumeInfo.publishedDate\n    let year = release_date.slice(0,4)\n    return year\n    }\n    else {\n      return bookInfo.volumeInfo.publishedDate\n    }\n  }\n\nfunction bookPicture(vi){\n    if (vi.imageLinks){\n        if (vi.imageLinks.thumbnail){\n            return vi.imageLinks.thumbnail\n        }\n        else if (vi.imageLinks.smallThumbnail){\n            return vi.imageLinks.smallThumbnail\n        }\n    }\n    else {\n        return (\"https://st3.depositphotos.com/23594922/31822/v/600/depositphotos_318221368-stock-illustration-missing-picture-page-for-website.jpg\")\n    }\n}\n\nuseEffect(() => {\n  fetch(`/reviews`)\n  .then((r) => {\n    if (r.ok) {\n      r.json()\n      .then((data) => {\n          let checkForReviews = data.filter((givenReview) => {\n              return (givenReview.artwork.identifier==bookInfo.id)\n          })\n          setReviews(checkForReviews)\n      })\n      }})}, [bookInfo])\n\n      function parseReviewData(reviews){\n        if (reviews.length>0){\n          let numberOfReviews = reviews.length\n          let cumulativeScore = 0\n          for (const eachReview of reviews){\n            cumulativeScore=cumulativeScore+eachReview.rating\n          }\n          let averageRating=parseFloat(cumulativeScore/numberOfReviews)\n          return (\n            <>\n          <Rating label=\"Average Rating\" name=\"half-rating-read\" value={parseFloat(averageRating)} precision={0.5} readOnly />\n          <Typography variant=\"subtitle1\">Average Rating:</Typography>\n          <Typography variant=\"subtitle1\">{`${parseFloat(averageRating)} ☆ on ${numberOfReviews} reviews`}</Typography>\n          </>\n          )\n        }\n        else {\n          return (\n            <>\n          <Rating label=\"Average Rating\" name=\"half-rating-read\" value={0} precision={0.5} readOnly />\n          <Typography variant=\"subtitle1\">No reviews yet!</Typography>\n          </>\n          )\n        }\n      }\n\n\nif (bookInfo) { \n//     return (\n//         <Card sx={{ display: 'flex' }} >\n// <Box sx={{ display: 'flex', flexDirection: 'column' }}>\n// <CardHeader\n// xs={12}\n//             title={`${bookInfo.volumeInfo.title}`}\n//             style={{ textAlign: 'center' }}\n//             sx={{\n//                 color: \"white\",\n//                 backgroundColor: \"black\",\n//                 // backgroundColor: \"green\",\n//                 height: 100\n//             }}\n//       >\n//       </CardHeader>\n//   <CardContent sx={{ flex: '1 0 auto' }} style={{ textAlign: 'center' }}>\n//     <Typography component=\"div\" variant=\"h6\" sx={{pb:1, height:60}}>\n//       {bookInfo.volumeInfo.authors[0]}\n//     </Typography>\n//     <Typography component=\"div\" variant=\"h6\">\n//       {getYear(bookInfo)}\n//     </Typography>\n//     {/* <Typography component=\"div\" variant=\"h7\">\n//       {shortSummary(bookInfo)}\n//     </Typography> */}\n//     {parseReviewData(reviews)}\n//     {/* <Rating label=\"Average Rating\" name=\"half-rating-read\" defaultValue={2.5} precision={0.5} readOnly />\n//     <Typography variant=\"subtitle1\">Average Rating</Typography>\n//     <Typography variant=\"subtitle1\">x on y Reviews</Typography> */}\n//   </CardContent>\n// </Box>\n// <Box sx={{ display: 'flex', alignItems: 'right'}}>\n// <CardMedia\n//   component=\"img\"\n//   height=\"100%\"\n//   width=\"100%\"\n//   sx={{ width: 201, height: 302 }}\n//   image={`${bookPicture(bookInfo.volumeInfo)}`}\n//   alt={`${bookInfo.volumeInfo.title} Cover`}\n// />\n// </Box>\n// </Card>\n//     )\nreturn (\n    <Card sx={{ display: 'flex' }}>\n          <Grid container \n        spacing={0}\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"stretch\"\n        sx={{border: 2, borderColor: \"black\"}}>\n<Grid item xs={12} component={Box} sx={{ display: 'flex'}}>\n<CardMedia\n  component=\"img\"\n  // height=\"100%\"\n  // width=\"100%\"\n  xs={12}\n  sx={{ height: 470}}\n  image={`${bookPicture(bookInfo.volumeInfo)}`}\n  alt={`${bookInfo.volumeInfo.title} Cover`}\n/>\n</Grid>\n<Grid xs={12} item component={Box} sx={{display: 'flex', flexDirection: 'column' }}>\n<CardHeader\n            \n            title={`${bookInfo.volumeInfo.title}`}\n            style={{ textAlign: 'center' }}\n            sx={{\n                color: \"white\",\n                // backgroundColor: \"blue\",\n                backgroundColor: \"black\",\n                border: 1, borderColor: \"#black\",\n                // height: 60\n            }}\n      >\n      </CardHeader>\n  <CardContent sx={{ flex: '1 0 auto' }} style={{ textAlign: 'center' }}>\n    <Typography component=\"div\" variant=\"h6\" sx={{height:30}}>\n       {bookInfo.volumeInfo.authors[0]}\n     </Typography>\n    <Typography component=\"div\" variant=\"h6\">\n    {getYear(bookInfo)}\n    </Typography>\n    {parseReviewData(reviews)}\n  </CardContent>\n  </Grid>\n  <Grid item xs={12} component={Button}\n                        variant=\"contained\"\n                        sx={{\n                          color: \"white\",\n                          // backgroundColor: \"blue\"\n                          backgroundColor: \"black\",\n                          border: 1, borderColor: \"#FFD700\"\n                      }}\n                      value={bookInfo.id}\n                      onClick={handleBookSelect}\n                      >\n                        Add To Shelf\n                      </Grid>\n</Grid>\n\n</Card>\n)\n    \n          }\nelse {\n  return (\n    <Typography gutterBottom variant=\"h5\" component=\"div\">\n          Loading...\n        </Typography>\n  )\n}\n\n\n}\n\nexport default BookSearchCard","\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport {ThemeProvider } from \"@mui/material/styles\";\nimport BookSearchCard from \"./BookSearchCard\";\n\n\nfunction BookSearchContainer ({data, theme, setPage, page, searchedCategory, setSelectedBook, selectedBook}) {\n\n    function handleNextPage(e){\n        let pageNum = parseInt(page)\n        let newPage = pageNum+1\n        let pageState = String(newPage)\n        setPage(pageState)\n    }\n\n    function handlePreviousPage(e){\n        let pageNum = parseInt(page)\n        if (pageNum > 1) {\n        let newPage = pageNum-1\n        let pageState = String(newPage)\n        setPage(pageState)\n        }\n    }\n\n    function handleBookSelect(e){\n      setSelectedBook(e.target.value)\n    }\n\n  const spawnBookCards = data.map((givenBook) => {\n      let counter = 0\n    if (counter <= parseInt(page)*10) {\n        counter=counter+1\n        return (\n          <Grid item xs={12} sm={5} md={5} lg={3}  sx={{ mt: 3, mr: 5, display:\"flex\",}} key={givenBook.id} align=\"center\">\n          <BookSearchCard bookInfo={givenBook} key={givenBook.id} handleBookSelect={handleBookSelect}/>\n          </Grid>\n        )}\n      })\n\n    // function makeBookCards(data){\n    //     let counter = 0\n    //     const bookCards = data.map((givenBook) => {\n    //     if (counter <= parseInt(page)*10) {\n    //         counter=counter+1\n    //         return (\n    //             <Grid item xs={3} sx={{ mt: 3, mr: 5 }} key={givenBook.id} align=\"center\">\n    //             <BookSearchCard bookInfo={givenBook} />\n    //             </Grid>\n    //           )}\n    //         })\n    //         return bookCards\n    //   }\n    \n    if (data) {\n      return (\n        <ThemeProvider theme={theme}>\n            <Grid container \n            spacing={2}\n            direction=\"row\"\n            justifyContent=\"center\"\n            alignItems=\"stretch\">\n            {spawnBookCards}\n            </Grid>\n            <Grid container\n            spacing={1}\n            direction=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"stretch\"\n            sx={{mt: 3}}>\n        <Grid item component={Button}\n            align=\"center\"\n            xs={12} sm={6}\n            \n                          variant=\"contained\"\n                          onClick={handlePreviousPage}\n                          sx={{ mt: 3, mb: 2,border: 1, borderColor: \"#FFD700\", borderTop: 1}}\n                        >\n                          Previous Page\n                        </Grid>\n          <Grid item component={Button}\n          xs={12} sm={6}\n                          variant=\"contained\"\n                          onClick={handleNextPage}\n                          sx={{ mt: 3, mb: 2, border: 1, borderColor: \"#FFD700\", borderTop: 1}}\n                        >\n                          Next Page\n                        </Grid>\n                        </Grid>\n      </ThemeProvider>\n        )\n  //   return (\n  //   <ThemeProvider theme={theme}>\n  //     <Box\n  //     container\n  //     noValidate\n  //     sx={{ mt: 2, display: 'flex', }}\n  //     style={{ justifyContent: \"center\"}}\n  //   >\n  //       <Grid container spacing={3} style={{ justifyContent: \"center\"}}>\n  //     {spawnBookCards}\n  //     </Grid>\n  //     </Box>\n  //   {/* <Box\n  //     container\n  //     noValidate\n  //     sx={{ mt: 3, display: 'flex', }}\n  //     style={{ justifyContent: \"center\"}}\n  //   >\n  //   <Button\n  //                     variant=\"contained\"\n  //                     onClick={handlePreviousPage}\n  //                     sx={{ mt: 3, mb: 2, mr: 1}}\n  //                   >\n  //                     Previous Page\n  //                   </Button>\n  //     <Button\n  //                     variant=\"contained\"\n  //                     onClick={handleNextPage}\n  //                     sx={{ mt: 3, mb: 2, ml: 1 }}\n  //                   >\n  //                     Next Page\n  //                   </Button>\n  //                   </Box> */}\n  // </ThemeProvider>\n  //   )\n                  }\n  else {\n    return (\n      <Typography gutterBottom variant=\"h5\" component=\"div\">\n          Loading...\n        </Typography>\n    )\n  }\n}\n\n\n\nexport default BookSearchContainer","import React, { useState, useEffect } from \"react\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardHeader from '@mui/material/CardHeader'\nimport Button from '@mui/material/Button';\nimport Box from \"@mui/material/Box\";\nimport Typography from '@mui/material/Typography';\nimport { Grid } from \"@mui/material\";\nimport Rating from '@mui/material/Rating';\nimport TextField from '@mui/material/TextField'\n\nfunction AddBook({id, user}) {\n    const [bookInfo, setBookInfo] = useState(false)\n    const [rating,setRating] = useState(2.5)\n    const [review,setReview] = useState(\"It stinks! -Jay Sherman, The Critic\")\n    const [hasReviewed,setHasReviewed] = useState(false)\n    const [submitted,setSubmitted] = useState(false)\n    const [reviewDate,setReviewDate] = useState(\"\")\n    \n    function getReviewDate(reviewData){\n      let year = reviewData.slice(0,4)\n      let month = reviewData.slice(5,7)\n      let day = reviewData.slice(8,10)\n      let date = `${month}-${day}-${year}`\n      return date\n    }\n                \n\n    useEffect(() => {\n        fetch(`https://www.googleapis.com/books/v1/volumes/${id}`)\n        .then((r) => {\n          if (r.ok) {\n            r.json()\n            .then((data) => {\n              if (data.volumeInfo) {\n                setBookInfo(data)\n                }\n                })\n            }})}, [id])\n\n            useEffect(() => {\n                fetch(`/users/${user.id}/reviews`)\n                .then((r) => {\n                  if (r.ok) {\n                    r.json()\n                    .then((data) => {\n                        let checkForReview = data.map((givenReview) => {\n                            if (givenReview.artwork.identifier === id){\n                                setHasReviewed(givenReview)\n                                setRating(givenReview.rating)\n                                setReview(givenReview.review_text)\n                                setReviewDate(givenReview.updated_at)\n                            }\n                        })\n                    })\n                    }})}, [id,bookInfo,submitted])\n\n    function handleSubmit(e){\n        e.preventDefault()\n        let identifier = id\n        let title = bookInfo.volumeInfo.title\n        let discipline = 2\n        submitArtwork(discipline,identifier,title,rating,review,user)\n    }\n\n    function handleUpdate(e){\n        e.preventDefault()\n       let new_review = {\n           id: hasReviewed.id,\n           artwork_id: hasReviewed.artwork_id,\n           user_id: hasReviewed.user_id,\n           rating: parseFloat(rating),\n           review_text: review\n       } \n       fetch(`/reviews/${hasReviewed.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(new_review),\n      }).then((res) => {\n        if (res.ok) {\n          res.json().then((reviewInDB) => {\n          });\n        } else {\n          res.json().then((errors) => console.log(errors));\n        }\n      });\n    }\n\n    function submitArtwork(discipline,identifier,name,rating,review,user){\n        let artwork = {\n            identifier: identifier,\n            discipline_id: discipline,\n            name: name\n        }\n        fetch(\"/artworks\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(artwork),\n          }).then((res) => {\n            if (res.ok) {\n              res.json().then((artworkInDB) => {\n                let newReview = {\n                    rating: parseFloat(rating),\n                    review_text: review,\n                    user_id: user.id,\n                    artwork_id: artworkInDB.id\n                }\n                submitReview(newReview)\n              });\n            } else {\n              res.json().then((errors) => console.log(errors));\n            }\n          });\n    }\n\n    function submitReview(review) {\n        fetch(\"/reviews\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(review),\n          }).then((res) => {\n            if (res.ok) {\n              res.json().then((reviewInDB) => {\n                setHasReviewed(true)\n                setSubmitted(reviewInDB);\n              });\n            } else {\n              res.json().then((errors) => console.log(errors));\n            }\n          })};\n\n    function handleRating(e){\n        setRating(e.target.value)\n    }\n\n    function handleReview(e){\n        setReview(e.target.value)\n    }\n\n    function getYear(bookInfo) {\n        if (bookInfo.volumeInfo.publishedDate) {\n        let release_date = bookInfo.volumeInfo.publishedDate\n        let year = release_date.slice(0,4)\n        return year\n        }\n        else {\n          return bookInfo.volumeInfo.publishedDate\n        }\n      }\n    \n    function bookPicture(vi){\n        if (vi.imageLinks){\n            if (vi.imageLinks.thumbnail){\n                return vi.imageLinks.thumbnail\n            }\n            else if (vi.imageLinks.smallThumbnail){\n                return vi.imageLinks.smallThumbnail\n            }\n        }\n        else {\n            return (\"https://st3.depositphotos.com/23594922/31822/v/600/depositphotos_318221368-stock-illustration-missing-picture-page-for-website.jpg\")\n        }\n    }\n\n      function cleanUpSummary(summary){\n          let noBold = summary.replaceAll(\"<b>\",\"\")\n          let noBoldClose = noBold.replaceAll(\"</b>\",\"\")\n          let noItalic = noBoldClose.replaceAll(\"<i>\",\"\")\n          let noItalicClose = noItalic.replaceAll(\"</i>\",\"\")\n          let noP = noItalicClose.replaceAll(\"<p>\",\"\")\n          let noPClose = noP.replaceAll(\"</p>\",\"\")\n          let noBR = noPClose.replaceAll(\"<br>\",\"-\")\n          let noBRClose = noBR.replaceAll(\"</br>\",\"\")\n          return noBRClose\n      }\n\n      function shortSummary(bookInfo) {\n        if (bookInfo.volumeInfo.description) {\n        let splitSummary = bookInfo.volumeInfo.description.split(\" \")\n        let shortenedSummary = splitSummary.slice(0,100)\n        let summary = shortenedSummary.join(\" \")\n        let cleanSummary = cleanUpSummary(summary)\n        return (cleanSummary + \"...\")\n        }\n        else {\n          return bookInfo.volumeInfo.description\n        }\n      }\n    if (bookInfo && hasReviewed===false) {\n      return (<Card sx={{width:\"50vw\", border: 1, borderColor: \"black\"}} >\n    <CardHeader\n            xs = {12}\n                        title={`${bookInfo.volumeInfo.title}`}\n                        subheader={`${bookInfo.volumeInfo.authors[0]}, ${getYear(bookInfo)}`}\n            subheaderTypographyProps={{color: \"white\"}}\n                        style={{ textAlign: 'center' }}\n                        sx={{\n                            color: \"white\",\n                            backgroundColor: \"black\",\n                            border: 1,\n                            borderColor: \"#FFD700\"\n                        }}\n                  >\n                  </CardHeader>\n                  <CardMedia\n              component=\"img\"\n              height=\"100%\"\n              width=\"100%\"\n              sx={{ width: \"20vw\", height: \"30vw\", float:\"right\" }}\n              image={`${bookPicture(bookInfo.volumeInfo)}`}\n              alt={`${bookInfo.volumeInfo.title} Cover`}\n            />\n              <CardContent sx={{ flex: '1 0 auto' }} style={{ textAlign: 'center' }}>\n                <Typography component=\"div\" variant=\"h7\">\n                  {shortSummary(bookInfo)}\n                </Typography>\n              </CardContent>\n              <Box textAlign='center' component=\"form\" onSubmit={handleSubmit}> \n              <CardActions style={{justifyContent: 'center'}} sx={{alignItems: 'center', width:\"29.8vw\"}}>\n              <Grid container spacing={1} style={{ justifyContent: \"center\"}}>\n              <Rating label = \"Rating\" sx={{ mt: 1, mr: 1,}} name=\"half-rating\" value={rating} precision={0.5} onChange={handleRating}/>\n              <TextField\n          id=\"filled-multiline-static\"\n          label=\"Your Review\"\n          multiline\n          rows={4}\n          fullWidth\n          value={review}\n          variant=\"filled\"\n          onChange={handleReview}\n\n        />\n           <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  sx={{ mt: 3, mb: 2, color: \"white\", backgroundColor: \"black\" }}\n                >\n                  Add To Shelf\n                </Button>\n        </Grid>\n        \n      </CardActions>\n              </Box>\n            </Card>\n)\n    }\n    else if (bookInfo && hasReviewed) {\n      return (<Card sx={{width:\"50vw\", border: 1, borderColor: \"black\"}} >\n      <CardHeader\n              xs = {12}\n                          title={`${bookInfo.volumeInfo.title}`}\n                          subheader={`${bookInfo.volumeInfo.authors[0]}, ${getYear(bookInfo)}`}\n              subheaderTypographyProps={{color: \"white\"}}\n                          style={{ textAlign: 'center' }}\n                          sx={{\n                              color: \"white\",\n                              backgroundColor: \"black\",\n                              border: 1,\n                              borderColor: \"#FFD700\"\n                          }}\n                    >\n                    </CardHeader>\n                    <CardMedia\n                component=\"img\"\n                height=\"100%\"\n                width=\"100%\"\n                sx={{ width: \"20vw\", height: \"30vw\", float:\"right\" }}\n                image={`${bookPicture(bookInfo.volumeInfo)}`}\n                alt={`${bookInfo.volumeInfo.title} Cover`}\n              />\n                <CardContent sx={{ flex: '1 0 auto' }} style={{ textAlign: 'center' }}>\n                  <Typography component=\"div\" variant=\"h7\">\n                    {shortSummary(bookInfo)}\n                  </Typography>\n                </CardContent>\n                <Box textAlign='center' component=\"form\" onSubmit={handleUpdate}> \n                <CardActions style={{justifyContent: 'center'}} sx={{alignItems: 'center', width:\"29.8vw\"}}>\n                <Grid container spacing={1} style={{ justifyContent: \"center\"}}>\n                <Rating label = \"Rating\" sx={{ mt: 1, mr: 1,}} name=\"half-rating\" value={rating} precision={0.5} onChange={handleRating}/>\n                <TextField\n            id=\"filled-multiline-static\"\n            label=\"Your Review\"\n            multiline\n            rows={4}\n            fullWidth\n            value={review}\n            variant=\"filled\"\n            onChange={handleReview}\n  \n          />\n             <Grid item xs={12} component={Typography} variant=\"subtitle1\" sx={{mt:1}} fontSize=\".75vw\" textAlign=\"center\">\n              {`Previous Review on: ${getReviewDate(reviewDate)}`}\n          </Grid>\n                   <Grid item component={Button}\n                          type=\"submit\"\n                          variant=\"contained\"\n                          sx={{ mt: 1, mb: .1, color: \"white\", backgroundColor: \"black\" }}\n                        >\n                          Update Review\n                        </Grid>\n                </Grid>\n          \n        </CardActions>\n                </Box>\n              </Card>\n  )\n    }\n    else {\n        return (\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\n          Loading...\n        </Typography>\n        )\n    }\n}\n\n\n\nexport default AddBook\n","import React, { useState, useEffect } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport {ThemeProvider } from \"@mui/material/styles\";\nimport Autocomplete from '@mui/material/Autocomplete';\nimport FormGroup from '@mui/material/FormGroup';\nimport Button from \"@mui/material/Button\";\nimport List from '@mui/material/List'\nimport ListItem from '@mui/material/ListItem'\nimport BookSearchContainer from \"./BookSearchContainer\";\nimport { Typography } from \"@mui/material\";\nimport AddBook from \"./AddBook\";\n\nfunction SearchBooks({theme, searchedCategory, setSearchedCategory, user}) {\n\nconst [bookQuery, setBookQuery] = useState(\"Dune\")\nconst [bookOptions,setBookOptions] = useState([])\nconst [bookResults,setBookResults] = useState([])\nconst [searched, setSearched] = useState(false)\nconst [selectedBook,setSelectedBook] = useState(false)\nconst [page,setPage] = useState(\"1\")\n\n\nfunction handleBookQuery(event,value){\n    if (searchedCategory !== \"Books\"){\n        setSearchedCategory(\"Books\")\n    }\n    let input\n    if (value.includes(\" // \")){\n        let index = value.indexOf(\" // \")\n        input = value.slice(0,index)\n    }\n    if (input !== bookQuery){\n    setBookQuery(value)\n    }\n}\n\nuseEffect(() => {\n    fetch(`https://www.googleapis.com/books/v1/volumes?q=intitle:${bookQuery}&key=AIzaSyDvX5bZMWbNLS_Ey8Aa-zpELXJdY7XcYqE`)\n    .then((r) => {\n      if (r.ok) {\n        r.json()\n        .then((data) => {\n          if (data.items) {\n            setBookResults(data.items)\n            let titles = data.items.map((givenItem) => {\n              return (givenItem.volumeInfo.title)\n            })\n            setBookOptions(titles)\n            }\n            })\n        }})}, [bookQuery])\n\n        function handleBookLabels(option) {\n            let label = option\n            for (const givenResult of bookResults){\n                if (option===givenResult.volumeInfo.title && givenResult.volumeInfo.authors){\n                    label = (`${option} // (${givenResult.volumeInfo.authors[0]})`)\n                }\n            }\n            return label\n        }\n\nfunction handleBookSubmit(e){\n    setSearchedCategory(\"Books\")\n    e.preventDefault()\n    setSearched(true)\n}\n\nfunction handleResetSearch(e){\n    setSearched(false)\n    setBookQuery(\"Dune\")\n    setBookResults([])\n    setBookOptions([])\n}\n\nfunction handleResetSelection(e){\n    setSelectedBook(false)\n    setSearched(false)\n    setBookQuery(\"Dune\")\n    setBookResults([])\n    setBookOptions([])\n}\nif (searched===false && selectedBook===false) {\n        return (\n            <ThemeProvider theme={theme}>\n                <Box\n                  sx={{\n                    marginTop: 3,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                  }}\n                  component=\"form\"\n                  onSubmit={handleBookSubmit}\n                >\n        <Autocomplete\n          disablePortal\n          id=\"combo-box-demo\"\n          options={[...bookOptions]}\n          onInputChange={handleBookQuery}\n          sx={{ width: 300 }}\n          getOptionLabel={option => handleBookLabels(option)}\n          renderOption={(props, option) => {\n            return (\n              <li {...props} key={option.id}>\n                {handleBookLabels(option)}\n              </li>\n            );\n          }}\n          renderInput={(params) => <TextField {...params} label=\"Books\" />}\n        />\n        \n    <Button\n                          type=\"submit\"\n                          variant=\"contained\"\n                          sx={{ mt: 1, mb: 2 }}\n                        >\n                          Search\n                        </Button>\n            <FormGroup>\n            <Typography component=\"div\" variant=\"h7\" align=\"center\" sx={{mt:2}}>\n      Or search for...\n    </Typography>\n            <List sx={{display: \"flex\"}}>\n              <ListItem>\n              <Button\n                          variant=\"contained\"\n                          value=\"Books\"\n                          label=\"Books\"\n                          href=\"/search/movies\"\n                          sx={{ mt: 1, mb: 2 }}\n                        >\n                          Movies\n                        </Button>\n              </ListItem>\n              <ListItem>\n              <Button\n                          variant=\"contained\"\n                          value=\"Video Games\"\n                          label=\"Video Games\"\n                          href=\"/search/games\"\n                          sx={{ mt: 1, mb: 2 }}\n                        >\n                          Games\n                        </Button>\n                        </ListItem>\n                        <ListItem>\n                        <Button\n                          variant=\"contained\"\n                          value=\"TV\"\n                          label=\"TV\"\n                          href=\"/search/TV\"\n                          sx={{ mt: 1, mb: 2 }}\n                        >\n                          TV\n                        </Button>\n                        </ListItem>\n                        <ListItem>\n                        <Button\n                          variant=\"contained\"\n                          value=\"Music\"\n                          label=\"Music\"\n                          href=\"/search/music\"\n                          sx={{ mt: 1, mb: 2 }}\n                        >\n                          Music\n                        </Button>\n\n              </ListItem>\n              </List>\n            </FormGroup>\n            \n            </Box>\n            </ThemeProvider>\n        )\n                }\n\nif (searched===true && searchedCategory===\"Books\" && selectedBook===false){\n    return (\n        <ThemeProvider theme={theme}>\n            <Box\n              sx={{\n                marginTop: 3,\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n              }}\n            >\n                 <Typography variant=\"h5\" component=\"div\">\n              Results for {`${bookQuery}, Page ${page}`}\n            </Typography>\n        <Button\n                      type=\"submit\"\n                      variant=\"contained\"\n                      onClick={handleResetSearch}\n                      sx={{ mt: 3, mb: 2 }}\n                    >\n                      Reset\n                    </Button>\n        </Box>\n       \n        <BookSearchContainer theme={theme} data={bookResults} setPage={setPage} page={page} setSelectedBook={setSelectedBook} selectedBook={selectedBook}/>\n        </ThemeProvider>\n        \n    )\n}\nif (searched===true && searchedCategory===\"Books\" && selectedBook){\n    return (\n        <ThemeProvider theme={theme}>\n            <Box\n              sx={{\n                marginTop: 3,\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n              }}>\n                  <AddBook id={selectedBook} user={user} />\n                  <Button\n                      type=\"submit\"\n                      variant=\"contained\"\n                      onClick={handleResetSelection}\n                      sx={{ mt: 3, mb: 2 }}\n                    >\n                      Reset\n                    </Button>\n              </Box>\n        </ThemeProvider>\n        \n    )\n}\n}\n\n\nexport default SearchBooks","import React, { useState, useEffect } from \"react\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardHeader from '@mui/material/CardHeader'\nimport Button from '@mui/material/Button';\nimport Box from \"@mui/material/Box\";\nimport Typography from '@mui/material/Typography';\nimport Rating from '@mui/material/Rating';\nimport { Grid } from \"@mui/material\";\n\n\nfunction TVSearchCard ({tvInfo, theme, handleTVSelect}) {\nconst [reviews,setReviews] = useState([])\n\nfunction getYear(tvInfo) {\n  if (tvInfo.first_air_date) {\n  let first_air_date = tvInfo.first_air_date\n  let year = first_air_date.slice(0,4)\n  return year\n  }\n  else {\n    return tvInfo.first_air_date\n  }\n}\n\n// function shortSummary(tvInfo) {\n//   if (tvInfo.overview) {\n//   let splitSummary = tvInfo.overview.split(\" \")\n//   let shortenedSummary = splitSummary.slice(0,15)\n//   let summary = shortenedSummary.join(\" \")\n//   return (summary + \"...\")\n//   }\n//   else {\n//     return tvInfo.overview\n//   }\n// }\n\nuseEffect(() => {\n  fetch(`/reviews`)\n  .then((r) => {\n    if (r.ok) {\n      r.json()\n      .then((data) => {\n        console.log(data)\n        console.log(tvInfo.id)\n          let checkForReviews = data.filter((givenReview) => {\n              return (givenReview.artwork.identifier==tvInfo.id)\n          })\n          setReviews(checkForReviews)\n          console.log(checkForReviews)\n      })\n      }})}, [tvInfo])\n\nfunction parseReviewData(reviews){\n  if (reviews.length>0){\n    let numberOfReviews = reviews.length\n    let cumulativeScore = 0\n    for (const eachReview of reviews){\n      cumulativeScore=cumulativeScore+eachReview.rating\n    }\n    let averageRating=parseFloat(cumulativeScore/numberOfReviews)\n    return (\n      <>\n    <Rating label=\"Average Rating\" name=\"half-rating-read\" value={parseFloat(averageRating)} precision={0.5} readOnly />\n    <Typography variant=\"subtitle1\">Average Rating:</Typography>\n    <Typography variant=\"subtitle1\">{`${parseFloat(averageRating)} ☆ on ${numberOfReviews} reviews`}</Typography>\n    </>\n    )\n  }\n  else {\n    return (\n      <>\n    <Rating label=\"Average Rating\" name=\"half-rating-read\" value={0} precision={0.5} readOnly />\n    <Typography variant=\"subtitle1\">No reviews yet!</Typography>\n    </>\n    )\n  }\n}\n    return (\n      <Card sx={{ display: 'flex' }}>\n            <Grid container \n          spacing={0}\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"stretch\"\n          sx={{border: 2, borderColor: \"black\"}}>\n  <Grid item xs={12} component={Box} sx={{ display: 'flex'}}>\n  <CardMedia\n    component=\"img\"\n    xs={12}\n    sx={{ height: 470}}\n    image={\"https://image.tmdb.org/t/p/w500\" + `${tvInfo.poster_path}`}\n  alt={`${tvInfo.name} Poster`}\n  />\n  </Grid>\n  <Grid xs={12} item component={Box} sx={{display: 'flex', flexDirection: 'column' }}>\n  <CardHeader\n              \n              title={`${tvInfo.name}`}\n              style={{ textAlign: 'center' }}\n              sx={{\n                  color: \"white\",\n                  backgroundColor: \"black\",\n                  border: 1, borderColor: \"#black\",\n              }}\n        >\n        </CardHeader>\n    <CardContent sx={{ flex: '1 0 auto' }} style={{ textAlign: 'center' }}>\n      <Typography component=\"div\" variant=\"h6\">\n      {getYear(tvInfo)}\n      </Typography>\n      {parseReviewData(reviews)}\n    </CardContent>\n    </Grid>\n    <Grid item xs={12} component={Button}\n                          variant=\"contained\"\n                          sx={{\n                            color: \"white\",\n                            backgroundColor: \"black\",\n                            border: 1, borderColor: \"#FFD700\"\n                        }}\n                        value={tvInfo.id}\n                        onClick={handleTVSelect}\n                        >\n                          Add To Shelf\n                        </Grid>\n  </Grid>\n  \n  </Card>\n  )\n\n}\n\nexport default TVSearchCard","import Button from \"@mui/material/Button\";\nimport Grid from \"@mui/material/Grid\";\nimport {ThemeProvider} from \"@mui/material/styles\";\nimport TVSearchCard from \"./TVSearchCard\";\n\n\nfunction TVSearchContainer ({data, theme, setPage, page, setSelectedTV, selectedTV}) {\n\n    function handleNextPage(e){\n        let pageNum = parseInt(page)\n        let newPage = pageNum+1\n        let pageState = String(newPage)\n        setPage(pageState)\n    }\n\n    function handlePreviousPage(e){\n        let pageNum = parseInt(page)\n        if (pageNum > 1) {\n        let newPage = pageNum-1\n        let pageState = String(newPage)\n        setPage(pageState)\n        }\n    }\n\n    function handleTVSelect(e){\n      setSelectedTV(e.target.value)\n    }\n\n  const spawnTVCards = data.map((givenTV) => {\n        return (\n          <Grid item xs={12} sm={5} md={5} lg={3}  sx={{ mt: 3, mr: 5, display:\"flex\" }} key={givenTV.id} align=\"center\">\n          <TVSearchCard tvInfo={givenTV} key={givenTV.id} handleTVSelect={handleTVSelect}/>\n          </Grid>\n        )\n      })\n    \n\n    return (\n      <ThemeProvider theme={theme}>\n      <Grid container \n      spacing={2}\n      direction=\"row\"\n      justifyContent=\"center\"\n      alignItems=\"stretch\">\n      {spawnTVCards}\n      </Grid>\n      <Grid container\n      spacing={1}\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"stretch\"\n      sx={{mt: 3}}>\n  <Grid item component={Button}\n      align=\"center\"\n      xs={12} sm={6}\n      \n                    variant=\"contained\"\n                    onClick={handlePreviousPage}\n                    sx={{ mt: 3, mb: 2,border: 1, borderColor: \"#FFD700\", borderTop: 1}}\n                  >\n                    Previous Page\n                  </Grid>\n    <Grid item component={Button}\n    xs={12} sm={6}\n                    variant=\"contained\"\n                    onClick={handleNextPage}\n                    sx={{ mt: 3, mb: 2, border: 1, borderColor: \"#FFD700\", borderTop: 1}}\n                  >\n                    Next Page\n                  </Grid>\n                  </Grid>\n</ThemeProvider>\n    )\n}\n\nexport default TVSearchContainer","import React, { useState, useEffect } from \"react\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardHeader from '@mui/material/CardHeader'\nimport Button from '@mui/material/Button';\nimport Box from \"@mui/material/Box\";\nimport Typography from '@mui/material/Typography';\nimport { Grid } from \"@mui/material\";\nimport Rating from '@mui/material/Rating';\nimport TextField from '@mui/material/TextField'\n\nfunction AddTV({id, user}) {\n    const [tvInfo, setTVInfo] = useState(false)\n    const [rating,setRating] = useState(2.5)\n    const [review,setReview] = useState(\"It stinks! -Jay Sherman, The Critic\")\n    const [hasReviewed,setHasReviewed] = useState(false)\n    const [hasSubmitted,setHasSubmitted] = useState(false)\n    const [reviewDate,setReviewDate] = useState(\"\")\n    \n    function getReviewDate(reviewData){\n      let year = reviewData.slice(0,4)\n      let month = reviewData.slice(5,7)\n      let day = reviewData.slice(8,10)\n      let date = `${month}-${day}-${year}`\n      return date\n    }\n\n    useEffect(() => {\n        fetch(`https://api.themoviedb.org/3/tv/${id}?api_key=3776580a8d92df7064c0e2ee058f3d0d`)\n        .then((r) => {\n          if (r.ok) {\n            r.json()\n            .then((data) => {\n              if (data) {\n                setTVInfo(data)\n                }\n                })\n            }})}, [id])\n\n            useEffect(() => {\n                fetch(`/users/${user.id}/reviews`)\n                .then((r) => {\n                  if (r.ok) {\n                    r.json()\n                    .then((data) => {\n                        let checkForReview = data.map((givenReview) => {\n                            if (givenReview.artwork.identifier === id){\n                                setHasReviewed(givenReview)\n                                setRating(givenReview.rating)\n                                setReview(givenReview.review_text)\n                                setReviewDate(givenReview.updated_at)\n                            }\n                        })\n                    })\n                    }})}, [id,tvInfo,hasSubmitted])\n\n    function handleSubmit(e){\n        e.preventDefault()\n        let identifier = id\n        let title = tvInfo.name\n        let discipline = 4\n        submitArtwork(discipline,identifier,title,rating,review,user,e)\n    }\n\n    function handleUpdate(e){\n        e.preventDefault()\n       let new_review = {\n           id: hasReviewed.id,\n           artwork_id: hasReviewed.artwork_id,\n           user_id: hasReviewed.user_id,\n           rating: rating,\n           review_text: review\n       } \n       fetch(`/reviews/${hasReviewed.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(new_review),\n      }).then((res) => {\n        if (res.ok) {\n          res.json().then((reviewInDB) => {\n            e.target.reset()\n          });\n        } else {\n          res.json().then((errors) => console.log(errors));\n        }\n      });\n    }\n\n    function submitArtwork(discipline,identifier,name,rating,review,user,e){\n        let artwork = {\n            identifier: identifier,\n            discipline_id: discipline,\n            name: name\n        }\n        fetch(\"/artworks\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(artwork),\n          }).then((res) => {\n            if (res.ok) {\n              res.json().then((artworkInDB) => {\n                let newReview = {\n                    rating: rating,\n                    review_text: review,\n                    user_id: user.id,\n                    artwork_id: artworkInDB.id\n                }\n                submitReview(newReview,e)\n              });\n            } else {\n              res.json().then((errors) => console.log(errors));\n            }\n          });\n    }\n\n    function submitReview(review,e) {\n        fetch(\"/reviews\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(review),\n          }).then((res) => {\n            if (res.ok) {\n              res.json().then((reviewInDB) => {\n                setHasSubmitted(reviewInDB)\n                e.target.reset();\n              });\n            } else {\n              res.json().then((errors) => console.log(errors));\n            }\n          })};\n\n    function handleRating(e){\n        setRating(e.target.value)\n    }\n\n    function handleReview(e){\n        setReview(e.target.value)\n    }\n\n    function getYear(tvInfo) {\n        if (tvInfo.first_air_date) {\n        let first_air_date = tvInfo.first_air_date\n        let year = first_air_date.slice(0,4)\n        return year\n        }\n        else {\n          return tvInfo.first_air_date\n        }\n      }\n    \n    function tvPicture(tvInfo){\n        if (tvInfo.poster_path){\n            return (\"https://image.tmdb.org/t/p/w500\" + `${tvInfo.poster_path}`)\n        }\n        else {\n            return (\"https://st3.depositphotos.com/23594922/31822/v/600/depositphotos_318221368-stock-illustration-missing-picture-page-for-website.jpg\")\n        }\n    }\n\n      function cleanUpSummary(summary){\n          let noBold = summary.replaceAll(\"<b>\",\"\")\n          let noBoldClose = noBold.replaceAll(\"</b>\",\"\")\n          let noItalic = noBoldClose.replaceAll(\"<i>\",\"\")\n          let noItalicClose = noItalic.replaceAll(\"</i>\",\"\")\n          let noP = noItalicClose.replaceAll(\"<p>\",\"\")\n          let noPClose = noP.replaceAll(\"</p>\",\"\")\n          let noBR = noPClose.replaceAll(\"<br>\",\"-\")\n          let noBRClose = noBR.replaceAll(\"</br>\",\"\")\n          return noBRClose\n      }\n\n      function shortSummary(movieInfo) {\n        if (movieInfo.overview) {\n        let splitSummary = movieInfo.overview.split(\" \")\n        let shortenedSummary = splitSummary.slice(0,100)\n        let summary = shortenedSummary.join(\" \")\n        let cleanSummary = cleanUpSummary(summary)\n        return (cleanSummary + \"...\")\n        }\n        else {\n          return movieInfo.overview\n        }\n      }\n\n    if (tvInfo && hasReviewed===false) {\n            return (<Card sx={{width:\"50vw\", border: 1, borderColor: \"black\"}} >\n            <CardHeader\n                    xs = {12}\n                                title={`${tvInfo.name}`}\n                                style={{ textAlign: 'center' }}\n                                sx={{\n                                    color: \"white\",\n                                    backgroundColor: \"black\",\n                                    border: 1,\n                                    borderColor: \"#FFD700\"\n                                }}\n                          >\n                          </CardHeader>\n                          <CardMedia\n                      component=\"img\"\n                      height=\"100%\"\n                      width=\"100%\"\n                      sx={{ width: \"20vw\", height: \"30vw\", float:\"right\" }}\n                      image={`${tvPicture(tvInfo)}`}\n              alt={`${tvInfo.name} Cover`}\n                    />\n                      <CardContent sx={{ flex: '1 0 auto' }} style={{ textAlign: 'center' }}>\n                      <Typography component=\"div\" variant=\"h5\">\n                  {getYear(tvInfo)}\n                </Typography>\n                <Typography component=\"div\" variant=\"h7\">\n                  {shortSummary(tvInfo)}\n                </Typography>\n                      </CardContent>\n                      <Box textAlign='center' component=\"form\" onSubmit={handleSubmit}> \n                      <CardActions style={{justifyContent: 'center'}} sx={{alignItems: 'center', width:\"29.8vw\"}}>\n                      <Grid container spacing={1} style={{ justifyContent: \"center\"}}>\n                      <Rating label = \"Rating\" sx={{ mt: 1, mr: 1,}} name=\"half-rating\" value={rating} precision={0.5} onChange={handleRating}/>\n                      <TextField\n                  id=\"filled-multiline-static\"\n                  label=\"Your Review\"\n                  multiline\n                  rows={4}\n                  fullWidth\n                  value={review}\n                  variant=\"filled\"\n                  onChange={handleReview}\n        \n                />\n                   <Button\n                          type=\"submit\"\n                          variant=\"contained\"\n                          sx={{ mt: 3, mb: 2, color: \"white\", backgroundColor: \"black\" }}\n                        >\n                          Add To Shelf\n                        </Button>\n                </Grid>\n                \n              </CardActions>\n                      </Box>\n                    </Card>\n        )\n    }\n    else if (tvInfo && hasReviewed) {\n            return (<Card sx={{width:\"50vw\", border: 1, borderColor: \"black\"}} >\n            <CardHeader\n                    xs = {12}\n                                title={`${tvInfo.name}`}\n                                style={{ textAlign: 'center' }}\n                                sx={{\n                                    color: \"white\",\n                                    backgroundColor: \"black\",\n                                    border: 1,\n                                    borderColor: \"#FFD700\"\n                                }}\n                          >\n                          </CardHeader>\n                          <CardMedia\n                      component=\"img\"\n                      height=\"100%\"\n                      width=\"100%\"\n                      sx={{ width: \"20vw\", height: \"30vw\", float:\"right\" }}\n                      image={`${tvPicture(tvInfo)}`}\n                      alt={`${tvInfo.name} Cover`}\n                    />\n                      <CardContent sx={{ flex: '1 0 auto' }} style={{ textAlign: 'center' }}>\n                      <Typography component=\"div\" variant=\"h5\">\n                  {getYear(tvInfo)}\n                </Typography>\n                <Typography component=\"div\" variant=\"h7\">\n                  {shortSummary(tvInfo)}\n                </Typography>\n                      </CardContent>\n                      <Box textAlign='center' component=\"form\" onSubmit={handleUpdate}> \n                      <CardActions style={{justifyContent: 'center'}} sx={{alignItems: 'center', width:\"29.8vw\"}}>\n                      <Grid container spacing={1} style={{ justifyContent: \"center\"}}>\n                      <Rating label = \"Rating\" sx={{ mt: 1, mr: 1,}} name=\"half-rating\" value={rating} precision={0.5} onChange={handleRating}/>\n                      <TextField\n                  id=\"filled-multiline-static\"\n                  label=\"Your Review\"\n                  multiline\n                  rows={4}\n                  fullWidth\n                  value={review}\n                  variant=\"filled\"\n                  onChange={handleReview}\n        \n                />\n                   <Grid item xs={12} component={Typography} variant=\"subtitle1\" sx={{mt:1}} fontSize=\".75vw\" textAlign=\"center\">\n              {`Previous Review on: ${getReviewDate(reviewDate)}`}\n          </Grid>\n                   <Grid item component={Button}\n                          type=\"submit\"\n                          variant=\"contained\"\n                          sx={{ mt: 1, mb: .1, color: \"white\", backgroundColor: \"black\" }}\n                        >\n                          Update Review\n                        </Grid>\n                </Grid>\n                \n              </CardActions>\n                      </Box>\n                    </Card>\n        )\n    }\n    else {\n        return (\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\n          Loading...\n        </Typography>\n        )\n    }\n}\n\n\n\nexport default AddTV","import React, { useState, useEffect } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport {ThemeProvider } from \"@mui/material/styles\";\nimport Autocomplete from '@mui/material/Autocomplete';\nimport FormGroup from '@mui/material/FormGroup';\nimport Button from \"@mui/material/Button\";\nimport List from '@mui/material/List'\nimport ListItem from '@mui/material/ListItem'\nimport { Typography } from \"@mui/material\";\nimport TVSearchContainer from \"./TVSearchContainer\";\nimport AddTV from \"./AddTV\";\n\nfunction SearchTV({theme, searchedCategory, setSearchedCategory, user}) {\n\nconst [tvQuery, setTVQuery] = useState(\"Dune\")\nconst [tvOptions,setTVOptions] = useState([])\nconst [tvResults,setTVResults] = useState([])\n// const [tvLabels, setTVLabels] = useState([])\nconst [searched, setSearched] = useState(false)\nconst [selectedTV,setSelectedTV] = useState(false)\nconst [page,setPage] = useState(\"1\")\n\n\nfunction handleTVQuery(event,value){\n    if (searchedCategory !== \"TV\"){\n        setSearchedCategory(\"TV\")\n    }\n    let input\n    if (value.includes(\" (\")){\n        let index = value.indexOf(\" (\")\n        input = value.slice(0,index)\n    }\n    if (input !== tvQuery){\n    setTVQuery(value)\n    }\n}\n\nuseEffect(() => {\n    fetch(`https://api.themoviedb.org/3/search/tv?api_key=3776580a8d92df7064c0e2ee058f3d0d&language=en-US&query=${tvQuery}&page=${page}&include_adult=false`)\n    .then((r) => {\n      if (r.ok) {\n        r.json()\n        .then((data) => {\n          if (data.results) {\n            setTVResults(data.results)\n            let titles = data.results.map((givenItem) => {\n              return (givenItem.name)\n            })\n            setTVOptions(titles)\n            }\n            })\n        }})}, [tvQuery,page])\n\n        function handleTVLabels(option) {\n            let label = option\n            for (const givenResult of tvResults){\n                if (option===givenResult.name && givenResult.first_air_date){\n                    label = (`${option} (${givenResult.first_air_date.slice(0,4)})`)\n                }\n            }\n            return label\n        }\n\nfunction handleTVSubmit(e){\n    setSearchedCategory(\"TV\")\n    e.preventDefault()\n    setSearched(true)\n}\n\nfunction handleResetSearch(e){\n    setSearched(false)\n    setTVQuery(\"Dune\")\n    setTVResults([])\n    setTVOptions([])\n}\n\nfunction handleResetSelection(e){\n  setSelectedTV(false)\n  setSearched(false)\n  setTVQuery(\"Dune\")\n  setTVResults([])\n  setTVOptions([])\n}\nif (searched===false && selectedTV===false) {\n        return (\n            <ThemeProvider theme={theme}>\n                <Box\n                  sx={{\n                    marginTop: 3,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                  }}\n                  component=\"form\"\n                  onSubmit={handleTVSubmit}\n                >\n        <Autocomplete\n          disablePortal\n          id=\"combo-box-demo\"\n          options={[...tvOptions]}\n          onInputChange={handleTVQuery}\n          sx={{ width: 300 }}\n          getOptionLabel={option => handleTVLabels(option)}\n          renderOption={(props, option) => {\n            return (\n              <li {...props} key={option.id}>\n                {handleTVLabels(option)}\n              </li>\n            );\n          }}\n          renderInput={(params) => <TextField {...params} label=\"TV Shows\" />}\n        />\n         <Button\n                          type=\"submit\"\n                          variant=\"contained\"\n                          sx={{ mt: 1, mb: 2 }}\n                        >\n                          Search\n                        </Button>\n            <FormGroup>\n            <Typography component=\"div\" variant=\"h7\" align=\"center\" sx={{mt:2}}>\n      Or search for...\n    </Typography>\n            \n            <List sx={{display: \"flex\"}}>\n            <ListItem>\n              <Button\n                          variant=\"contained\"\n                          value=\"Books\"\n                          label=\"Books\"\n                          href=\"/search/movies\"\n                          sx={{ mt: 1, mb: 2 }}\n                        >\n                          Movies\n                        </Button>\n              </ListItem>\n              <ListItem>\n              <Button\n                          variant=\"contained\"\n                          value=\"Books\"\n                          label=\"Books\"\n                          href=\"/search/books\"\n                          sx={{ mt: 1, mb: 2 }}\n                        >\n                          Books\n                        </Button>\n              </ListItem>\n              <ListItem>\n              <Button\n                          variant=\"contained\"\n                          value=\"Video Games\"\n                          label=\"Video Games\"\n                          href=\"/search/games\"\n                          sx={{ mt: 1, mb: 2 }}\n                        >\n                          Games\n                        </Button>\n              </ListItem>\n                        <ListItem>\n                        <Button\n                          variant=\"contained\"\n                          value=\"Music\"\n                          label=\"Music\"\n                          href=\"/search/music\"\n                          sx={{ mt: 1, mb: 2 }}\n                        >\n                          Music\n                        </Button>\n\n              </ListItem>\n              </List>\n            </FormGroup>\n            </Box>\n            </ThemeProvider>\n        )\n                }\n\nif (searched===true && searchedCategory===\"TV\" && selectedTV===false){\n    return (\n        <ThemeProvider theme={theme}>\n            <Box\n              sx={{\n                marginTop: 3,\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n              }}\n            >\n                 <Typography variant=\"h5\" component=\"div\">\n              Results for {`${tvQuery}, Page ${page}`}\n            </Typography>\n        <Button\n                      type=\"submit\"\n                      variant=\"contained\"\n                      onClick={handleResetSearch}\n                      sx={{ mt: 3, mb: 2 }}\n                    >\n                      Reset\n                    </Button>\n        </Box>\n       \n        <TVSearchContainer theme={theme} data={tvResults} setPage={setPage} page={page} selectedTV={selectedTV} setSelectedTV={setSelectedTV}/>\n        </ThemeProvider>\n        \n    )\n}\nif (searched===true && searchedCategory===\"TV\" && selectedTV){\n  return (\n      <ThemeProvider theme={theme}>\n          <Box\n            sx={{\n              marginTop: 3,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}>\n                <AddTV id={selectedTV} user={user} />\n                <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    onClick={handleResetSelection}\n                    sx={{ mt: 3, mb: 2 }}\n                  >\n                    Reset\n                  </Button>\n            </Box>\n      </ThemeProvider>\n      \n  )\n}\n}\n\n\nexport default SearchTV","import React, { useState,useEffect } from \"react\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardHeader from '@mui/material/CardHeader'\nimport Button from '@mui/material/Button';\nimport Box from \"@mui/material/Box\";\nimport Typography from '@mui/material/Typography';\nimport Rating from '@mui/material/Rating';\nimport { Grid } from \"@mui/material\";\n\n\nfunction AlbumSearchCard ({albumInfo, theme, handleAlbumSelect}) {\nconst [reviews,setReviews] = useState([])\nconst [albumDetails,setAlbumDetails] = useState(false)\n\nuseEffect(() => {\n    fetch(`https://ws.audioscrobbler.com/2.0/?method=album.getinfo&api_key=dc4f409aa2656dcd1ab97a4798fc2915&mbid=${albumInfo.mbid}&format=json`)\n    .then((r) => {\n      if (r.ok) {\n        r.json()\n        .then((data) => {\n          if (data) {\n            setAlbumDetails(data.album)\n            }\n            })\n        }})}, [albumInfo])\n\nfunction albumPicture(details){\n    if (details.image){\n        if (details.image[4]){\n            return details.image[4][\"#text\"]\n        }\n        else if (details.image[3]){\n            return details.image[3][\"#text\"]\n        }\n        else if (details.image[0]){\n            return details.image[0][\"#text\"]\n        }\n    }\n    else {\n        return (\"https://st3.depositphotos.com/23594922/31822/v/600/depositphotos_318221368-stock-illustration-missing-picture-page-for-website.jpg\")\n    }\n}\n\nuseEffect(() => {\n  fetch(`/reviews`)\n  .then((r) => {\n    if (r.ok) {\n      r.json()\n      .then((data) => {\n          let checkForReviews = data.filter((givenReview) => {\n              return (givenReview.artwork.identifier==albumInfo.mbid)\n          })\n          setReviews(checkForReviews)\n      })\n      }})}, [albumInfo])\n\n      function parseReviewData(reviews){\n        if (reviews.length>0){\n          let numberOfReviews = reviews.length\n          let cumulativeScore = 0\n          for (const eachReview of reviews){\n            cumulativeScore=cumulativeScore+eachReview.rating\n          }\n          let averageRating=parseFloat(cumulativeScore/numberOfReviews)\n          return (\n            <>\n          <Rating label=\"Average Rating\" name=\"half-rating-read\" value={parseFloat(averageRating)} precision={0.5} readOnly />\n          <Typography variant=\"subtitle1\">Average Rating:</Typography>\n          <Typography variant=\"subtitle1\">{`${parseFloat(averageRating)} ☆ on ${numberOfReviews} reviews`}</Typography>\n          </>\n          )\n        }\n        else {\n          return (\n            <>\n          <Rating label=\"Average Rating\" name=\"half-rating-read\" value={0} precision={0.5} readOnly />\n          <Typography variant=\"subtitle1\">No reviews yet!</Typography>\n          </>\n          )\n        }\n      }\n\nif (albumInfo && albumDetails) { \n    return (\n      <Card sx={{ display: 'flex' }}>\n            <Grid container \n          spacing={0}\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"stretch\"\n          sx={{border: 2, borderColor: \"black\"}}>\n  <Grid item xs={12} component={Box} sx={{ display: 'flex'}}>\n  <CardMedia\n    component=\"img\"\n    xs={12}\n    sx={{ height: 470}}\n    image={`${albumPicture(albumDetails)}`}\n  alt={`${albumDetails.name} Cover`}\n  />\n  </Grid>\n  <Grid xs={12} item component={Box} sx={{display: 'flex', flexDirection: 'column' }}>\n  <CardHeader\n              \n              title={`${albumDetails.name}`}\n              style={{ textAlign: 'center' }}\n              sx={{\n                  color: \"white\",\n                  backgroundColor: \"black\",\n                  border: 1, borderColor: \"#black\",\n              }}\n        >\n        </CardHeader>\n    <CardContent sx={{ flex: '1 0 auto' }} style={{ textAlign: 'center' }}>\n      <Typography component=\"div\" variant=\"h6\">\n      {albumDetails.artist}\n      </Typography>\n      {parseReviewData(reviews)}\n    </CardContent>\n    </Grid>\n    <Grid item xs={12} component={Button}\n                          variant=\"contained\"\n                          sx={{\n                            color: \"white\",\n                            backgroundColor: \"black\",\n                            border: 1, borderColor: \"#FFD700\"\n                        }}\n                        value={albumInfo.mbid}\n                        onClick={handleAlbumSelect}\n                        >\n                          Add To Shelf\n                        </Grid>\n  </Grid>\n  \n  </Card>\n  )\n          }\nelse {\n  return (\n    <Typography gutterBottom variant=\"h5\" component=\"div\">\n          Loading...\n        </Typography>\n  )\n}\n\n\n}\n\nexport default AlbumSearchCard","import Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport {ThemeProvider} from \"@mui/material/styles\";\nimport AlbumSearchCard from \"./AlbumSearchCard\"\n\n\nfunction AlbumSearchContainer ({data, theme, setPage, page, searchedCategory, setSelectedAlbum, selectedAlbum}) {\n\n    function handleNextPage(e){\n        let pageNum = parseInt(page)\n        let newPage = pageNum+1\n        let pageState = String(newPage)\n        setPage(pageState)\n    }\n\n    function handlePreviousPage(e){\n        let pageNum = parseInt(page)\n        if (pageNum > 1) {\n        let newPage = pageNum-1\n        let pageState = String(newPage)\n        setPage(pageState)\n        }\n    }\n\n    function handleAlbumSelect(e){\n      setSelectedAlbum(e.target.value)\n    }\n\n    const spawnAlbumCards = data.map((givenAlbum) => {\n        if (givenAlbum.mbid.length>0){\n          return (\n            <Grid item xs={12} sm={5} md={5} lg={3}  sx={{ mt: 3, mr: 5, display:\"flex\",}} key={givenAlbum.id} align=\"center\">\n            <AlbumSearchCard albumInfo={givenAlbum} key={givenAlbum.id} handleAlbumSelect={handleAlbumSelect}/>\n            </Grid>\n          )\n                }\n      })\n    \n    if (data) {\n      return (\n        <ThemeProvider theme={theme}>\n            <Grid container \n            spacing={2}\n            direction=\"row\"\n            justifyContent=\"center\"\n            alignItems=\"stretch\">\n            {spawnAlbumCards}\n            </Grid>\n            <Grid container\n            spacing={1}\n            direction=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"stretch\"\n            sx={{mt: 3}}>\n        <Grid item component={Button}\n            align=\"center\"\n            xs={12} sm={6}\n            \n                          variant=\"contained\"\n                          onClick={handlePreviousPage}\n                          sx={{ mt: 3, mb: 2,border: 1, borderColor: \"#FFD700\", borderTop: 1}}\n                        >\n                          Previous Page\n                        </Grid>\n          <Grid item component={Button}\n          xs={12} sm={6}\n                          variant=\"contained\"\n                          onClick={handleNextPage}\n                          sx={{ mt: 3, mb: 2, border: 1, borderColor: \"#FFD700\", borderTop: 1}}\n                        >\n                          Next Page\n                        </Grid>\n                        </Grid>\n      </ThemeProvider>\n        )\n                  }\n  else {\n    return (\n      <Typography gutterBottom variant=\"h5\" component=\"div\">\n          Loading...\n        </Typography>\n    )\n  }\n}\n\n\n\nexport default AlbumSearchContainer","import React, { useState, useEffect } from \"react\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardHeader from '@mui/material/CardHeader'\nimport Button from '@mui/material/Button';\nimport Box from \"@mui/material/Box\";\nimport Typography from '@mui/material/Typography';\nimport { Grid } from \"@mui/material\";\nimport Rating from '@mui/material/Rating';\nimport TextField from '@mui/material/TextField'\nimport { List } from \"@mui/material\";\nimport { ListItem } from \"@mui/material\";\n\nfunction AddAlbum({id, user}) {\n    const [albumInfo, setAlbumInfo] = useState(false)\n    const [rating,setRating] = useState(2.5)\n    const [review,setReview] = useState(\"It stinks! -Jay Sherman, The Critic\")\n    const [reviewDate,setReviewDate] = useState(\"\")\n    const [hasReviewed,setHasReviewed] = useState(false)\n    const [submitted,setSubmitted] = useState(false)\n\n    function getReviewDate(reviewData){\n      let year = reviewData.slice(0,4)\n      let month = reviewData.slice(5,7)\n      let day = reviewData.slice(8,10)\n      let date = `${month}-${day}-${year}`\n      return date\n    }\n  \n\n    useEffect(() => {\n        fetch(`https://ws.audioscrobbler.com/2.0/?method=album.getinfo&api_key=dc4f409aa2656dcd1ab97a4798fc2915&mbid=${id}&format=json`)\n        .then((r) => {\n          if (r.ok) {\n            r.json()\n            .then((data) => {\n              if (data) {\n                setAlbumInfo(data.album)\n                }\n                })\n            }})}, [id])\n\n            useEffect(() => {\n                fetch(`/users/${user.id}/reviews`)\n                .then((r) => {\n                  if (r.ok) {\n                    r.json()\n                    .then((data) => {\n                        let checkForReview = data.map((givenReview) => {\n                            if (givenReview.artwork.identifier === id){\n                                setHasReviewed(givenReview)\n                                setRating(givenReview.rating)\n                                setReview(givenReview.review_text)\n                                setReviewDate(givenReview.updated_at)\n                            }\n                        })\n                    })\n                    }})}, [id,albumInfo,submitted])\n\n    function handleSubmit(e){\n        e.preventDefault()\n        let identifier = id\n        let title = albumInfo.name\n        let discipline = 5\n        submitArtwork(discipline,identifier,title,rating,review,user,e)\n    }\n\n    function handleUpdate(e){\n        e.preventDefault()\n       let new_review = {\n           id: hasReviewed.id,\n           artwork_id: hasReviewed.artwork_id,\n           user_id: hasReviewed.user_id,\n           rating: rating,\n           review_text: review\n       } \n       fetch(`/reviews/${hasReviewed.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(new_review),\n      }).then((res) => {\n        if (res.ok) {\n          res.json().then((reviewInDB) => {;\n            setSubmitted(reviewInDB)\n            e.target.reset()\n          });\n        } else {\n          res.json().then((errors) => console.log(errors));\n        }\n      });\n    }\n\n    function submitArtwork(discipline,identifier,name,rating,review,user,e){\n        let artwork = {\n            identifier: identifier,\n            discipline_id: discipline,\n            name: name\n        }\n        fetch(\"/artworks\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(artwork),\n          }).then((res) => {\n            if (res.ok) {\n              res.json().then((artworkInDB) => {;\n                let newReview = {\n                    rating: rating,\n                    review_text: review,\n                    user_id: user.id,\n                    artwork_id: artworkInDB.id\n                }\n                submitReview(newReview,e)\n              });\n            } else {\n              res.json().then((errors) => console.log(errors));\n            }\n          });\n    }\n\n    function submitReview(review,e) {\n        fetch(\"/reviews\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(review),\n          }).then((res) => {\n            if (res.ok) {\n              res.json().then((reviewInDB) => {\n                setSubmitted(reviewInDB)\n                e.target.reset();\n              });\n            } else {\n              res.json().then((errors) => console.log(errors));\n            }\n          })};\n\n    function handleRating(e){\n        setRating(e.target.value)\n    }\n\n    function handleReview(e){\n        setReview(e.target.value)\n    }\n    \n    function albumPicture(details){\n        if (details.image){\n            if (details.image[4]){\n                return details.image[4][\"#text\"]\n            }\n            else if (details.image[3]){\n                return details.image[3][\"#text\"]\n            }\n            else if (details.image[0]){\n                return details.image[0][\"#text\"]\n            }\n        }\n        else {\n            return (\"https://st3.depositphotos.com/23594922/31822/v/600/depositphotos_318221368-stock-illustration-missing-picture-page-for-website.jpg\")\n        }\n    }\n\n    function spawnTracks(albumDetails){\n      if (albumDetails.tracks.track) {\n      let tracks = albumDetails.tracks.track\n      let counter = 0\n      let listedTracks = tracks.map((givenTrack) => {\n        counter = counter+1\n        return (\n          <ListItem>\n            <Typography variant=\"subtitle1\" fontSize=\".75vw\">\n            {`${counter}. ${givenTrack.name}`}\n                        </Typography>\n          </ListItem>\n        )\n      })\n      return listedTracks\n    }\n    else {\n      return (\n        <Typography variant=\"body2\" sx={{mt:1}} fontSize=\".8vw\">\n                Loading...\n              </Typography>\n      )\n    }\n  }\n\n    if (albumInfo && hasReviewed===false) {\n            return (\n            <Card sx={{width:\"50vw\", border: 1, borderColor: \"black\"}} >\n            <CardHeader\n                    xs = {12}\n                                title={`${albumInfo.name}`}\n                                subheader={`${albumInfo.artist}`}\n                    subheaderTypographyProps={{color: \"white\"}}\n                                style={{ textAlign: 'center' }}\n                                sx={{\n                                    color: \"white\",\n                                    backgroundColor: \"black\",\n                                    border: 1,\n                                    borderColor: \"#FFD700\"\n                                }}\n                          >\n                          </CardHeader>\n                          <CardMedia\n                      component=\"img\"\n                      height=\"100%\"\n                      width=\"100%\"\n                      sx={{ width: \"20vw\", height: \"30vw\", float:\"right\" }}\n                      image={`${albumPicture(albumInfo)}`}\n              alt={`${albumInfo.name} Cover`}\n                    />\n                      <CardContent sx={{ flex: '1 0 auto', width: \"29vw\", height:\"14vw\", mb:2}} style={{ textAlign: 'center' }}>\n                      <Typography variant=\"subtitle1\" fontSize=\".75vw\">\n                        Track List:\n                        </Typography>\n                        <List dense={true} style={{overflow:\"scroll\"}} sx={{width:\"28.6vw\", height:\"12vw\"}}>\n                          {spawnTracks(albumInfo)}\n                        </List>\n                      </CardContent>\n                      <Box textAlign='center' component=\"form\" onSubmit={handleSubmit}> \n                      <CardActions style={{justifyContent: 'center'}} sx={{alignItems: 'center', width:\"29.8vw\"}}>\n                      <Grid container spacing={1} style={{ justifyContent: \"center\"}}>\n                      <Rating label = \"Rating\" sx={{ mt: 1, mr: 1,}} name=\"half-rating\" value={rating} precision={0.5} onChange={handleRating}/>\n                      <TextField\n                  id=\"filled-multiline-static\"\n                  label=\"Your Review\"\n                  multiline\n                  rows={4}\n                  fullWidth\n                  value={review}\n                  variant=\"filled\"\n                  onChange={handleReview}\n        \n                />\n                   <Button\n                          type=\"submit\"\n                          variant=\"contained\"\n                          sx={{ mt: 3, mb: 2, color: \"white\", backgroundColor: \"black\" }}\n                        >\n                          Add To Shelf\n                        </Button>\n                </Grid>\n                \n              </CardActions>\n                      </Box>\n                    </Card>\n        )\n    }\n    else if (albumInfo && hasReviewed) {\n            return (<Card sx={{width:\"50vw\", border: 1, borderColor: \"black\"}} >\n            <CardHeader\n                    xs = {12}\n                                title={`${albumInfo.name}`}\n                                subheader={`${albumInfo.artist}`}\n                    subheaderTypographyProps={{color: \"white\"}}\n                                style={{ textAlign: 'center' }}\n                                sx={{\n                                    color: \"white\",\n                                    backgroundColor: \"black\",\n                                    border: 1,\n                                    borderColor: \"#FFD700\"\n                                }}\n                          >\n                          </CardHeader>\n                          <CardMedia\n                      component=\"img\"\n                      height=\"100%\"\n                      width=\"100%\"\n                      sx={{ width: \"20vw\", height: \"30vw\", float:\"right\" }}\n                      image={`${albumPicture(albumInfo)}`}\n              alt={`${albumInfo.title} Cover`}\n                    />\n                      <CardContent sx={{ flex: '1 0 auto', width: \"29vw\", height:\"14vw\", mb:2}} style={{ textAlign: 'center' }}>\n                      <Typography variant=\"subtitle1\" fontSize=\".75vw\">\n                        Track List:\n                        </Typography>\n                        <List dense={true} style={{overflow:\"scroll\"}} sx={{width:\"28.6vw\", height:\"12vw\"}}>\n                          {spawnTracks(albumInfo)}\n                        </List>\n                      </CardContent>\n                      <Box textAlign='center' component=\"form\" onSubmit={handleUpdate}> \n                      <CardActions style={{justifyContent: 'center'}} sx={{alignItems: 'center', width:\"29.8vw\"}}>\n                      <Grid container spacing={1} style={{ justifyContent: \"center\", textAlign:\"center\"}}>\n                      <Rating label = \"Rating\" sx={{ mt: 1, mr: 1,}} name=\"half-rating\" value={rating} precision={0.5} onChange={handleRating}/>\n                      <TextField\n                  id=\"filled-multiline-static\"\n                  label=\"Your Review\"\n                  multiline\n                  rows={4}\n                  fullWidth\n                  value={review}\n                  variant=\"filled\"\n                  onChange={handleReview}\n        \n                />\n                <Grid item xs={12} component={Typography} variant=\"subtitle1\" sx={{mt:1}} fontSize=\".75vw\" textAlign=\"center\">\n              {`Previous Review on: ${getReviewDate(reviewDate)}`}\n          </Grid>\n                   <Grid item component={Button}\n                          type=\"submit\"\n                          variant=\"contained\"\n                          sx={{ mt: 1, mb: .1, color: \"white\", backgroundColor: \"black\" }}\n                        >\n                          Update Review\n                        </Grid>\n                </Grid>\n                \n              </CardActions>\n                      </Box>\n                    </Card>\n        )\n    }\n    else {\n        return (\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\n          Loading...\n        </Typography>\n        )\n    }\n}\n\n\n\nexport default AddAlbum\n","import React, { useState, useEffect } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport {ThemeProvider } from \"@mui/material/styles\";\nimport Autocomplete from '@mui/material/Autocomplete';\nimport FormGroup from '@mui/material/FormGroup';\nimport Button from \"@mui/material/Button\";\nimport List from '@mui/material/List'\nimport ListItem from '@mui/material/ListItem'\nimport { Typography } from \"@mui/material\";\nimport AlbumSearchContainer from \"./AlbumSearchContainer\";\nimport AddAlbum from \"./AddAlbum\";\n\nfunction SearchAlbums({theme, searchedCategory, setSearchedCategory, user}) {\n\nconst [albumQuery, setAlbumQuery] = useState(\"Abbey Road\")\nconst [albumOptions,setAlbumOptions] = useState([])\nconst [albumResults,setAlbumResults] = useState([])\nconst [searched, setSearched] = useState(false)\nconst [selectedAlbum,setSelectedAlbum] = useState(false)\nconst [page,setPage] = useState(\"1\")\n\n  function handleAlbumQuery(event,value){\n    if (searchedCategory !== \"Albums\"){\n        setSearchedCategory(\"Albums\")\n    }\n    let input\n    if (value.includes(\" // \")){\n        let index = value.indexOf(\" // \")\n        input = value.slice(0,index)\n        console.log(`input: ${input}`)\n    }\n    if (input !== albumQuery){\n    setAlbumQuery(value)\n    }\n\n}\n\nuseEffect(() => {\n    fetch(`https://ws.audioscrobbler.com/2.0/?method=album.search&album=${albumQuery}&limit=10&page=${page}&api_key=dc4f409aa2656dcd1ab97a4798fc2915&format=json`)\n    .then((r) => {\n      if (r.ok) {\n        r.json()\n        .then((data) => {\n          if (data.results.albummatches) {\n            setAlbumResults(data.results.albummatches.album)\n            if (data.results.albummatches.album) {\n            let titles = [...albumResults].map((givenItem) => {\n              return (givenItem.name)\n            })\n            setAlbumOptions(titles)\n        }\n            \n            \n            }\n            })\n        }})}, [albumQuery,page])\n\n        function handleAlbumLabels(option) {\n            let label = option\n            for (const givenResult of albumResults){\n                if (option===givenResult.name && givenResult.artist){\n                    label = (`${option} // (${givenResult.artist})`)\n                }\n            }\n            return label\n        \n        }\n\nfunction handleAlbumSubmit(e){\n    setSearchedCategory(\"Albums\")\n    e.preventDefault()\n    setSearched(true)\n}\n\nfunction handleResetSearch(e){\n    setSearched(false)\n    setAlbumQuery(\"Dune\")\n    setAlbumResults([])\n    setAlbumOptions([])\n}\n\nfunction handleResetSelection(e){\n  setSelectedAlbum(false)\n  setSearched(false)\n  setAlbumQuery(\"Dune\")\n  setAlbumResults([])\n  setAlbumOptions([])\n}\nif (searched===false && selectedAlbum===false) {\n        return (\n            <ThemeProvider theme={theme}>\n                <Box\n                  sx={{\n                    marginTop: 3,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                  }}\n                  component=\"form\"\n                  onSubmit={handleAlbumSubmit}\n                >\n        <Autocomplete\n          disablePortal\n          id=\"combo-box-demo\"\n          options={[...albumOptions]}\n          onInputChange={handleAlbumQuery}\n          sx={{ width: 300 }}\n          getOptionLabel={option => handleAlbumLabels(option)}\n          renderOption={(props, option) => {\n            return (\n              <li {...props} key={option.mbid}>\n                {handleAlbumLabels(option)}\n              </li>\n            );\n          }}\n          renderInput={(params) => <TextField {...params} label=\"Albums\" />}\n        />\n         <Button\n                          type=\"submit\"\n                          variant=\"contained\"\n                          sx={{ mt: 1, mb: 2 }}\n                        >\n                          Search\n                        </Button>\n            <FormGroup>\n            <Typography component=\"div\" variant=\"h7\" align=\"center\" sx={{mt:2}}>\n      Or search for...\n    </Typography>\n            \n            <List sx={{display: \"flex\"}}>\n            <ListItem>\n              <Button\n                          variant=\"contained\"\n                          value=\"Books\"\n                          label=\"Books\"\n                          href=\"/search/movies\"\n                          sx={{ mt: 1, mb: 2 }}\n                        >\n                          Movies\n                        </Button>\n              </ListItem>\n              <ListItem>\n              <Button\n                          variant=\"contained\"\n                          value=\"Books\"\n                          label=\"Books\"\n                          href=\"/search/books\"\n                          sx={{ mt: 1, mb: 2 }}\n                        >\n                          Books\n                        </Button>\n              </ListItem>\n              <ListItem>\n              <Button\n                          variant=\"contained\"\n                          value=\"Video Games\"\n                          label=\"Video Games\"\n                          href=\"/search/games\"\n                          sx={{ mt: 1, mb: 2 }}\n                        >\n                          Games\n                        </Button>\n              </ListItem>\n              <ListItem>\n              <Button\n                          variant=\"contained\"\n                          value=\"TV\"\n                          label=\"TV\"\n                          href=\"/search/TV\"\n                          sx={{ mt: 1, mb: 2 }}\n                        >\n                          TV\n                        </Button>\n                        </ListItem>\n              </List>\n            </FormGroup>\n            </Box>\n            </ThemeProvider>\n        )\n                }\n\nif (searched===true && searchedCategory===\"Albums\" && selectedAlbum===false){\n    return (\n        <ThemeProvider theme={theme}>\n            <Box\n              sx={{\n                marginTop: 3,\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n              }}\n            >\n                 <Typography variant=\"h5\" component=\"div\">\n              Results for {`${albumQuery}, Page ${page}`}\n            </Typography>\n        <Button\n                      type=\"submit\"\n                      variant=\"contained\"\n                      onClick={handleResetSearch}\n                      sx={{ mt: 3, mb: 2 }}\n                    >\n                      Reset\n                    </Button>\n        </Box>\n       \n        <AlbumSearchContainer theme={theme} data={albumResults} setPage={setPage} page={page} selectedAlbum={selectedAlbum} setSelectedAlbum={setSelectedAlbum}/>\n        </ThemeProvider>\n        \n    )\n}\nif (searched===true && searchedCategory===\"Albums\" && selectedAlbum){\n  return (\n    <ThemeProvider theme={theme}>\n    <Box\n      sx={{\n        marginTop: 3,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n      }}>\n          <AddAlbum id={selectedAlbum} user={user} />\n          <Button\n              type=\"submit\"\n              variant=\"contained\"\n              onClick={handleResetSelection}\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Reset\n            </Button>\n      </Box>\n</ThemeProvider>\n      \n  )\n}\n}\n\n\nexport default SearchAlbums","import React, { useState} from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport SearchGames from \"./SearchGames\";\nimport SearchMovies from \"./SearchMovies\";\nimport SearchBooks from \"./SearchBooks\";\nimport SearchTV from \"./SearchTV\";\nimport SearchAlbums from \"./SearchAlbums\";\n\nfunction SearchMedia({theme, user}) {\nconst [searchedCategory,setSearchedCategory] = useState(\"\")\n\nreturn (\n    <div>\n    <Switch>\n        <Route exact path=\"/search/games\">\n    <SearchGames user={user} theme={theme} searchedCategory={searchedCategory} setSearchedCategory={setSearchedCategory}/>\n    </Route>\n    <Route exact path=\"/search/movies\">\n    <SearchMovies user={user} theme={theme} searchedCategory={searchedCategory} setSearchedCategory={setSearchedCategory}/>\n    </Route>\n    <Route exact path=\"/search/books\">\n    <SearchBooks user={user} theme={theme} searchedCategory={searchedCategory} setSearchedCategory={setSearchedCategory}/>\n    </Route>\n    <Route exact path=\"/search/TV\">\n    <SearchTV user={user} theme={theme} searchedCategory={searchedCategory} setSearchedCategory={setSearchedCategory}/>\n    </Route>\n    <Route exact path=\"/search/music\">\n    <SearchAlbums user={user} theme={theme} searchedCategory={searchedCategory} setSearchedCategory={setSearchedCategory}/>\n    </Route>\n    <Route path=\"/search\">\n    <SearchMovies user={user} theme={theme} searchedCategory={searchedCategory} setSearchedCategory={setSearchedCategory}/>\n    </Route>\n    </Switch>\n    </div>\n)\n}\n\n\nexport default SearchMedia","import React, { useState, useEffect } from \"react\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardHeader from '@mui/material/CardHeader'\nimport Button from '@mui/material/Button';\nimport Box from \"@mui/material/Box\";\nimport Typography from '@mui/material/Typography';\nimport { Grid } from \"@mui/material\";\nimport Rating from '@mui/material/Rating';\n\nfunction BookShelfCard({reviewData, setMediaInfo, setSelectedMedia}) {\n    const [bookInfo,setBookInfo] = useState(false)\n\n    function getReviewDate(reviewData){\n        let rawDate = reviewData.updated_at\n        let year = rawDate.slice(0,4)\n        let month = rawDate.slice(5,7)\n        let day = rawDate.slice(8,10)\n        let date = `${month}-${day}-${year}`\n        return date\n      }\n\n    function getYear(bookInfo) {\n        if (bookInfo.volumeInfo.publishedDate) {\n        let release_date = bookInfo.volumeInfo.publishedDate\n        let year = release_date.slice(0,4)\n        return year\n        }\n        else {\n          return bookInfo.volumeInfo.publishedDate\n        }\n      }\n\n      function handleUpdate(e){\n        setMediaInfo(bookInfo)\n        setSelectedMedia(\"Book\")\n      }\n\n    useEffect(() => {\n        fetch(`https://www.googleapis.com/books/v1/volumes/${reviewData.artwork.identifier}`)\n        .then((r) => {\n          if (r.ok) {\n            r.json()\n            .then((data) => {\n              if (data.volumeInfo) {\n                setBookInfo(data)\n                }\n                else {\n                    console.log(\"something went wrong fetching a book\")\n                }\n                })\n            }})}, [])\n\n            function bookPicture(vi){\n                if (bookInfo){\n                if (vi.imageLinks){\n                    if (vi.imageLinks.thumbnail){\n                        return vi.imageLinks.thumbnail\n                    }\n                    else if (vi.imageLinks.smallThumbnail){\n                        return vi.imageLinks.smallThumbnail\n                    }\n                }\n                else {\n                    return (\"https://st3.depositphotos.com/23594922/31822/v/600/depositphotos_318221368-stock-illustration-missing-picture-page-for-website.jpg\")\n                }\n            }\n                else {\n                    return (\"https://st3.depositphotos.com/23594922/31822/v/600/depositphotos_318221368-stock-illustration-missing-picture-page-for-website.jpg\")\n                }\n            }\n    \n    if (reviewData && bookInfo) {\n    return (\n        <Card sx={{ display: 'flex' }} style={{width:\"15vw\", height:\"34vw\"}} xs={12}>\n              <Grid container \n            direction=\"row\"\n            justifyContent=\"center\"\n            alignItems=\"stretch\"\n            sx={{border: 2, borderColor: \"black\"}}>\n      <Grid item xs={12} component={Box} sx={{ display: 'flex'}}>\n      <CardMedia\n      component=\"img\"\n      style={{height:\"20vw\"}}\n      image={bookPicture(bookInfo.volumeInfo)}\n      alt={`Poster for ${bookInfo.volumeInfo.title} not found.`}\n      />\n      </Grid>\n      <Grid xs={12} item component={Box} sx={{display: 'flex', flexDirection: 'column' }}>\n      <CardHeader\n                \n                title={`${bookInfo.volumeInfo.title}`}\n                subheader={`${getYear(bookInfo)}`}\n                titleTypographyProps={{fontSize:\"1vw\"}}\n                subheaderTypographyProps={{color: \"white\", fontSize:\".7vw\"}}\n                style={{ textAlign: 'center', height:\"5vw\" }}\n                sx={{\n                    color: \"white\",\n                    backgroundColor: \"black\",\n                    border: 2, borderColor: \"black\",\n                }}\n          >\n          </CardHeader>\n          <CardContent sx={{ flex: '1 0 auto' }} style={{overflow:\"scroll\", textAlign: 'center', height: \"7vw\"}}>\n            <Rating label=\"Average Rating\" name=\"half-rating-read\" defaultValue={parseFloat(reviewData.rating)} precision={0.5} readOnly />\n      <Typography variant=\"subtitle1\" fontSize=\".75vw\">\n      {`${reviewData.rating} ☆`}\n          </Typography>\n              <Typography component=\"div\" variant=\"body2\" sx={{mt:1}} fontSize=\".8vw\" >\n                {`${reviewData.review_text}`}\n              </Typography>\n              <Typography variant=\"subtitle1\" sx={{mt:1}} fontSize=\".75vw\">\n              {`Reviewed on: ${getReviewDate(reviewData)}`}\n          </Typography>\n            </CardContent>\n            \n      </Grid>\n      <Button  onClick={handleUpdate} variant=\"contained\" fullWidth sx={{mt:.4}} style={{height: \"1.5vw\"}}>\n                Update\n              </Button>\n      </Grid>\n      \n      </Card>\n      )\n    }\n    else {\n        return (\n            <Typography>\n                Loading...\n            </Typography>\n        )\n    }\n}\n\n\nexport default BookShelfCard","import React, { useState, useEffect } from \"react\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardHeader from '@mui/material/CardHeader'\nimport Button from '@mui/material/Button';\nimport Box from \"@mui/material/Box\";\nimport Typography from '@mui/material/Typography';\nimport { Grid } from \"@mui/material\";\nimport Rating from '@mui/material/Rating';\n\nfunction GameShelfCard({reviewData, setMediaInfo, setSelectedMedia}) {\n    const [gameInfo,setGameInfo] = useState(false)\n\n    function getReviewDate(reviewData){\n      let rawDate = reviewData.updated_at\n      let year = rawDate.slice(0,4)\n      let month = rawDate.slice(5,7)\n      let day = rawDate.slice(8,10)\n      let date = `${month}-${day}-${year}`\n      return date\n    }\n\n    function handleUpdate(e){\n      setMediaInfo(gameInfo)\n      setSelectedMedia(\"Game\")\n    }\n\n    useEffect(() => {\n        fetch(`https://api.rawg.io/api/games/${reviewData.artwork.identifier}?key=3399fc338e8a43b19b6edf538ebbb5a2`)\n        .then((r) => {\n          if (r.ok) {\n            r.json()\n            .then((data) => {\n              if (data) {\n                setGameInfo(data)\n                }\n                })\n            }})}, [])\n\n            function getYear(gameInfo) {\n              if (gameInfo.released) {\n              let release_date = gameInfo.released\n              let year = release_date.slice(0,4)\n              return year\n              }\n              else {\n                return gameInfo.released\n              }\n            }\n    \n    if (reviewData) {\n\n    return (\n      <Card sx={{ display: 'flex' }} style={{width:\"15vw\", height:\"34vw\"}} xs={12}>\n            <Grid container \n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"stretch\"\n          sx={{border: 2, borderColor: \"black\"}}>\n    <Grid item xs={12} component={Box} sx={{ display: 'flex'}}>\n    <CardMedia\n    component=\"img\"\n    style={{height:\"20vw\"}}\n    image={gameInfo.background_image}\n    alt={`Art for ${gameInfo.name}`}\n    />\n    </Grid>\n    <Grid xs={12} item component={Box} sx={{display: 'flex', flexDirection: 'column' }}>\n    <CardHeader\n              \n              title={`${gameInfo.name}`}\n              subheader={`${getYear(gameInfo)}`}\n              titleTypographyProps={{fontSize:\"1vw\"}}\n              subheaderTypographyProps={{color: \"white\", fontSize:\".7vw\"}}\n              style={{ textAlign: 'center', height:\"5vw\" }}\n              sx={{\n                  color: \"white\",\n                  backgroundColor: \"black\",\n                  border: 2, borderColor: \"black\",\n              }}\n        >\n        </CardHeader>\n        <CardContent sx={{ flex: '1 0 auto' }} style={{overflow:\"scroll\", textAlign: 'center', height: \"7vw\"}}>\n          <Rating label=\"Average Rating\" name=\"half-rating-read\" defaultValue={parseFloat(reviewData.rating)} precision={0.5} readOnly />\n    <Typography variant=\"subtitle1\" fontSize=\".75vw\">\n    {`${reviewData.rating} ☆`}\n        </Typography>\n            <Typography component=\"div\" variant=\"body2\" sx={{mt:1}} fontSize=\".8vw\">\n              {`${reviewData.review_text}`}\n            </Typography>\n            <Typography variant=\"subtitle1\" sx={{mt:1}} fontSize=\".75vw\">\n            {`Reviewed on: ${getReviewDate(reviewData)}`}\n        </Typography>\n          </CardContent>\n          \n    </Grid>\n    <Button  onClick={handleUpdate} variant=\"contained\" fullWidth sx={{mt:.4}} style={{height: \"1.5vw\"}}>\n              Update\n            </Button>\n    </Grid>\n    \n    </Card>\n    )\n    }\n    else {\n        return (\n            <Typography>\n                Loading...\n            </Typography>\n        )\n    }\n}\n\nexport default GameShelfCard","import React, { useState, useEffect } from \"react\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardHeader from '@mui/material/CardHeader'\nimport Button from '@mui/material/Button';\nimport Box from \"@mui/material/Box\";\nimport Typography from '@mui/material/Typography';\nimport { Grid } from \"@mui/material\";\nimport Rating from '@mui/material/Rating';\n\nfunction MovieShelfCard({reviewData,setMediaInfo,setSelectedMedia}) {\n    const [movieInfo,setMovieInfo] = useState(\"\")\n\n    function getYear(movieInfo) {\n      if (movieInfo.release_date) {\n      let release_date = movieInfo.release_date\n      let year = release_date.slice(0,4)\n      return year\n      }\n      else {\n        return movieInfo.release_date\n      }\n    }\n\n    function getReviewDate(reviewData){\n      let rawDate = reviewData.updated_at\n      let year = rawDate.slice(0,4)\n      let month = rawDate.slice(5,7)\n      let day = rawDate.slice(8,10)\n      let date = `${month}-${day}-${year}`\n      return date\n    }\n\n    function handleUpdate(e){\n      if(setMediaInfo && setSelectedMedia){\n      setMediaInfo(movieInfo)\n      setSelectedMedia(\"Movie\")\n      console.log(movieInfo)\n      }\n    }\n\n    useEffect(() => {\n        fetch(`https://api.themoviedb.org/3/movie/${reviewData.artwork.identifier}?api_key=3776580a8d92df7064c0e2ee058f3d0d`)\n        .then((r) => {\n          if (r.ok) {\n            r.json()\n            .then((data) => {\n              if (data) {\n                setMovieInfo(data)\n                }\n                })\n            }})}, [])\n    \n    if (reviewData) {\n    return (\n      <Card sx={{ display: 'flex' }} style={{width:\"15vw\", height:\"34vw\"}} xs={12}>\n            <Grid container \n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"stretch\"\n          sx={{border: 2, borderColor: \"black\"}}>\n    <Grid item xs={12} component={Box} sx={{ display: 'flex'}}>\n    <CardMedia\n    component=\"img\"\n    style={{height:\"20vw\"}}\n    image={\"https://image.tmdb.org/t/p/w500\" + `${movieInfo.poster_path}`}\n    alt={`Poster for ${movieInfo.title} (${getYear(movieInfo)}) not found.`}\n    />\n    </Grid>\n    <Grid xs={12} item component={Box} sx={{display: 'flex', flexDirection: 'column' }}>\n    <CardHeader\n              \n              title={`${movieInfo.title}`}\n              subheader={`${getYear(movieInfo)}`}\n              titleTypographyProps={{fontSize:\"1vw\"}}\n              subheaderTypographyProps={{color: \"white\", fontSize:\".7vw\"}}\n              style={{ textAlign: 'center', height:\"5vw\" }}\n              sx={{\n                  color: \"white\",\n                  backgroundColor: \"black\",\n                  border: 2, borderColor: \"black\",\n              }}\n        >\n        </CardHeader>\n        <CardContent sx={{ flex: '1 0 auto' }} style={{overflow:\"scroll\", textAlign: 'center', height: \"7vw\"}}>\n          <Rating label=\"Average Rating\" name=\"half-rating-read\" defaultValue={parseFloat(reviewData.rating)} precision={0.5} readOnly />\n    <Typography variant=\"subtitle1\" fontSize=\".75vw\">\n    {`${reviewData.rating} ☆`}\n        </Typography>\n            <Typography component=\"div\" variant=\"body2\" sx={{mt:1}} fontSize=\".8vw\">\n              {`${reviewData.review_text}`}\n            </Typography>\n            <Typography variant=\"subtitle1\" sx={{mt:1}} fontSize=\".75vw\">\n            {`Reviewed on: ${getReviewDate(reviewData)}`}\n        </Typography>\n          </CardContent>\n          \n    </Grid>\n    <Button onClick={handleUpdate} variant=\"contained\" fullWidth sx={{mt:.4}} style={{height: \"1.5vw\"}}>\n              Update\n            </Button>\n    </Grid>\n    \n    </Card>\n    )\n    }\n    else {\n        return (\n            <Typography>\n                Loading...\n            </Typography>\n        )\n    }\n}\n\nexport default MovieShelfCard","import React, { useState, useEffect } from \"react\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardHeader from '@mui/material/CardHeader'\nimport Button from '@mui/material/Button';\nimport Box from \"@mui/material/Box\";\nimport Typography from '@mui/material/Typography';\nimport { Grid } from \"@mui/material\";\nimport Rating from '@mui/material/Rating';\n\nfunction TVShelfCard({reviewData, setMediaInfo, setSelectedMedia}) {\n    const [tvInfo,setTVInfo] = useState(\"\")\n\n    function getReviewDate(reviewData){\n      let rawDate = reviewData.updated_at\n      let year = rawDate.slice(0,4)\n      let month = rawDate.slice(5,7)\n      let day = rawDate.slice(8,10)\n      let date = `${month}-${day}-${year}`\n      return date\n    }\n\n    function handleUpdate(e){\n      setMediaInfo(tvInfo)\n      setSelectedMedia(\"TV\")\n    }\n\n    useEffect(() => {\n        fetch(`https://api.themoviedb.org/3/tv/${reviewData.artwork.identifier}?api_key=3776580a8d92df7064c0e2ee058f3d0d`)\n        .then((r) => {\n          if (r.ok) {\n            r.json()\n            .then((data) => {\n              if (data) {\n                setTVInfo(data)\n                }\n                })\n            }})}, [])\n\n            function getYear(tvInfo) {\n              if (tvInfo.first_air_date) {\n              let first_air_date = tvInfo.first_air_date\n              let year = first_air_date.slice(0,4)\n              return year\n              }\n              else {\n                return tvInfo.first_air_date\n              }\n            }\n    \n    if (reviewData) {\n    return (\n      <Card sx={{ display: 'flex' }} style={{width:\"15vw\", height:\"34vw\"}} xs={12}>\n            <Grid container \n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"stretch\"\n          sx={{border: 2, borderColor: \"black\"}}>\n    <Grid item xs={12} component={Box} sx={{ display: 'flex'}}>\n    <CardMedia\n    component=\"img\"\n    style={{height:\"20vw\"}}\n    image={\"https://image.tmdb.org/t/p/w500\" + `${tvInfo.poster_path}`}\n    alt={`Poster for ${tvInfo.title} (${getYear(tvInfo)}) not found.`}\n    />\n    </Grid>\n    <Grid xs={12} item component={Box} sx={{display: 'flex', flexDirection: 'column' }}>\n    <CardHeader\n              \n              title={`${tvInfo.name}`}\n              subheader={`${getYear(tvInfo)}`}\n              titleTypographyProps={{fontSize:\"1vw\"}}\n              subheaderTypographyProps={{color: \"white\", fontSize:\".7vw\"}}\n              style={{ textAlign: 'center', height:\"5vw\" }}\n              sx={{\n                  color: \"white\",\n                  backgroundColor: \"black\",\n                  border: 2, borderColor: \"black\",\n              }}\n        >\n        </CardHeader>\n        <CardContent sx={{ flex: '1 0 auto' }} style={{overflow:\"scroll\", textAlign: 'center', height: \"7vw\"}}>\n          <Rating label=\"Average Rating\" name=\"half-rating-read\" defaultValue={parseFloat(reviewData.rating)} precision={0.5} readOnly />\n    <Typography variant=\"subtitle1\" fontSize=\".75vw\">\n    {`${reviewData.rating} ☆`}\n        </Typography>\n            <Typography component=\"div\" variant=\"body2\" sx={{mt:1}} fontSize=\".8vw\">\n              {`${reviewData.review_text}`}\n            </Typography>\n            <Typography variant=\"subtitle1\" sx={{mt:1}} fontSize=\".75vw\">\n            {`Reviewed on: ${getReviewDate(reviewData)}`}\n        </Typography>\n          </CardContent>\n          \n    </Grid>\n    <Button  onClick={handleUpdate} variant=\"contained\" fullWidth sx={{mt:.4}} style={{height: \"1.5vw\"}}>\n              Update\n            </Button>\n    </Grid>\n    \n    </Card>\n    )\n    }\n    else {\n        return (\n            <Typography>\n                Loading...\n            </Typography>\n        )\n    }\n}\n\nexport default TVShelfCard","import React, { useState, useEffect } from \"react\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardHeader from '@mui/material/CardHeader'\nimport Button from '@mui/material/Button';\nimport Box from \"@mui/material/Box\";\nimport Typography from '@mui/material/Typography';\nimport { Grid } from \"@mui/material\";\nimport Rating from '@mui/material/Rating';\n\nfunction AlbumShelfCard({reviewData, setMediaInfo, setSelectedMedia}) {\n    const [albumInfo,setAlbumInfo] = useState(false)\n\n    function getReviewDate(reviewData){\n        let rawDate = reviewData.updated_at\n        let year = rawDate.slice(0,4)\n        let month = rawDate.slice(5,7)\n        let day = rawDate.slice(8,10)\n        let date = `${month}-${day}-${year}`\n        return date\n      }\n\n      function handleUpdate(e){\n        setMediaInfo(reviewData.artwork)\n        setSelectedMedia(\"Album\")\n      }\n\n    useEffect(() => {\n        fetch(`https://ws.audioscrobbler.com/2.0/?method=album.getinfo&api_key=dc4f409aa2656dcd1ab97a4798fc2915&mbid=${reviewData.artwork.identifier}&format=json`)\n        .then((r) => {\n          if (r.ok) {\n            r.json()\n            .then((data) => {\n              if (data) {\n                setAlbumInfo(data.album)\n                }\n                })\n            }})}, [reviewData])\n    \n    function albumPicture(details){\n        if (details.image){\n            if (details.image[4]){\n                return details.image[4][\"#text\"]\n            }\n            else if (details.image[3]){\n                return details.image[3][\"#text\"]\n            }\n            else if (details.image[0]){\n                return details.image[0][\"#text\"]\n            }\n        }\n        else {\n            return (\"https://st3.depositphotos.com/23594922/31822/v/600/depositphotos_318221368-stock-illustration-missing-picture-page-for-website.jpg\")\n        }\n    }\n    \n    if (reviewData) {\n    return (\n        <Card sx={{ display: 'flex' }} style={{width:\"15vw\", height:\"34vw\"}} xs={12}>\n              <Grid container \n            direction=\"row\"\n            justifyContent=\"center\"\n            alignItems=\"stretch\"\n            sx={{border: 2, borderColor: \"black\"}}>\n      <Grid item xs={12} component={Box} sx={{ display: 'flex'}}>\n      <CardMedia\n      component=\"img\"\n      style={{height:\"20vw\"}}\n      image={albumPicture(albumInfo)}\n      alt={`Poster for ${albumInfo.name} not found.`}\n      />\n      </Grid>\n      <Grid xs={12} item component={Box} sx={{display: 'flex', flexDirection: 'column' }}>\n      <CardHeader\n                \n                title={`${albumInfo.name}`}\n                subheader={`${albumInfo.artist}`}\n                titleTypographyProps={{fontSize:\"1vw\"}}\n                subheaderTypographyProps={{color: \"white\", fontSize:\".7vw\"}}\n                style={{ textAlign: 'center', height:\"5vw\" }}\n                sx={{\n                    color: \"white\",\n                    backgroundColor: \"black\",\n                    border: 2, borderColor: \"black\",\n                }}\n          >\n          </CardHeader>\n          <CardContent sx={{ flex: '1 0 auto' }} style={{overflow:\"scroll\", textAlign: 'center', height: \"7vw\"}}>\n            <Rating label=\"Average Rating\" name=\"half-rating-read\" defaultValue={parseFloat(reviewData.rating)} precision={0.5} readOnly />\n      <Typography variant=\"subtitle1\" fontSize=\".75vw\">\n      {`${reviewData.rating} ☆`}\n          </Typography>\n              <Typography component=\"div\" variant=\"body2\" sx={{mt:1}} fontSize=\".6vw\">\n                {`${reviewData.review_text}`}\n              </Typography>\n              <Typography variant=\"subtitle1\" sx={{mt:1}} fontSize=\".75vw\">\n      {`Reviewed on: ${getReviewDate(reviewData)}`}\n          </Typography>\n            </CardContent>\n            \n      </Grid>\n      <Button onClick={handleUpdate} variant=\"contained\" fullWidth sx={{mt:.4}} style={{height: \"1.5vw\"}}>\n                Update\n              </Button>\n      </Grid>\n      \n      </Card>\n      )\n    }\n    else {\n        return (\n            <Typography>\n                Loading...\n            </Typography>\n        )\n    }\n}\n\nexport default AlbumShelfCard","import React, { useState, useEffect } from \"react\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardHeader from '@mui/material/CardHeader'\nimport Button from '@mui/material/Button';\nimport Box from \"@mui/material/Box\";\nimport Typography from '@mui/material/Typography';\nimport { Grid } from \"@mui/material\";\nimport Rating from '@mui/material/Rating';\nimport TextField from '@mui/material/TextField'\n\nfunction UpdateMovie({movieData, user}) {\n    const [movieInfo, setMovieInfo] = useState(false)\n    const [rating,setRating] = useState(2.5)\n    const [review,setReview] = useState(\"It stinks! -Jay Sherman, The Critic\")\n    const [hasReviewed,setHasReviewed] = useState(false)\n    const [submitted,setSubmitted] = useState(false)\n    const [reviewDate,setReviewDate] = useState(\"\")\n    \n    function getReviewDate(reviewData){\n      let year = reviewData.slice(0,4)\n      let month = reviewData.slice(5,7)\n      let day = reviewData.slice(8,10)\n      let date = `${month}-${day}-${year}`\n      return date\n    }\n\n    useEffect(() => {\n        fetch(`https://api.themoviedb.org/3/movie/${movieData.id}?api_key=3776580a8d92df7064c0e2ee058f3d0d`)\n        .then((r) => {\n          if (r.ok) {\n            r.json()\n            .then((data) => {\n              if (data) {\n                setMovieInfo(data)\n                }\n                })\n            }})}, [submitted])\n\n            useEffect(() => {\n                fetch(`/users/${user.id}/reviews`)\n                .then((r) => {\n                  if (r.ok) {\n                    r.json()\n                    .then((data) => {\n                        let checkForReview = data.map((givenReview) => {\n                            if (givenReview.artwork.identifier == movieData.id){\n                                setHasReviewed(givenReview)\n                                setRating(givenReview.rating)\n                                setReview(givenReview.review_text)\n                                setReviewDate(givenReview.updated_at)\n                            }\n                        })\n                    })\n                    }})}, [movieInfo,submitted])\n\n    function handleUpdate(e){\n        e.preventDefault()\n       let new_review = {\n           id: hasReviewed.id,\n           artwork_id: hasReviewed.artwork_id,\n           user_id: hasReviewed.user_id,\n           rating: rating,\n           review_text: review\n       } \n       fetch(`/reviews/${hasReviewed.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(new_review),\n      }).then((res) => {\n        if (res.ok) {\n          res.json().then((reviewInDB) => {\n            setSubmitted(reviewInDB)\n            e.target.reset()\n          });\n        } else {\n          res.json().then((errors) => console.log(errors));\n        }\n      });\n    }\n\n    function handleRating(e){\n        setRating(e.target.value)\n    }\n\n    function handleReview(e){\n        setReview(e.target.value)\n    }\n\n    function getYear(movieInfo) {\n        if (movieInfo.release_date) {\n        let release_date = movieInfo.release_date\n        let year = release_date.slice(0,4)\n        return year\n        }\n        else {\n          return movieInfo.release_date\n        }\n      }\n    \n    function moviePicture(movieInfo){\n        if (movieInfo.poster_path){\n            return (\"https://image.tmdb.org/t/p/w500\" + `${movieInfo.poster_path}`)\n        }\n        else {\n            return (\"https://st3.depositphotos.com/23594922/31822/v/600/depositphotos_318221368-stock-illustration-missing-picture-page-for-website.jpg\")\n        }\n    }\n\n      function cleanUpSummary(summary){\n          let noBold = summary.replaceAll(\"<b>\",\"\")\n          let noBoldClose = noBold.replaceAll(\"</b>\",\"\")\n          let noItalic = noBoldClose.replaceAll(\"<i>\",\"\")\n          let noItalicClose = noItalic.replaceAll(\"</i>\",\"\")\n          let noP = noItalicClose.replaceAll(\"<p>\",\"\")\n          let noPClose = noP.replaceAll(\"</p>\",\"\")\n          let noBR = noPClose.replaceAll(\"<br>\",\"-\")\n          let noBRClose = noBR.replaceAll(\"</br>\",\"\")\n          return noBRClose\n      }\n\n      function shortSummary(movieInfo) {\n        if (movieInfo.overview) {\n        let splitSummary = movieInfo.overview.split(\" \")\n        let shortenedSummary = splitSummary.slice(0,100)\n        let summary = shortenedSummary.join(\" \")\n        let cleanSummary = cleanUpSummary(summary)\n        return (cleanSummary + \"...\")\n        }\n        else {\n          return movieInfo.overview\n        }\n      }\n    if (movieInfo) {\n            return (\n            <Grid container justifyContent=\"center\">\n            <Card sx={{width:\"50vw\", border: 1, borderColor: \"black\"}} >\n            <CardHeader\n                    xs = {12}\n                                title={`${movieInfo.title}`}\n                                style={{ textAlign: 'center' }}\n                                sx={{\n                                    color: \"white\",\n                                    backgroundColor: \"black\",\n                                    border: 1,\n                                    borderColor: \"#FFD700\"\n                                }}\n                          >\n                          </CardHeader>\n                          <CardMedia\n                      component=\"img\"\n                      height=\"100%\"\n                      width=\"100%\"\n                      sx={{ width: \"20vw\", height: \"30vw\", float:\"right\" }}\n                      image={`${moviePicture(movieInfo)}`}\n              alt={`${movieInfo.title} Cover`}\n                    />\n                      <CardContent sx={{ flex: '1 0 auto' }} style={{ textAlign: 'center' }}>\n                      <Typography component=\"div\" variant=\"h5\">\n                  {getYear(movieInfo)}\n                </Typography>\n                <Typography component=\"div\" variant=\"h7\">\n                  {shortSummary(movieInfo)}\n                </Typography>\n                      </CardContent>\n                      <Box textAlign='center' component=\"form\" onSubmit={handleUpdate}> \n                      <CardActions style={{justifyContent: 'center'}} sx={{alignItems: 'center', width:\"29.8vw\"}}>\n                      <Grid container spacing={1} style={{ justifyContent: \"center\"}}>\n                      <Rating label = \"Rating\" sx={{ mt: 1, mr: 1,}} name=\"half-rating\" value={rating} precision={0.5} onChange={handleRating}/>\n                      <TextField\n                  id=\"filled-multiline-static\"\n                  label=\"Your Review\"\n                  multiline\n                  rows={4}\n                  fullWidth\n                  value={review}\n                  variant=\"filled\"\n                  onChange={handleReview}\n        \n                />\n                   <Grid item xs={12} component={Typography} variant=\"subtitle1\" sx={{mt:1}} fontSize=\".75vw\" textAlign=\"center\">\n              {`Previous Review on: ${getReviewDate(reviewDate)}`}\n          </Grid>\n                   <Grid item component={Button}\n                          type=\"submit\"\n                          variant=\"contained\"\n                          sx={{ mt: 1, mb: .1, color: \"white\", backgroundColor: \"black\" }}\n                        >\n                          Update Review\n                        </Grid>\n                </Grid>\n                \n              </CardActions>\n                      </Box>\n                    </Card>\n                    </Grid>\n        )\n    }\n    else {\n        return (\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\n          Loading...\n        </Typography>\n        )\n    }\n}\n\n\n\nexport default UpdateMovie\n","import React, { useState, useEffect } from \"react\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardHeader from '@mui/material/CardHeader'\nimport Button from '@mui/material/Button';\nimport Box from \"@mui/material/Box\";\nimport Typography from '@mui/material/Typography';\nimport { Grid } from \"@mui/material\";\nimport Rating from '@mui/material/Rating';\nimport TextField from '@mui/material/TextField'\n\nfunction UpdateBook({bookData, user}) {\n    const [bookInfo, setBookInfo] = useState(false)\n    const [rating,setRating] = useState(2.5)\n    const [review,setReview] = useState(\"It stinks! -Jay Sherman, The Critic\")\n    const [hasReviewed,setHasReviewed] = useState(false)\n    const [submitted,setSubmitted] = useState(false)\n    const [reviewDate,setReviewDate] = useState(\"\")\n    \n    function getReviewDate(reviewData){\n      let year = reviewData.slice(0,4)\n      let month = reviewData.slice(5,7)\n      let day = reviewData.slice(8,10)\n      let date = `${month}-${day}-${year}`\n      return date\n    }\n                \n\n    useEffect(() => {\n        fetch(`https://www.googleapis.com/books/v1/volumes/${bookData.id}`)\n        .then((r) => {\n          if (r.ok) {\n            r.json()\n            .then((data) => {\n              if (data.volumeInfo) {\n                setBookInfo(data)\n                }\n                })\n            }})}, [])\n\n            useEffect(() => {\n                fetch(`/users/${user.id}/reviews`)\n                .then((r) => {\n                  if (r.ok) {\n                    r.json()\n                    .then((data) => {\n                        let checkForReview = data.map((givenReview) => {\n                            if (givenReview.artwork.identifier === bookData.id){\n                                setHasReviewed(givenReview)\n                                setRating(givenReview.rating)\n                                setReview(givenReview.review_text)\n                                setReviewDate(givenReview.updated_at)\n                            }\n                        })\n                    })\n                    }})}, [bookInfo,submitted])\n\n\n    function handleUpdate(e){\n        e.preventDefault()\n       let new_review = {\n           id: hasReviewed.id,\n           artwork_id: hasReviewed.artwork_id,\n           user_id: hasReviewed.user_id,\n           rating: rating,\n           review_text: review\n       } \n       fetch(`/reviews/${hasReviewed.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(new_review),\n      }).then((res) => {\n        if (res.ok) {\n          res.json().then((reviewInDB) => {\n            console.log(reviewInDB)\n          });\n        } else {\n          res.json().then((errors) => console.log(errors));\n        }\n      });\n    }\n\n    function handleRating(e){\n        setRating(e.target.value)\n    }\n\n    function handleReview(e){\n        setReview(e.target.value)\n    }\n\n    function getYear(bookInfo) {\n        if (bookInfo.volumeInfo.publishedDate) {\n        let release_date = bookInfo.volumeInfo.publishedDate\n        let year = release_date.slice(0,4)\n        return year\n        }\n        else {\n          return bookInfo.volumeInfo.publishedDate\n        }\n      }\n    \n    function bookPicture(vi){\n        if (vi.imageLinks){\n            if (vi.imageLinks.thumbnail){\n                return vi.imageLinks.thumbnail\n            }\n            else if (vi.imageLinks.smallThumbnail){\n                return vi.imageLinks.smallThumbnail\n            }\n        }\n        else {\n            return (\"https://st3.depositphotos.com/23594922/31822/v/600/depositphotos_318221368-stock-illustration-missing-picture-page-for-website.jpg\")\n        }\n    }\n\n      function cleanUpSummary(summary){\n          let noBold = summary.replaceAll(\"<b>\",\"\")\n          let noBoldClose = noBold.replaceAll(\"</b>\",\"\")\n          let noItalic = noBoldClose.replaceAll(\"<i>\",\"\")\n          let noItalicClose = noItalic.replaceAll(\"</i>\",\"\")\n          let noP = noItalicClose.replaceAll(\"<p>\",\"\")\n          let noPClose = noP.replaceAll(\"</p>\",\"\")\n          let noBR = noPClose.replaceAll(\"<br>\",\"-\")\n          let noBRClose = noBR.replaceAll(\"</br>\",\"\")\n          return noBRClose\n      }\n\n      function shortSummary(bookInfo) {\n        if (bookInfo.volumeInfo.description) {\n        let splitSummary = bookInfo.volumeInfo.description.split(\" \")\n        let shortenedSummary = splitSummary.slice(0,100)\n        let summary = shortenedSummary.join(\" \")\n        let cleanSummary = cleanUpSummary(summary)\n        return (cleanSummary + \"...\")\n        }\n        else {\n          return bookInfo.volumeInfo.description\n        }\n      }\n    if (bookInfo) {\n      return (\n        <Grid container justifyContent=\"center\">\n            <Card sx={{width:\"50vw\", border: 1, borderColor: \"black\"}} >\n      <CardHeader\n              xs = {12}\n                          title={`${bookInfo.volumeInfo.title}`}\n                          subheader={`${bookInfo.volumeInfo.authors[0]}, ${getYear(bookInfo)}`}\n              subheaderTypographyProps={{color: \"white\"}}\n                          style={{ textAlign: 'center' }}\n                          sx={{\n                              color: \"white\",\n                              backgroundColor: \"black\",\n                              border: 1,\n                              borderColor: \"#FFD700\"\n                          }}\n                    >\n                    </CardHeader>\n                    <CardMedia\n                component=\"img\"\n                height=\"100%\"\n                width=\"100%\"\n                sx={{ width: \"20vw\", height: \"30vw\", float:\"right\" }}\n                image={`${bookPicture(bookInfo.volumeInfo)}`}\n                alt={`${bookInfo.volumeInfo.title} Cover`}\n              />\n                <CardContent sx={{ flex: '1 0 auto' }} style={{ textAlign: 'center' }}>\n                  <Typography component=\"div\" variant=\"h7\">\n                    {shortSummary(bookInfo)}\n                  </Typography>\n                </CardContent>\n                <Box textAlign='center' component=\"form\" onSubmit={handleUpdate}> \n                <CardActions style={{justifyContent: 'center'}} sx={{alignItems: 'center', width:\"29.8vw\"}}>\n                <Grid container spacing={1} style={{ justifyContent: \"center\"}}>\n                <Rating label = \"Rating\" sx={{ mt: 1, mr: 1,}} name=\"half-rating\" value={rating} precision={0.5} onChange={handleRating}/>\n                <TextField\n            id=\"filled-multiline-static\"\n            label=\"Your Review\"\n            multiline\n            rows={4}\n            fullWidth\n            value={review}\n            variant=\"filled\"\n            onChange={handleReview}\n  \n          />\n             <Grid item xs={12} component={Typography} variant=\"subtitle1\" sx={{mt:1}} fontSize=\".75vw\" textAlign=\"center\">\n              {`Previous Review on: ${getReviewDate(reviewDate)}`}\n          </Grid>\n                   <Grid item component={Button}\n                          type=\"submit\"\n                          variant=\"contained\"\n                          sx={{ mt: 1, mb: .1, color: \"white\", backgroundColor: \"black\" }}\n                        >\n                          Update Review\n                        </Grid>\n                </Grid>\n          \n        </CardActions>\n                </Box>\n              </Card>\n              </Grid>\n  )\n    }\n    else {\n        return (\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\n          Loading...\n        </Typography>\n        )\n    }\n}\n\n\n\nexport default UpdateBook\n","import React, { useState, useEffect } from \"react\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardHeader from '@mui/material/CardHeader'\nimport Button from '@mui/material/Button';\nimport Box from \"@mui/material/Box\";\nimport Typography from '@mui/material/Typography';\nimport { Grid } from \"@mui/material\";\nimport Rating from '@mui/material/Rating';\nimport TextField from '@mui/material/TextField'\n\nfunction UpdateTV({tvData, user}) {\n    const [tvInfo, setTVInfo] = useState(false)\n    const [rating,setRating] = useState(2.5)\n    const [review,setReview] = useState(\"It stinks! -Jay Sherman, The Critic\")\n    const [hasReviewed,setHasReviewed] = useState(false)\n    const [hasSubmitted,setHasSubmitted] = useState(false)\n    const [reviewDate,setReviewDate] = useState(\"\")\n    \n    function getReviewDate(reviewData){\n      let year = reviewData.slice(0,4)\n      let month = reviewData.slice(5,7)\n      let day = reviewData.slice(8,10)\n      let date = `${month}-${day}-${year}`\n      return date\n    }\n\n    useEffect(() => {\n        fetch(`https://api.themoviedb.org/3/tv/${tvData.id}?api_key=3776580a8d92df7064c0e2ee058f3d0d`)\n        .then((r) => {\n          if (r.ok) {\n            r.json()\n            .then((data) => {\n              if (data) {\n                setTVInfo(data)\n                }\n                })\n            }})}, [])\n\n            useEffect(() => {\n                fetch(`/users/${user.id}/reviews`)\n                .then((r) => {\n                  if (r.ok) {\n                    r.json()\n                    .then((data) => {\n                        let checkForReview = data.map((givenReview) => {\n                            if (givenReview.artwork.identifier == tvData.id){\n                                setHasReviewed(givenReview)\n                                setRating(givenReview.rating)\n                                setReview(givenReview.review_text)\n                                setReviewDate(givenReview.updated_at)\n                            }\n                        })\n                    })\n                    }})}, [tvInfo,hasSubmitted])\n\n    function handleUpdate(e){\n        e.preventDefault()\n       let new_review = {\n           id: hasReviewed.id,\n           artwork_id: hasReviewed.artwork_id,\n           user_id: hasReviewed.user_id,\n           rating: rating,\n           review_text: review\n       } \n       fetch(`/reviews/${hasReviewed.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(new_review),\n      }).then((res) => {\n        if (res.ok) {\n          res.json().then((reviewInDB) => {\n            setHasSubmitted(reviewInDB)\n            e.target.reset()\n          });\n        } else {\n          res.json().then((errors) => console.log(errors));\n        }\n      });\n    }\n\n    function handleRating(e){\n        setRating(e.target.value)\n    }\n\n    function handleReview(e){\n        setReview(e.target.value)\n    }\n\n    function getYear(tvInfo) {\n        if (tvInfo.first_air_date) {\n        let first_air_date = tvInfo.first_air_date\n        let year = first_air_date.slice(0,4)\n        return year\n        }\n        else {\n          return tvInfo.first_air_date\n        }\n      }\n    \n    function tvPicture(tvInfo){\n        if (tvInfo.poster_path){\n            return (\"https://image.tmdb.org/t/p/w500\" + `${tvInfo.poster_path}`)\n        }\n        else {\n            return (\"https://st3.depositphotos.com/23594922/31822/v/600/depositphotos_318221368-stock-illustration-missing-picture-page-for-website.jpg\")\n        }\n    }\n\n      function cleanUpSummary(summary){\n          let noBold = summary.replaceAll(\"<b>\",\"\")\n          let noBoldClose = noBold.replaceAll(\"</b>\",\"\")\n          let noItalic = noBoldClose.replaceAll(\"<i>\",\"\")\n          let noItalicClose = noItalic.replaceAll(\"</i>\",\"\")\n          let noP = noItalicClose.replaceAll(\"<p>\",\"\")\n          let noPClose = noP.replaceAll(\"</p>\",\"\")\n          let noBR = noPClose.replaceAll(\"<br>\",\"-\")\n          let noBRClose = noBR.replaceAll(\"</br>\",\"\")\n          return noBRClose\n      }\n\n      function shortSummary(movieInfo) {\n        if (movieInfo.overview) {\n        let splitSummary = movieInfo.overview.split(\" \")\n        let shortenedSummary = splitSummary.slice(0,100)\n        let summary = shortenedSummary.join(\" \")\n        let cleanSummary = cleanUpSummary(summary)\n        return (cleanSummary + \"...\")\n        }\n        else {\n          return movieInfo.overview\n        }\n      }\n    if (tvInfo) {\n            return (\n                <Grid container justifyContent=\"center\">\n            <Card sx={{width:\"50vw\", border: 1, borderColor: \"black\"}} >\n            <CardHeader\n                    xs = {12}\n                                title={`${tvInfo.name}`}\n                                style={{ textAlign: 'center' }}\n                                sx={{\n                                    color: \"white\",\n                                    backgroundColor: \"black\",\n                                    border: 1,\n                                    borderColor: \"#FFD700\"\n                                }}\n                          >\n                          </CardHeader>\n                          <CardMedia\n                      component=\"img\"\n                      height=\"100%\"\n                      width=\"100%\"\n                      sx={{ width: \"20vw\", height: \"30vw\", float:\"right\" }}\n                      image={`${tvPicture(tvInfo)}`}\n                      alt={`${tvInfo.name} Cover`}\n                    />\n                      <CardContent sx={{ flex: '1 0 auto' }} style={{ textAlign: 'center' }}>\n                      <Typography component=\"div\" variant=\"h5\">\n                  {getYear(tvInfo)}\n                </Typography>\n                <Typography component=\"div\" variant=\"h7\">\n                  {shortSummary(tvInfo)}\n                </Typography>\n                      </CardContent>\n                      <Box textAlign='center' component=\"form\" onSubmit={handleUpdate}> \n                      <CardActions style={{justifyContent: 'center'}} sx={{alignItems: 'center', width:\"29.8vw\"}}>\n                      <Grid container spacing={1} style={{ justifyContent: \"center\"}}>\n                      <Rating label = \"Rating\" sx={{ mt: 1, mr: 1,}} name=\"half-rating\" value={rating} precision={0.5} onChange={handleRating}/>\n                      <TextField\n                  id=\"filled-multiline-static\"\n                  label=\"Your Review\"\n                  multiline\n                  rows={4}\n                  fullWidth\n                  value={review}\n                  variant=\"filled\"\n                  onChange={handleReview}\n        \n                />\n                   <Grid item xs={12} component={Typography} variant=\"subtitle1\" sx={{mt:1}} fontSize=\".75vw\" textAlign=\"center\">\n              {`Previous Review on: ${getReviewDate(reviewDate)}`}\n          </Grid>\n                   <Grid item component={Button}\n                          type=\"submit\"\n                          variant=\"contained\"\n                          sx={{ mt: 1, mb: .1, color: \"white\", backgroundColor: \"black\" }}\n                        >\n                          Update Review\n                        </Grid>\n                </Grid>\n                \n              </CardActions>\n                      </Box>\n                    </Card>\n                    </Grid>\n        )\n    }\n    else {\n        return (\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\n          Loading...\n        </Typography>\n        )\n    }\n}\n\n\n\nexport default UpdateTV","import React, { useState, useEffect } from \"react\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardHeader from '@mui/material/CardHeader'\nimport Button from '@mui/material/Button';\nimport Box from \"@mui/material/Box\";\nimport Typography from '@mui/material/Typography';\nimport { Grid } from \"@mui/material\";\nimport Rating from '@mui/material/Rating';\nimport TextField from '@mui/material/TextField'\nimport { List } from \"@mui/material\";\nimport { ListItem } from \"@mui/material\";\n\nfunction UpdateAlbum({albumData, user}) {\n    console.log(albumData)\n    const [albumInfo, setAlbumInfo] = useState(false)\n    const [rating,setRating] = useState(2.5)\n    const [review,setReview] = useState(\"It stinks! -Jay Sherman, The Critic\")\n    const [reviewDate,setReviewDate] = useState(\"\")\n    const [hasReviewed,setHasReviewed] = useState(false)\n    const [submitted,setSubmitted] = useState(false)\n\n    function getReviewDate(reviewData){\n      let year = reviewData.slice(0,4)\n      let month = reviewData.slice(5,7)\n      let day = reviewData.slice(8,10)\n      let date = `${month}-${day}-${year}`\n      return date\n    }\n  \n\n    useEffect(() => {\n        fetch(`https://ws.audioscrobbler.com/2.0/?method=album.getinfo&api_key=dc4f409aa2656dcd1ab97a4798fc2915&mbid=${albumData.identifier}&format=json`)\n        .then((r) => {\n          if (r.ok) {\n            r.json()\n            .then((data) => {\n              if (data) {\n                setAlbumInfo(data.album)\n                console.log(albumInfo)\n                }\n                })\n            }})}, [])\n\n            useEffect(() => {\n                fetch(`/users/${user.id}/reviews`)\n                .then((r) => {\n                  if (r.ok) {\n                    r.json()\n                    .then((data) => {\n                        let checkForReview = data.map((givenReview) => {\n                            if (givenReview.artwork.identifier === albumData.identifier){\n                                setHasReviewed(givenReview)\n                                setRating(givenReview.rating)\n                                setReview(givenReview.review_text)\n                                setReviewDate(givenReview.updated_at)\n                            }\n                        })\n                    })\n                    }})}, [albumInfo,submitted])\n\n\n\n    function handleUpdate(e){\n        e.preventDefault()\n       let new_review = {\n           id: hasReviewed.id,\n           artwork_id: hasReviewed.artwork_id,\n           user_id: hasReviewed.user_id,\n           rating: rating,\n           review_text: review\n       } \n       fetch(`/reviews/${hasReviewed.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(new_review),\n      }).then((res) => {\n        if (res.ok) {\n          res.json().then((reviewInDB) => {;\n            setSubmitted(reviewInDB)\n            e.target.reset()\n          });\n        } else {\n          res.json().then((errors) => console.log(errors));\n        }\n      });\n    }\n\n    function handleRating(e){\n        setRating(e.target.value)\n    }\n\n    function handleReview(e){\n        setReview(e.target.value)\n    }\n    \n    function albumPicture(details){\n        if (details.image){\n            if (details.image[4]){\n                return details.image[4][\"#text\"]\n            }\n            else if (details.image[3]){\n                return details.image[3][\"#text\"]\n            }\n            else if (details.image[0]){\n                return details.image[0][\"#text\"]\n            }\n        }\n        else {\n            return (\"https://st3.depositphotos.com/23594922/31822/v/600/depositphotos_318221368-stock-illustration-missing-picture-page-for-website.jpg\")\n        }\n    }\n\n    function spawnTracks(albumDetails){\n      if (albumDetails.tracks.track) {\n      let tracks = albumDetails.tracks.track\n      let counter = 0\n      let listedTracks = tracks.map((givenTrack) => {\n        counter = counter+1\n        return (\n          <ListItem>\n            <Typography variant=\"subtitle1\" fontSize=\".75vw\">\n            {`${counter}. ${givenTrack.name}`}\n                        </Typography>\n          </ListItem>\n        )\n      })\n      return listedTracks\n    }\n    else {\n      return (\n        <Typography variant=\"body2\" sx={{mt:1}} fontSize=\".8vw\">\n                Loading...\n              </Typography>\n      )\n    }\n  }\n    if (albumInfo) {\n            return (\n                <Grid container justifyContent=\"center\">\n            <Card sx={{width:\"50vw\", border: 1, borderColor: \"black\"}} >\n            <CardHeader\n                    xs = {12}\n                                title={`${albumInfo.name}`}\n                                subheader={`${albumInfo.artist}`}\n                    subheaderTypographyProps={{color: \"white\"}}\n                                style={{ textAlign: 'center' }}\n                                sx={{\n                                    color: \"white\",\n                                    backgroundColor: \"black\",\n                                    border: 1,\n                                    borderColor: \"#FFD700\"\n                                }}\n                          >\n                          </CardHeader>\n                          <CardMedia\n                      component=\"img\"\n                      height=\"100%\"\n                      width=\"100%\"\n                      sx={{ width: \"20vw\", height: \"30vw\", float:\"right\" }}\n                      image={`${albumPicture(albumInfo)}`}\n              alt={`${albumInfo.title} Cover`}\n                    />\n                      <CardContent sx={{ flex: '1 0 auto', width: \"29vw\", height:\"14vw\", mb:2}} style={{ textAlign: 'center' }}>\n                      <Typography variant=\"subtitle1\" fontSize=\".75vw\">\n                        Track List:\n                        </Typography>\n                        <List dense={true} style={{overflow:\"scroll\"}} sx={{width:\"28.6vw\", height:\"12vw\"}}>\n                          {spawnTracks(albumInfo)}\n                        </List>\n                      </CardContent>\n                      <Box textAlign='center' component=\"form\" onSubmit={handleUpdate}> \n                      <CardActions style={{justifyContent: 'center'}} sx={{alignItems: 'center', width:\"29.8vw\"}}>\n                      <Grid container spacing={1} style={{ justifyContent: \"center\", textAlign:\"center\"}}>\n                      <Rating label = \"Rating\" sx={{ mt: 1, mr: 1,}} name=\"half-rating\" value={rating} precision={0.5} onChange={handleRating}/>\n                      <TextField\n                  id=\"filled-multiline-static\"\n                  label=\"Your Review\"\n                  multiline\n                  rows={4}\n                  fullWidth\n                  value={review}\n                  variant=\"filled\"\n                  onChange={handleReview}\n        \n                />\n                <Grid item xs={12} component={Typography} variant=\"subtitle1\" sx={{mt:1}} fontSize=\".75vw\" textAlign=\"center\">\n              {`Previous Review on: ${getReviewDate(reviewDate)}`}\n          </Grid>\n                   <Grid item component={Button}\n                          type=\"submit\"\n                          variant=\"contained\"\n                          sx={{ mt: 1, mb: .1, color: \"white\", backgroundColor: \"black\" }}\n                        >\n                          Update Review\n                        </Grid>\n                </Grid>\n                \n              </CardActions>\n                      </Box>\n                    </Card>\n                    </Grid>\n        )\n    }\n    else {\n        return (\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\n          Loading...\n        </Typography>\n        )\n    }\n}\n\n\n\nexport default UpdateAlbum\n","import React, { useState, useEffect } from \"react\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardHeader from '@mui/material/CardHeader'\nimport Button from '@mui/material/Button';\nimport Box from \"@mui/material/Box\";\nimport Typography from '@mui/material/Typography';\nimport { Grid } from \"@mui/material\";\nimport Rating from '@mui/material/Rating';\nimport TextField from '@mui/material/TextField'\n\nfunction UpdateGame({gameData, user}) {\n    const [gameInfo, setGameInfo] = useState(false)\n    const [rating,setRating] = useState(2.5)\n    const [review,setReview] = useState(\"It stinks! -Jay Sherman, The Critic\")\n    const [hasReviewed,setHasReviewed] = useState(false)\n    const [submitted,setSubmitted] = useState(false)\n    const [reviewDate,setReviewDate] = useState(\"\")\n    \n    function getReviewDate(reviewData){\n      let year = reviewData.slice(0,4)\n      let month = reviewData.slice(5,7)\n      let day = reviewData.slice(8,10)\n      let date = `${month}-${day}-${year}`\n      return date\n    }\n\n    useEffect(() => {\n        fetch(`https://api.rawg.io/api/games/${gameData.id}?key=3399fc338e8a43b19b6edf538ebbb5a2`)\n        .then((r) => {\n          if (r.ok) {\n            r.json()\n            .then((data) => {\n              if (data) {\n                setGameInfo(data)\n                }\n                })\n            }})}, [])\n\n            useEffect(() => {\n                fetch(`/users/${user.id}/reviews`)\n                .then((r) => {\n                  if (r.ok) {\n                    r.json()\n                    .then((data) => {\n                        let checkForReview = data.map((givenReview) => {\n                            if (givenReview.artwork.identifier == gameData.id){\n                                setHasReviewed(givenReview)\n                                setRating(givenReview.rating)\n                                setReview(givenReview.review_text)\n                                setReviewDate(givenReview.updated_at)\n                            }\n                        })\n                    })\n                    }})}, [gameInfo,submitted])\n\n\n    function handleUpdate(e){\n        e.preventDefault()\n       let new_review = {\n           id: hasReviewed.id,\n           artwork_id: hasReviewed.artwork_id,\n           user_id: hasReviewed.user_id,\n           rating: rating,\n           review_text: review\n       } \n       fetch(`/reviews/${hasReviewed.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(new_review),\n      }).then((res) => {\n        if (res.ok) {\n          res.json().then((reviewInDB) => {\n            setSubmitted(reviewInDB);\n          });\n        } else {\n          res.json().then((errors) => console.log(errors));\n        }\n      });\n    }\n\n    function handleRating(e){\n        setRating(e.target.value)\n    }\n\n    function handleReview(e){\n        setReview(e.target.value)\n    }\n\n    function getYear(gameInfo) {\n        if (gameInfo.released) {\n        let release_date = gameInfo.released\n        let year = release_date.slice(0,4)\n        return year\n        }\n        else {\n          return gameInfo.released\n        }\n      }\n    \n    function gamePicture(gameInfo){\n        if (gameInfo.background_image){\n            return gameInfo.background_image\n        }\n        else {\n            return (\"https://st3.depositphotos.com/23594922/31822/v/600/depositphotos_318221368-stock-illustration-missing-picture-page-for-website.jpg\")\n        }\n    }\n\n      function cleanUpSummary(summary){\n          let noBold = summary.replaceAll(\"<b>\",\"\")\n          let noBoldClose = noBold.replaceAll(\"</b>\",\"\")\n          let noItalic = noBoldClose.replaceAll(\"<i>\",\"\")\n          let noItalicClose = noItalic.replaceAll(\"</i>\",\"\")\n          let noP = noItalicClose.replaceAll(\"<p>\",\"\")\n          let noPClose = noP.replaceAll(\"</p>\",\"\")\n          let noBR = noPClose.replaceAll(\"<br>\",\"-\")\n          let noBRClose = noBR.replaceAll(\"</br>\",\"\")\n          let moreClean = noBRClose.replaceAll(\"<br />\",\"\")\n          let wowWhat = moreClean.replaceAll(\"&#39;\",\"'\")\n          return wowWhat\n      }\n\n      function shortSummary(gameInfo) {\n        if (gameInfo.description) {\n        let splitSummary = gameInfo.description.split(\" \")\n        let shortenedSummary = splitSummary.slice(0,100)\n        let summary = shortenedSummary.join(\" \")\n        let cleanSummary = cleanUpSummary(summary)\n        return (cleanSummary + \"...\")\n        }\n        else {\n          return gameInfo.description\n        }\n      }\n    if (gameInfo) {\n            return (\n                <Grid container justifyContent=\"center\">\n            <Card sx={{width:\"50vw\", border: 1, borderColor: \"black\"}} >\n            <CardHeader\n                    xs = {12}\n                                title={`${gameInfo.name}`}\n                    subheaderTypographyProps={{color: \"white\"}}\n                                style={{ textAlign: 'center' }}\n                                sx={{\n                                    color: \"white\",\n                                    backgroundColor: \"black\",\n                                    border: 1,\n                                    borderColor: \"#FFD700\"\n                                }}\n                          >\n                          </CardHeader>\n                          <CardMedia\n                      component=\"img\"\n                      height=\"100%\"\n                      width=\"100%\"\n                      sx={{ width: \"20vw\", height: \"30vw\", float:\"right\" }}\n                      image={`${gamePicture(gameInfo)}`}\n              alt={`${gameInfo.name} Cover`}\n                    />\n                      <CardContent sx={{ flex: '1 0 auto' }} style={{ textAlign: 'center' }}>\n                      <Typography component=\"div\" variant=\"h5\">\n                  {getYear(gameInfo)}\n                </Typography>\n                        <Typography component=\"div\" variant=\"h7\">\n                          {shortSummary(gameInfo)}\n                        </Typography>\n                      </CardContent>\n                      <Box textAlign='center' component=\"form\" onSubmit={handleUpdate}> \n                      <CardActions style={{justifyContent: 'center'}} sx={{alignItems: 'center', width:\"29.8vw\"}}>\n                      <Grid container spacing={1} style={{ justifyContent: \"center\"}}>\n                      <Rating label = \"Rating\" sx={{ mt: 1, mr: 1,}} name=\"half-rating\" value={rating} precision={0.5} onChange={handleRating}/>\n                      <TextField\n                  id=\"filled-multiline-static\"\n                  label=\"Your Review\"\n                  multiline\n                  rows={4}\n                  fullWidth\n                  value={review}\n                  variant=\"filled\"\n                  onChange={handleReview}\n        \n                />\n                   <Grid item xs={12} component={Typography} variant=\"subtitle1\" sx={{mt:1}} fontSize=\".75vw\" textAlign=\"center\">\n              {`Previous Review on: ${getReviewDate(reviewDate)}`}\n          </Grid>\n                   <Grid item component={Button}\n                          type=\"submit\"\n                          variant=\"contained\"\n                          sx={{ mt: 1, mb: .1, color: \"white\", backgroundColor: \"black\" }}\n                        >\n                          Update Review\n                        </Grid>\n                </Grid>\n                \n              </CardActions>\n                      </Box>\n                    </Card>\n                    </Grid>\n        )\n    }\n    else {\n        return (\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\n          Loading...\n        </Typography>\n        )\n    }\n}\n\n\n\nexport default UpdateGame\n","import Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport {ThemeProvider } from \"@mui/material/styles\";\nimport React, { useEffect, useState } from \"react\";\nimport BookShelfCard from \"./BookShelfCard\";\nimport GameShelfCard from \"./GameShelfCard\";\nimport MovieShelfCard from \"./MovieShelfCard\";\nimport TVShelfCard from \"./TVShelfCard\";\nimport AlbumShelfCard from \"./AlbumShelfCard\";\nimport { Stack } from \"@mui/material\";\nimport UpdateMovie from \"./UpdateMovie\";\nimport UpdateBook from \"./UpdateBook\";\nimport UpdateTV from \"./UpdateTV\";\nimport UpdateAlbum from \"./UpdateAlbum\";\nimport UpdateGame from \"./UpdateGame\";\n\n\nfunction MyShelf({user,theme}) {\n    const [reviews,setReviews] = useState([])\n    const [displayReviews,setDisplayReviews] = useState([])\n    const [filters,setFilters] = useState(\"\")\n    const [selectedMedia,setSelectedMedia] = useState(false)\n    const [mediaInfo,setMediaInfo] = useState(false)\n\n    useEffect(() => {\n        fetch(`/users/${user.id}/reviews`)\n        .then((r) => {\n          if (r.ok) {\n            r.json()\n            .then((data) => {\n              if (data) {\n                setReviews(data)\n                setDisplayReviews(data)\n                }\n                })\n            }})}, [filters])\n\n    function spawnMovieCards(){\n        let onlyMovies = reviews.filter((givenReview) => {\n            return (givenReview.artwork.discipline_id===1)\n        })\n        if(onlyMovies.length===0){\n          return(\n                        <a href=\"/search/movies\">Add some movies!</a>\n          )\n        }\n        let counter = 1\n        let mostRecentFirst = onlyMovies.reverse()\n        let cards = mostRecentFirst.map((givenReview) => {\n          if(counter<=5){\n            counter=counter+1\n            return (<MovieShelfCard setSelectedMedia={setSelectedMedia} setMediaInfo={setMediaInfo} reviewData={givenReview} key={givenReview.artwork.identifier} xs={2} lg={2.4}/>)}\n        })\n        return cards\n    }\n\n    function spawnBookCards(){\n        let onlyBooks = reviews.filter((givenReview) => {\n            return (givenReview.artwork.discipline_id===2)\n        })\n        if(onlyBooks.length===0){\n          return(\n                        <a href=\"/search/books\">Add some books!</a>\n          )\n        }\n        let counter = 1\n        let mostRecentFirst = onlyBooks.reverse()\n        let cards = mostRecentFirst.map((givenReview) => {\n          if(counter<=5){\n            counter=counter+1\n            return (<BookShelfCard setSelectedMedia={setSelectedMedia} setMediaInfo={setMediaInfo} reviewData={givenReview} key={givenReview.artwork.identifier} xs={2} lg={2.4}/>)}\n        })\n        return cards\n    }\n\n    function spawnGameCards(){\n        let onlyGames = reviews.filter((givenReview) => {\n            return (givenReview.artwork.discipline_id===3)\n        })\n        if(onlyGames.length===0){\n          return(\n                        <a href=\"/search/games\">Add some games!</a>\n          )\n        }\n        let counter = 1\n        let mostRecentFirst = onlyGames.reverse()\n        let cards = mostRecentFirst.map((givenReview) => {\n          if(counter<=5){\n            counter=counter+1\n            return (<GameShelfCard setSelectedMedia={setSelectedMedia} setMediaInfo={setMediaInfo} reviewData={givenReview} key={givenReview.artwork.identifier} xs={2} lg={2.4}/>)}\n        })\n        return cards\n    }\n\n    function spawnTVCards(){\n        let onlyTV = reviews.filter((givenReview) => {\n            return (givenReview.artwork.discipline_id===4)\n        })\n        if(onlyTV.length===0){\n          return(\n                        <a href=\"/search/TV\">Add some TV!</a>\n          )\n        }\n        let counter = 1\n        let mostRecentFirst = onlyTV.reverse()\n        let cards = mostRecentFirst.map((givenReview) => {\n          if(counter<=5){\n            counter=counter+1\n            return (<TVShelfCard setSelectedMedia={setSelectedMedia} setMediaInfo={setMediaInfo} reviewData={givenReview} key={givenReview.artwork.identifier} xs={2} lg={2.4}/>)}\n        })\n        return cards\n    }\n\n    function spawnAlbumCards(){\n        let onlyAlbums = reviews.filter((givenReview) => {\n            return (givenReview.artwork.discipline_id===5)\n        })\n        if(onlyAlbums.length===0){\n          return(\n                        <a href=\"/search/music\">Add some music!</a>\n          )\n        }\n        let counter = 1\n        let mostRecentFirst = onlyAlbums.reverse()\n        let cards = mostRecentFirst.map((givenReview) => {\n          if(counter<=5){\n            counter=counter+1\n            return (<AlbumShelfCard setSelectedMedia={setSelectedMedia} setMediaInfo={setMediaInfo} reviewData={givenReview} key={givenReview.artwork.identifier} xs={2} lg={2.4}/>)}\n        })\n        return cards\n    }\n\n    \n            if (reviews && selectedMedia==false) {\n    return (\n      <ThemeProvider theme={theme}>\n        <Typography textAlign=\"center\" sx={{mt:2, mb: 2}}>\n              MY SHELF:\n            </Typography>\n        <Grid container spacing={2} style={{ justifyContent: \"center\", direction: \"column\", alignItems:\"center\"}}>\n          <Grid item component ={Box} xs={12}>\n          <Button variant=\"contained\" href=\"/myshelf/movies\" fullWidth  sx={{mb:2, border: 1, borderColor: \"#FFD700\"}} >Movies</Button>\n            <Stack direction={{xs:\"column\", sm:\"row\"}} alignItems=\"stretch\"  spacing={2} justifyContent=\"center\">\n              {spawnMovieCards()}\n            </Stack>\n          </Grid>\n          <Grid item component ={Box} xs={12}>\n          <Button variant=\"contained\" href=\"/myshelf/books\" fullWidth  sx={{mb:2, border: 1, borderColor: \"#FFD700\"}} >Books</Button>\n            <Stack direction={{xs:\"column\", sm:\"row\"}} spacing={2} justifyContent=\"center\">\n              {spawnBookCards()}\n            </Stack>\n          </Grid>\n          <Grid item component ={Box} xs={12}>\n          <Button variant=\"contained\" href=\"/myshelf/tv\" fullWidth  sx={{mb:2, border: 1, borderColor: \"#FFD700\"}} >Television</Button>\n            <Stack direction={{xs:\"column\", sm:\"row\"}} spacing={2} justifyContent=\"center\">\n              {spawnTVCards()}\n            </Stack>\n          </Grid>\n          <Grid item component ={Box} xs={12}>\n          <Button variant=\"contained\" href=\"/myshelf/music\" fullWidth  sx={{mb:2, border: 1, borderColor: \"#FFD700\"}} >Music</Button>\n            <Stack direction={{xs:\"column\", sm:\"row\"}} spacing={2} justifyContent=\"center\">\n              {spawnAlbumCards()}\n            </Stack>\n          </Grid>\n          <Grid item component ={Box} xs={12}>\n          <Button variant=\"contained\" href=\"/myshelf/games\" fullWidth  sx={{mb:1, border: 1, borderColor: \"#FFD700\"}} >Video Games</Button>\n            <Stack direction={{xs:\"column\", sm:\"row\"}} spacing={2} justifyContent=\"center\">\n              {spawnGameCards()}\n            </Stack>\n          </Grid>\n          </Grid>\n    \n      </ThemeProvider>\n    )\n}\nelse if (reviews && selectedMedia==\"Movie\") {\n  return (\n  <UpdateMovie movieData={mediaInfo} user={user} />\n  )\n}\nelse if (reviews && selectedMedia==\"TV\") {\n  return (\n    <UpdateTV tvData={mediaInfo} user={user} />\n  )\n}\nelse if (reviews && selectedMedia==\"Game\") {\n  return (\n  <UpdateGame gameData={mediaInfo} user={user} />\n  )\n}\nelse if (reviews && selectedMedia==\"Album\") {\n  return (\n    <UpdateAlbum albumData={mediaInfo} user={user} />\n  )\n}\nelse if (reviews && selectedMedia==\"Book\") {\n  return (\n    <UpdateBook bookData={mediaInfo} user={user} />\n  )\n}\n}\n\nexport default MyShelf","\nimport {ThemeProvider } from \"@mui/material/styles\";\nimport React, { useEffect, useState } from \"react\";\nimport MovieShelfCard from \"./MovieShelfCard\";\nimport { Stack } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { Button } from \"@mui/material\";\nimport Chip from '@mui/material/Chip';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport UpdateMovie from \"./UpdateMovie\";\n\nfunction MovieShelf({user,theme}){\n    const [reviews,setReviews] = useState([])\n    const [displayReviews,setDisplayReviews] = useState([])\n    const [filter,setFilter] = useState(\"Organize By\")\n    const [viewOrganizers,setViewOrganizers]=useState(false)\n    const [selectedMedia,setSelectedMedia] = useState(false)\n    const [mediaInfo,setMediaInfo] = useState(false)\n\n    function filterReviewDesc(e){\n      setFilter(\"Newest -> Oldest Reviews\")\n      setViewOrganizers(false)\n    }\n\n    function filterReviewAsc(e){\n      setFilter(\"Oldest -> Newest Reviews\")\n      setViewOrganizers(false)\n    }\n\n    function getReviewDate(reviewData){\n      let rawDate = reviewData.updated_at\n      let year = rawDate.slice(0,4)\n      let month = rawDate.slice(5,7)\n      let day = rawDate.slice(8,10)\n      let date = `${month}-${day}-${year}`\n      return date\n    }\n\n    function filterRatingDesc(e){\n      setFilter(\"Rating 5 -> 1\")\n      setViewOrganizers(false)\n    }\n\n    function filterRatingAsc(e){\n      setFilter(\"Rating 1 -> 5\")\n      setViewOrganizers(false)\n    }\n\n    function filterAlphabetDesc(e){\n      setFilter(\"A-Z\")\n      setViewOrganizers(false)\n    }\n\n    function filterAlphabetAsc(e){\n      setFilter(\"Z-A\")\n      setViewOrganizers(false)\n    }\n\n    \n\n    function sortByFilter(reviews){\n      if(filter==\"Organize By\"){\n        return reviews\n      }\n      else if (filter==\"A-Z\"){\n        console.log(\"it's A through Z filter\")\n        let byName = reviews.sort((a,b) => {\n          if(a.artwork.name < b.artwork.name) { return -1; }\n          if(a.artwork.name > b.artwork.name) { return 1; }\n          return 0;\n      })\n      return byName\n      }\n      else if (filter==\"Z-A\"){\n        console.log(\"it's Z through A filter\")\n        let byName = reviews.sort((a, b) => {\n          if(a.artwork.name < b.artwork.name) { return 1; }\n          if(a.artwork.name > b.artwork.name) { return -1; }\n          return 0;\n      })\n      return byName\n      }\n      else if (filter==\"Rating 1 -> 5\"){\n        console.log(\"it's by rating ascended\")\n        let byRating = reviews.sort((a, b) => {\n          if(a.rating < b.rating) { return -1; }\n          if(a.rating > b.rating) { return 1; }\n          return 0;\n      })\n      console.log(byRating)\n      return byRating\n      }\n      else if (filter==\"Rating 5 -> 1\"){\n        console.log(\"it's by rating ascended\")\n        let byRating = reviews.sort((a, b) => {\n          if(a.rating < b.rating) { return 1; }\n          if(a.rating > b.rating) { return -1; }\n          return 0;\n      })\n      return byRating\n      }\n      else if (filter==\"Newest -> Oldest Reviews\"){\n        console.log(\"it's by newest to oldest review\")\n        let byReviewDate = reviews.sort((a, b) => {\n          let reviewDateA = Date.parse(getReviewDate(a))\n          let reviewDateB = Date.parse(getReviewDate(b))\n          if(reviewDateA < reviewDateB) { return 1; }\n          if(reviewDateA > reviewDateB) { return -1; }\n          return 0;\n      })\n      return byReviewDate\n      }\n      else if (filter==\"Oldest -> Newest Reviews\"){\n        console.log(\"it's by oldest to newest review\")\n        let byReviewDate = reviews.sort((a, b) => {\n          let reviewDateA = Date.parse(getReviewDate(a))\n          let reviewDateB = Date.parse(getReviewDate(b))\n          if(reviewDateA < reviewDateB) { return -1; }\n          if(reviewDateA > reviewDateB) { return 1; }\n          return 0;\n      })\n      return byReviewDate\n      }\n    }\n\n    useEffect(() => {\n        fetch(`/users/${user.id}/reviews`)\n        .then((r) => {\n          if (r.ok) {\n            r.json()\n            .then((data) => {\n              if (data) {\n                setReviews(data)\n                setDisplayReviews(data)\n                }\n                })\n            }})}, [])\n\n    function spawnMovieCards(){\n        let onlyMovies = reviews.filter((givenReview) => {\n            return (givenReview.artwork.discipline_id===1)\n        })\n        if(onlyMovies.length===0){\n          return(\n                        <a href=\"/search/movies\">Add some movies!</a>\n          )\n        }\n        let filteredReviews = sortByFilter(onlyMovies)\n        let cards = filteredReviews.map((givenReview) => {\n            return (<MovieShelfCard setSelectedMedia={setSelectedMedia} setMediaInfo={setMediaInfo} reviewData={givenReview} key={givenReview.artwork.identifier} xs={2} lg={2.4}/>)}\n        )\n        return cards\n    }\nif(mediaInfo===false){\nreturn (\n    <ThemeProvider theme={theme}>\n      {viewOrganizers ? \n      <Stack alignItems=\"center\" justifyContent=\"center\" direction=\"row\" sx={{mt:2, mb: 2}} spacing={1}>\n      <Chip label=\"x\" variant=\"outlined\" onClick={(e) => setViewOrganizers(false)} /> \n      <Chip icon={<ArrowDownwardIcon/>}label=\"Rating\" variant=\"outlined\" onClick={filterRatingDesc} />\n      <Chip icon={<ArrowDownwardIcon/>}label=\"Alphabetical\" variant=\"outlined\" onClick={filterAlphabetDesc} />\n      <Chip icon={<ArrowDownwardIcon/>}label=\"Review Date\" variant=\"outlined\" onClick={filterReviewDesc} />\n      <Chip icon={<ArrowUpwardIcon/>}label=\"Review Date\" variant=\"outlined\" onClick={filterReviewAsc} />\n      <Chip icon={<ArrowUpwardIcon/>}label=\"Alphabetical\" variant=\"outlined\" onClick={filterAlphabetAsc} />\n      <Chip icon={<ArrowUpwardIcon/>}label=\"Rating\" variant=\"outlined\" onClick={filterRatingAsc} />\n      </Stack>\n      : \n      <Stack alignItems=\"center\" justifyContent=\"center\" direction=\"row\" sx={{mt:2, mb: 2}} spacing={1}>\n      <Chip label={filter} variant=\"outlined\" onClick={(e) => setViewOrganizers(true)} />\n      </Stack>}\n    <Stack direction={{xs:\"column\", sm:\"row\"}} alignItems=\"stretch\"  spacing={2} justifyContent=\"center\">\n    {spawnMovieCards()}\n  </Stack>\n  <Grid container width=\"100%\" justifyContent=\"center\" sx={{mt:2}}>\n  <Grid item component={Button} variant=\"contained\" href=\"/myshelf\">Return</Grid>\n  </Grid>\n  </ThemeProvider>\n)\n      }\n  if(mediaInfo){\n    return (\n      <UpdateMovie movieData={mediaInfo} user={user} />\n    )\n  }\n}\n\nexport default MovieShelf","import {ThemeProvider } from \"@mui/material/styles\";\nimport React, { useEffect, useState } from \"react\";\nimport { Stack } from \"@mui/material\";\nimport TVShelfCard from \"./TVShelfCard\";\nimport { Button } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport Chip from '@mui/material/Chip';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport UpdateTV from \"./UpdateTV\";\n\nfunction TVShelf({user,theme}){\n    const [reviews,setReviews] = useState([])\n    const [displayReviews,setDisplayReviews] = useState([])\n    const [filter,setFilter] = useState(\"Organize By\")\n    const [viewOrganizers,setViewOrganizers]=useState(false)\n    const [selectedMedia,setSelectedMedia] = useState(false)\n    const [mediaInfo,setMediaInfo] = useState(false)\n\n    function filterReviewDesc(e){\n      setFilter(\"Newest -> Oldest Reviews\")\n      setViewOrganizers(false)\n    }\n\n    function filterReviewAsc(e){\n      setFilter(\"Oldest -> Newest Reviews\")\n      setViewOrganizers(false)\n    }\n\n    function getReviewDate(reviewData){\n      let rawDate = reviewData.updated_at\n      let year = rawDate.slice(0,4)\n      let month = rawDate.slice(5,7)\n      let day = rawDate.slice(8,10)\n      let date = `${month}-${day}-${year}`\n      return date\n    }\n\n    function filterRatingDesc(e){\n      setFilter(\"Rating 5 -> 1\")\n      setViewOrganizers(false)\n    }\n\n    function filterRatingAsc(e){\n      setFilter(\"Rating 1 -> 5\")\n      setViewOrganizers(false)\n    }\n\n    function filterAlphabetDesc(e){\n      setFilter(\"A-Z\")\n      setViewOrganizers(false)\n    }\n\n    function filterAlphabetAsc(e){\n      setFilter(\"Z-A\")\n      setViewOrganizers(false)\n    }\n\n    function sortByFilter(reviews){\n      if(filter==\"Organize By\"){\n        return reviews\n      }\n      else if (filter==\"A-Z\"){\n        console.log(\"it's A through Z filter\")\n        let byName = reviews.sort((a,b) => {\n          if(a.artwork.name < b.artwork.name) { return -1; }\n          if(a.artwork.name > b.artwork.name) { return 1; }\n          return 0;\n      })\n      return byName\n      }\n      else if (filter==\"Z-A\"){\n        console.log(\"it's Z through A filter\")\n        let byName = reviews.sort((a, b) => {\n          if(a.artwork.name < b.artwork.name) { return 1; }\n          if(a.artwork.name > b.artwork.name) { return -1; }\n          return 0;\n      })\n      return byName\n      }\n      else if (filter==\"Rating 1 -> 5\"){\n        console.log(\"it's by rating ascended\")\n        let byRating = reviews.sort((a, b) => {\n          if(a.rating < b.rating) { return -1; }\n          if(a.rating > b.rating) { return 1; }\n          return 0;\n      })\n      console.log(byRating)\n      return byRating\n      }\n      else if (filter==\"Rating 5 -> 1\"){\n        console.log(\"it's by rating ascended\")\n        let byRating = reviews.sort((a, b) => {\n          if(a.rating < b.rating) { return 1; }\n          if(a.rating > b.rating) { return -1; }\n          return 0;\n      })\n      return byRating\n      }\n      else if (filter==\"Newest -> Oldest Reviews\"){\n        console.log(\"it's by newest to oldest review\")\n        let byReviewDate = reviews.sort((a, b) => {\n          let reviewDateA = Date.parse(getReviewDate(a))\n          let reviewDateB = Date.parse(getReviewDate(b))\n          if(reviewDateA < reviewDateB) { return 1; }\n          if(reviewDateA > reviewDateB) { return -1; }\n          return 0;\n      })\n      return byReviewDate\n      }\n      else if (filter==\"Oldest -> Newest Reviews\"){\n        console.log(\"it's by oldest to newest review\")\n        let byReviewDate = reviews.sort((a, b) => {\n          let reviewDateA = Date.parse(getReviewDate(a))\n          let reviewDateB = Date.parse(getReviewDate(b))\n          if(reviewDateA < reviewDateB) { return -1; }\n          if(reviewDateA > reviewDateB) { return 1; }\n          return 0;\n      })\n      return byReviewDate\n      }\n    }\n\n    useEffect(() => {\n        fetch(`/users/${user.id}/reviews`)\n        .then((r) => {\n          if (r.ok) {\n            r.json()\n            .then((data) => {\n              if (data) {\n                setReviews(data)\n                setDisplayReviews(data)\n                }\n                })\n            }})}, [filter])\n\n            function spawnTVCards(){\n                let onlyTV = reviews.filter((givenReview) => {\n                    return (givenReview.artwork.discipline_id===4)\n                })\n                if(onlyTV.length===0){\n                  return(\n                                <a href=\"/search/TV\">Add some TV!</a>\n                  )\n                }\n                let filtered = sortByFilter(onlyTV)\n                let cards = filtered.map((givenReview) => {\n                    return (<TVShelfCard setSelectedMedia={setSelectedMedia} setMediaInfo={setMediaInfo} reviewData={givenReview} key={givenReview.artwork.identifier} xs={2} lg={2.4}/>)}\n                )\n                return cards\n            }\nif (mediaInfo===false){\nreturn (\n    <ThemeProvider theme={theme}>\n      {viewOrganizers ? \n      <Stack alignItems=\"center\" justifyContent=\"center\" direction=\"row\" sx={{mt:2, mb: 2}} spacing={1}>\n      <Chip label=\"x\" variant=\"outlined\" onClick={(e) => setViewOrganizers(false)} /> \n      <Chip icon={<ArrowDownwardIcon/>}label=\"Rating\" variant=\"outlined\" onClick={filterRatingDesc} />\n      <Chip icon={<ArrowDownwardIcon/>}label=\"Alphabetical\" variant=\"outlined\" onClick={filterAlphabetDesc} />\n      <Chip icon={<ArrowDownwardIcon/>}label=\"Review Date\" variant=\"outlined\" onClick={filterReviewDesc} />\n      <Chip icon={<ArrowUpwardIcon/>}label=\"Review Date\" variant=\"outlined\" onClick={filterReviewAsc} />\n      <Chip icon={<ArrowUpwardIcon/>}label=\"Alphabetical\" variant=\"outlined\" onClick={filterAlphabetAsc} />\n      <Chip icon={<ArrowUpwardIcon/>}label=\"Rating\" variant=\"outlined\" onClick={filterRatingAsc} />\n      </Stack>\n      : \n      <Stack alignItems=\"center\" justifyContent=\"center\" direction=\"row\" sx={{mt:2, mb: 2}} spacing={1}>\n      <Chip label={filter} variant=\"outlined\" onClick={(e) => setViewOrganizers(true)} />\n      </Stack>}\n    <Stack direction={{xs:\"column\", sm:\"row\"}} alignItems=\"stretch\"  spacing={2} justifyContent=\"center\">\n    {spawnTVCards()}\n  </Stack>\n  <Grid container width=\"100%\" justifyContent=\"center\" sx={{mt:2}}>\n  <Grid item component={Button} variant=\"contained\" href=\"/myshelf\">Return</Grid>\n  </Grid>\n  </ThemeProvider>\n)\n      }\n      else if(mediaInfo){\n        return (\n          <UpdateTV tvData={mediaInfo} user={user} />\n        )\n      }\n}\n\nexport default TVShelf","import {ThemeProvider } from \"@mui/material/styles\";\nimport React, { useEffect, useState } from \"react\";\nimport { Stack } from \"@mui/material\";\nimport AlbumShelfCard from \"./AlbumShelfCard\";\nimport { Grid } from \"@mui/material\";\nimport { Button } from \"@mui/material\";\nimport Chip from '@mui/material/Chip';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport UpdateAlbum from \"./UpdateAlbum\";\n\nfunction AlbumShelf({user,theme}){\n    const [reviews,setReviews] = useState([])\n    const [displayReviews,setDisplayReviews] = useState([])\n    const [filter,setFilter] = useState(\"Organize By\")\n    const [viewOrganizers,setViewOrganizers]=useState(false)\n    const [selectedMedia,setSelectedMedia] = useState(false)\n    const [mediaInfo,setMediaInfo] = useState(false)\n\n    function filterReviewDesc(e){\n      setFilter(\"Newest -> Oldest Reviews\")\n      setViewOrganizers(false)\n    }\n\n    function filterReviewAsc(e){\n      setFilter(\"Oldest -> Newest Reviews\")\n      setViewOrganizers(false)\n    }\n\n    function getReviewDate(reviewData){\n      let rawDate = reviewData.updated_at\n      let year = rawDate.slice(0,4)\n      let month = rawDate.slice(5,7)\n      let day = rawDate.slice(8,10)\n      let date = `${month}-${day}-${year}`\n      return date\n    }\n\n    function filterRatingDesc(e){\n      setFilter(\"Rating 5 -> 1\")\n      setViewOrganizers(false)\n    }\n\n    function filterRatingAsc(e){\n      setFilter(\"Rating 1 -> 5\")\n      setViewOrganizers(false)\n    }\n\n    function filterAlphabetDesc(e){\n      setFilter(\"A-Z\")\n      setViewOrganizers(false)\n    }\n\n    function filterAlphabetAsc(e){\n      setFilter(\"Z-A\")\n      setViewOrganizers(false)\n    }\n\n    function sortByFilter(reviews){\n      if(filter==\"Organize By\"){\n        return reviews\n      }\n      else if (filter==\"A-Z\"){\n        console.log(\"it's A through Z filter\")\n        let byName = reviews.sort((a,b) => {\n          if(a.artwork.name < b.artwork.name) { return -1; }\n          if(a.artwork.name > b.artwork.name) { return 1; }\n          return 0;\n      })\n      return byName\n      }\n      else if (filter==\"Z-A\"){\n        console.log(\"it's Z through A filter\")\n        let byName = reviews.sort((a, b) => {\n          if(a.artwork.name < b.artwork.name) { return 1; }\n          if(a.artwork.name > b.artwork.name) { return -1; }\n          return 0;\n      })\n      return byName\n      }\n      else if (filter==\"Rating 1 -> 5\"){\n        console.log(\"it's by rating ascended\")\n        let byRating = reviews.sort((a, b) => {\n          if(a.rating < b.rating) { return -1; }\n          if(a.rating > b.rating) { return 1; }\n          return 0;\n      })\n      console.log(byRating)\n      return byRating\n      }\n      else if (filter==\"Rating 5 -> 1\"){\n        console.log(\"it's by rating ascended\")\n        let byRating = reviews.sort((a, b) => {\n          if(a.rating < b.rating) { return 1; }\n          if(a.rating > b.rating) { return -1; }\n          return 0;\n      })\n      return byRating\n      }\n      else if (filter==\"Newest -> Oldest Reviews\"){\n        console.log(\"it's by newest to oldest review\")\n        let byReviewDate = reviews.sort((a, b) => {\n          let reviewDateA = Date.parse(getReviewDate(a))\n          let reviewDateB = Date.parse(getReviewDate(b))\n          if(reviewDateA < reviewDateB) { return 1; }\n          if(reviewDateA > reviewDateB) { return -1; }\n          return 0;\n      })\n      return byReviewDate\n      }\n      else if (filter==\"Oldest -> Newest Reviews\"){\n        console.log(\"it's by oldest to newest review\")\n        let byReviewDate = reviews.sort((a, b) => {\n          let reviewDateA = Date.parse(getReviewDate(a))\n          let reviewDateB = Date.parse(getReviewDate(b))\n          if(reviewDateA < reviewDateB) { return -1; }\n          if(reviewDateA > reviewDateB) { return 1; }\n          return 0;\n      })\n      return byReviewDate\n      }\n    }\n\n    useEffect(() => {\n        fetch(`/users/${user.id}/reviews`)\n        .then((r) => {\n          if (r.ok) {\n            r.json()\n            .then((data) => {\n              if (data) {\n                setReviews(data)\n                setDisplayReviews(data)\n                }\n                })\n            }})}, [])\n\n            function spawnAlbumCards(){\n                let onlyAlbums = reviews.filter((givenReview) => {\n                    return (givenReview.artwork.discipline_id===5)\n                })\n                if(onlyAlbums.length===0){\n                  return(\n                                <a href=\"/search/music\">Add some music!</a>\n                  )\n                }\n                let filtered = sortByFilter(onlyAlbums)\n                let cards = filtered.map((givenReview) => {\n                    return (<AlbumShelfCard setSelectedMedia={setSelectedMedia} setMediaInfo={setMediaInfo} reviewData={givenReview} key={givenReview.artwork.identifier} xs={2} lg={2.4}/>)}\n                )\n                return cards\n            }\n\nif(mediaInfo===false){\nreturn (\n    <ThemeProvider theme={theme}>\n    {viewOrganizers ? \n      <Stack alignItems=\"center\" justifyContent=\"center\" direction=\"row\" sx={{mt:2, mb: 2}} spacing={1}>\n      <Chip label=\"x\" variant=\"outlined\" onClick={(e) => setViewOrganizers(false)} /> \n      <Chip icon={<ArrowDownwardIcon/>}label=\"Rating\" variant=\"outlined\" onClick={filterRatingDesc} />\n      <Chip icon={<ArrowDownwardIcon/>}label=\"Alphabetical\" variant=\"outlined\" onClick={filterAlphabetDesc} />\n      <Chip icon={<ArrowDownwardIcon/>}label=\"Review Date\" variant=\"outlined\" onClick={filterReviewDesc} />\n      <Chip icon={<ArrowUpwardIcon/>}label=\"Review Date\" variant=\"outlined\" onClick={filterReviewAsc} />\n      <Chip icon={<ArrowUpwardIcon/>}label=\"Alphabetical\" variant=\"outlined\" onClick={filterAlphabetAsc} />\n      <Chip icon={<ArrowUpwardIcon/>}label=\"Rating\" variant=\"outlined\" onClick={filterRatingAsc} />\n      </Stack>\n      : \n      <Stack alignItems=\"center\" justifyContent=\"center\" direction=\"row\" sx={{mt:2, mb: 2}} spacing={1}>\n      <Chip label={filter} variant=\"outlined\" onClick={(e) => setViewOrganizers(true)} />\n      </Stack>}\n    <Stack direction={{xs:\"column\", sm:\"row\"}} alignItems=\"stretch\"  spacing={2} justifyContent=\"center\">\n    {spawnAlbumCards()}\n  </Stack>\n  <Grid container width=\"100%\" justifyContent=\"center\" sx={{mt:2}}>\n  <Grid item component={Button} variant=\"contained\" href=\"/myshelf\">Return</Grid>\n  </Grid>\n  </ThemeProvider>\n)\n    }\nelse if(mediaInfo){\n  return (\n    <UpdateAlbum albumData={mediaInfo} user={user} />\n  )\n}\n}\n\nexport default AlbumShelf","\nimport {ThemeProvider } from \"@mui/material/styles\";\nimport React, { useEffect, useState } from \"react\";\nimport { Stack } from \"@mui/material\";\nimport BookShelfCard from \"./BookShelfCard\";\nimport { Grid } from \"@mui/material\";\nimport { Button } from \"@mui/material\";\nimport Chip from '@mui/material/Chip';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport UpdateBook from \"./UpdateBook\";\nimport UpdateAlbum from \"./UpdateAlbum\";\n\nfunction BookShelf({user,theme}){\n    const [reviews,setReviews] = useState([])\n    const [displayReviews,setDisplayReviews] = useState([])\n    const [filter,setFilter] = useState(\"Organize By\")\n    const [viewOrganizers,setViewOrganizers]=useState(false)\n    const [selectedMedia,setSelectedMedia] = useState(false)\n    const [mediaInfo,setMediaInfo] = useState(false)\n\n    function filterReviewDesc(e){\n      setFilter(\"Newest -> Oldest Reviews\")\n      setViewOrganizers(false)\n    }\n\n    function filterReviewAsc(e){\n      setFilter(\"Oldest -> Newest Reviews\")\n      setViewOrganizers(false)\n    }\n\n    function getReviewDate(reviewData){\n      let rawDate = reviewData.updated_at\n      let year = rawDate.slice(0,4)\n      let month = rawDate.slice(5,7)\n      let day = rawDate.slice(8,10)\n      let date = `${month}-${day}-${year}`\n      return date\n    }\n\n    function filterRatingDesc(e){\n      setFilter(\"Rating 5 -> 1\")\n      setViewOrganizers(false)\n    }\n\n    function filterRatingAsc(e){\n      setFilter(\"Rating 1 -> 5\")\n      setViewOrganizers(false)\n    }\n\n    function filterAlphabetDesc(e){\n      setFilter(\"A-Z\")\n      setViewOrganizers(false)\n    }\n\n    function filterAlphabetAsc(e){\n      setFilter(\"Z-A\")\n      setViewOrganizers(false)\n    }\n\n    function sortByFilter(reviews){\n      if(filter==\"Organize By\"){\n        return reviews\n      }\n      else if (filter==\"A-Z\"){\n        console.log(\"it's A through Z filter\")\n        let byName = reviews.sort((a,b) => {\n          if(a.artwork.name < b.artwork.name) { return -1; }\n          if(a.artwork.name > b.artwork.name) { return 1; }\n          return 0;\n      })\n      return byName\n      }\n      else if (filter==\"Z-A\"){\n        console.log(\"it's Z through A filter\")\n        let byName = reviews.sort((a, b) => {\n          if(a.artwork.name < b.artwork.name) { return 1; }\n          if(a.artwork.name > b.artwork.name) { return -1; }\n          return 0;\n      })\n      return byName\n      }\n      else if (filter==\"Rating 1 -> 5\"){\n        console.log(\"it's by rating ascended\")\n        let byRating = reviews.sort((a, b) => {\n          if(a.rating < b.rating) { return -1; }\n          if(a.rating > b.rating) { return 1; }\n          return 0;\n      })\n      console.log(byRating)\n      return byRating\n      }\n      else if (filter==\"Rating 5 -> 1\"){\n        console.log(\"it's by rating ascended\")\n        let byRating = reviews.sort((a, b) => {\n          if(a.rating < b.rating) { return 1; }\n          if(a.rating > b.rating) { return -1; }\n          return 0;\n      })\n      return byRating\n      }\n      else if (filter==\"Newest -> Oldest Reviews\"){\n        console.log(\"it's by newest to oldest review\")\n        let byReviewDate = reviews.sort((a, b) => {\n          let reviewDateA = Date.parse(getReviewDate(a))\n          let reviewDateB = Date.parse(getReviewDate(b))\n          if(reviewDateA < reviewDateB) { return 1; }\n          if(reviewDateA > reviewDateB) { return -1; }\n          return 0;\n      })\n      return byReviewDate\n      }\n      else if (filter==\"Oldest -> Newest Reviews\"){\n        console.log(\"it's by oldest to newest review\")\n        let byReviewDate = reviews.sort((a, b) => {\n          let reviewDateA = Date.parse(getReviewDate(a))\n          let reviewDateB = Date.parse(getReviewDate(b))\n          if(reviewDateA < reviewDateB) { return -1; }\n          if(reviewDateA > reviewDateB) { return 1; }\n          return 0;\n      })\n      return byReviewDate\n      }\n    }\n\n    useEffect(() => {\n        fetch(`/users/${user.id}/reviews`)\n        .then((r) => {\n          if (r.ok) {\n            r.json()\n            .then((data) => {\n              if (data) {\n                setReviews(data)\n                setDisplayReviews(data)\n                }\n                })\n            }})}, [filter])\n\n            function spawnBookCards(){\n                let onlyBooks = reviews.filter((givenReview) => {\n                    return (givenReview.artwork.discipline_id===2)\n                })\n                if(onlyBooks.length===0){\n                  return(\n                                <a href=\"/search/books\">Add some books!</a>\n                  )\n                }\n                let filtered = sortByFilter(onlyBooks)\n                let cards = filtered.map((givenReview) => {\n                    return (<BookShelfCard setSelectedMedia={setSelectedMedia} setMediaInfo={setMediaInfo} reviewData={givenReview} key={givenReview.artwork.identifier} xs={2} lg={2.4}/>)}\n                )\n                return cards\n            }\n\nif(mediaInfo===false){\nreturn (\n    <ThemeProvider theme={theme}>\n      {viewOrganizers ? \n      <Stack alignItems=\"center\" justifyContent=\"center\" direction=\"row\" sx={{mt:2, mb: 2}} spacing={1}>\n      <Chip label=\"x\" variant=\"outlined\" onClick={(e) => setViewOrganizers(false)} /> \n      <Chip icon={<ArrowDownwardIcon/>}label=\"Rating\" variant=\"outlined\" onClick={filterRatingDesc} />\n      <Chip icon={<ArrowDownwardIcon/>}label=\"Alphabetical\" variant=\"outlined\" onClick={filterAlphabetDesc} />\n      <Chip icon={<ArrowDownwardIcon/>}label=\"Review Date\" variant=\"outlined\" onClick={filterReviewDesc} />\n      <Chip icon={<ArrowUpwardIcon/>}label=\"Review Date\" variant=\"outlined\" onClick={filterReviewAsc} />\n      <Chip icon={<ArrowUpwardIcon/>}label=\"Alphabetical\" variant=\"outlined\" onClick={filterAlphabetAsc} />\n      <Chip icon={<ArrowUpwardIcon/>}label=\"Rating\" variant=\"outlined\" onClick={filterRatingAsc} />\n      </Stack>\n      : \n      <Stack alignItems=\"center\" justifyContent=\"center\" direction=\"row\" sx={{mt:2, mb: 2}} spacing={1}>\n      <Chip label={filter} variant=\"outlined\" onClick={(e) => setViewOrganizers(true)} />\n      </Stack>}\n    <Stack direction={{xs:\"column\", sm:\"row\"}} alignItems=\"stretch\"  spacing={2} justifyContent=\"center\">\n    {spawnBookCards()}\n  </Stack>\n  <Grid container width=\"100%\" justifyContent=\"center\" sx={{mt:2}}>\n  <Grid item component={Button} variant=\"contained\" href=\"/myshelf\">Return</Grid>\n  </Grid>\n  </ThemeProvider>\n)\n}\nelse if(mediaInfo){\n  return (\n  <UpdateBook bookData={mediaInfo} user={user} />\n  )\n}\n}\n\nexport default BookShelf","import {ThemeProvider } from \"@mui/material/styles\";\nimport React, { useEffect, useState } from \"react\";\nimport { Stack } from \"@mui/material\";\nimport GameShelfCard from \"./GameShelfCard\";\nimport { Grid } from \"@mui/material\";\nimport { Button } from \"@mui/material\";\nimport Chip from '@mui/material/Chip';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport UpdateGame from \"./UpdateGame\";\n\nfunction GameShelf({user,theme}){\n    const [reviews,setReviews] = useState([])\n    const [displayReviews,setDisplayReviews] = useState([])\n    const [filter,setFilter] = useState(\"Organize By\")\n    const [viewOrganizers,setViewOrganizers]=useState(false)\n    const [selectedMedia,setSelectedMedia] = useState(false)\n    const [mediaInfo,setMediaInfo] = useState(false)\n\n    function filterReviewDesc(e){\n      setFilter(\"Newest -> Oldest Reviews\")\n      setViewOrganizers(false)\n    }\n\n    function filterReviewAsc(e){\n      setFilter(\"Oldest -> Newest Reviews\")\n      setViewOrganizers(false)\n    }\n\n    function getReviewDate(reviewData){\n      let rawDate = reviewData.updated_at\n      let year = rawDate.slice(0,4)\n      let month = rawDate.slice(5,7)\n      let day = rawDate.slice(8,10)\n      let date = `${month}-${day}-${year}`\n      return date\n    }\n\n    function filterRatingDesc(e){\n      setFilter(\"Rating 5 -> 1\")\n      setViewOrganizers(false)\n    }\n\n    function filterRatingAsc(e){\n      setFilter(\"Rating 1 -> 5\")\n      setViewOrganizers(false)\n    }\n\n    function filterAlphabetDesc(e){\n      setFilter(\"A-Z\")\n      setViewOrganizers(false)\n    }\n\n    function filterAlphabetAsc(e){\n      setFilter(\"Z-A\")\n      setViewOrganizers(false)\n    }\n\n    function sortByFilter(reviews){\n      if(filter==\"Organize By\"){\n        return reviews\n      }\n      else if (filter==\"A-Z\"){\n        console.log(\"it's A through Z filter\")\n        let byName = reviews.sort((a,b) => {\n          if(a.artwork.name < b.artwork.name) { return -1; }\n          if(a.artwork.name > b.artwork.name) { return 1; }\n          return 0;\n      })\n      return byName\n      }\n      else if (filter==\"Z-A\"){\n        console.log(\"it's Z through A filter\")\n        let byName = reviews.sort((a, b) => {\n          if(a.artwork.name < b.artwork.name) { return 1; }\n          if(a.artwork.name > b.artwork.name) { return -1; }\n          return 0;\n      })\n      return byName\n      }\n      else if (filter==\"Rating 1 -> 5\"){\n        console.log(\"it's by rating ascended\")\n        let byRating = reviews.sort((a, b) => {\n          if(a.rating < b.rating) { return -1; }\n          if(a.rating > b.rating) { return 1; }\n          return 0;\n      })\n      console.log(byRating)\n      return byRating\n      }\n      else if (filter==\"Rating 5 -> 1\"){\n        console.log(\"it's by rating ascended\")\n        let byRating = reviews.sort((a, b) => {\n          if(a.rating < b.rating) { return 1; }\n          if(a.rating > b.rating) { return -1; }\n          return 0;\n      })\n      return byRating\n      }\n      else if (filter==\"Newest -> Oldest Reviews\"){\n        console.log(\"it's by newest to oldest review\")\n        let byReviewDate = reviews.sort((a, b) => {\n          let reviewDateA = Date.parse(getReviewDate(a))\n          let reviewDateB = Date.parse(getReviewDate(b))\n          if(reviewDateA < reviewDateB) { return 1; }\n          if(reviewDateA > reviewDateB) { return -1; }\n          return 0;\n      })\n      return byReviewDate\n      }\n      else if (filter==\"Oldest -> Newest Reviews\"){\n        console.log(\"it's by oldest to newest review\")\n        let byReviewDate = reviews.sort((a, b) => {\n          let reviewDateA = Date.parse(getReviewDate(a))\n          let reviewDateB = Date.parse(getReviewDate(b))\n          if(reviewDateA < reviewDateB) { return -1; }\n          if(reviewDateA > reviewDateB) { return 1; }\n          return 0;\n      })\n      return byReviewDate\n      }\n    }\n\n    useEffect(() => {\n        fetch(`/users/${user.id}/reviews`)\n        .then((r) => {\n          if (r.ok) {\n            r.json()\n            .then((data) => {\n              if (data) {\n                setReviews(data)\n                setDisplayReviews(data)\n                }\n                })\n            }})}, [filter])\n\n            function spawnGameCards(){\n                let onlyGames = reviews.filter((givenReview) => {\n                    return (givenReview.artwork.discipline_id===3)\n                })\n                if(onlyGames.length===0){\n                  return(\n                                <a href=\"/search/games\">Add some games!</a>\n                  )\n                }\n                let filtered = sortByFilter(onlyGames)\n                let cards = filtered.map((givenReview) => {\n                    return (<GameShelfCard setSelectedMedia={setSelectedMedia} setMediaInfo={setMediaInfo} reviewData={givenReview} key={givenReview.artwork.identifier} xs={2} lg={2.4}/>)}\n                )\n                return cards\n            }\nif(mediaInfo===false){\n\n\nreturn (\n    <ThemeProvider theme={theme}>\n      {viewOrganizers ? \n      <Stack alignItems=\"center\" justifyContent=\"center\" direction=\"row\" sx={{mt:2, mb: 2}} spacing={1}>\n      <Chip label=\"x\" variant=\"outlined\" onClick={(e) => setViewOrganizers(false)} /> \n      <Chip icon={<ArrowDownwardIcon/>}label=\"Rating\" variant=\"outlined\" onClick={filterRatingDesc} />\n      <Chip icon={<ArrowDownwardIcon/>}label=\"Alphabetical\" variant=\"outlined\" onClick={filterAlphabetDesc} />\n      <Chip icon={<ArrowDownwardIcon/>}label=\"Review Date\" variant=\"outlined\" onClick={filterReviewDesc} />\n      <Chip icon={<ArrowUpwardIcon/>}label=\"Review Date\" variant=\"outlined\" onClick={filterReviewAsc} />\n      <Chip icon={<ArrowUpwardIcon/>}label=\"Alphabetical\" variant=\"outlined\" onClick={filterAlphabetAsc} />\n      <Chip icon={<ArrowUpwardIcon/>}label=\"Rating\" variant=\"outlined\" onClick={filterRatingAsc} />\n      </Stack>\n      : \n      <Stack alignItems=\"center\" justifyContent=\"center\" direction=\"row\" sx={{mt:2, mb: 2}} spacing={1}>\n      <Chip label={filter} variant=\"outlined\" onClick={(e) => setViewOrganizers(true)} />\n      </Stack>}\n    <Stack direction={{xs:\"column\", sm:\"row\"}} alignItems=\"stretch\"  spacing={2} justifyContent=\"center\">\n    {spawnGameCards()}\n  </Stack>\n  <Grid container width=\"100%\" justifyContent=\"center\" sx={{mt:2}}>\n  <Grid item component={Button} variant=\"contained\" href=\"/myshelf\">Return</Grid>\n  </Grid>\n  </ThemeProvider>\n)\n      }\n      else if(mediaInfo){\n        return (\n          <UpdateGame gameData={mediaInfo} user={user} />\n        )\n      }\n}\n\nexport default GameShelf","import React, {useState} from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport {ThemeProvider } from \"@mui/material/styles\";\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport RssFeedIcon from '@mui/icons-material/RssFeed';\nimport LinkedInIcon from '@mui/icons-material/LinkedIn';\nimport TwitterIcon from '@mui/icons-material/Twitter';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport EmailIcon from '@mui/icons-material/Email';\nimport { Stack } from \"@mui/material\";\nimport { IconButton } from \"@mui/material\";\n\nfunction About({theme}) {\n    const[toggleWhy,setToggleWhy]=useState(false)\n    const[toggleTech,setToggleTech]=useState(false)\n    const[toggleAboutMe,setToggleAboutMe]=useState(false)\n    const[toggleVersion,setToggleVersion]=useState(false)\n\n\nfunction handleWhy(){\n    setToggleAboutMe(false)\n    setToggleTech(false)\n    setToggleVersion(false)\n    setToggleWhy(!toggleWhy)\n}\n\nfunction handleAboutMe(){\n    setToggleWhy(false)\n    setToggleTech(false)\n    setToggleVersion(false)\n    setToggleAboutMe(!toggleAboutMe)\n}\n\nfunction handleTech(){\n    setToggleWhy(false)\n    setToggleAboutMe(false)\n    setToggleVersion(false)\n    setToggleTech(!toggleTech)\n}\n\nfunction handleVersion(){\n    setToggleWhy(false)\n    setToggleAboutMe(false)\n    setToggleTech(false)\n    setToggleVersion(!toggleVersion)\n}\n\nif(toggleWhy===false && toggleTech===false && toggleAboutMe===false && toggleVersion===false){\n    return (\n<ThemeProvider theme={theme}>\n        <Box\n          sx={{\n            marginTop: 2,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent:\"flex-start\",\n          }}\n        >\n        <Grid item component={Typography} variant=\"h2\" color=\"black\" align=\"left\">\n            About CriticShelf\n          </Grid>\n        <Grid item component={Box}\n        sx={{\n            marginTop: 3,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"left\",\n            justifyContent:\"flex-start\",\n          }}>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:0}}>\n                CriticShelf is a website for those who love to think critically.\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n                If you have opinions on the things you watch, read or listen to, CriticShelf is for you.\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n                It's simple: \n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n            After you finish that movie, TV show, book, new album, or video game...\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n            Log in to your CriticShelf account, and leave it a rating and review.\n            </Grid>\n        </Grid>\n        <Grid item component={Typography} variant=\"h4\" color=\"black\" align=\"left\">\n            Why? {toggleWhy ? \n            <ArrowDropDownIcon onClick={handleWhy}></ArrowDropDownIcon> :\n            <ArrowRightIcon onClick={handleWhy}></ArrowRightIcon>}\n          </Grid>\n          <Grid item component={Typography} variant=\"h4\" color=\"black\" align=\"left\">\n            Technology {toggleTech ? \n            <ArrowDropDownIcon onClick={handleTech}></ArrowDropDownIcon> :\n            <ArrowRightIcon onClick={handleTech}></ArrowRightIcon>}\n          </Grid>\n          <Grid item noWrap component={Typography} variant=\"h4\" color=\"black\" align=\"left\">\n            About Me {toggleAboutMe ? \n            <ArrowDropDownIcon onClick={handleAboutMe}></ArrowDropDownIcon> :\n            <ArrowRightIcon onClick={handleAboutMe}></ArrowRightIcon>}\n          </Grid>\n          <Grid item noWrap component={Typography} variant=\"h4\" color=\"black\" align=\"left\">\n            Version 0.5 {toggleVersion ? \n            <ArrowDropDownIcon onClick={handleVersion}></ArrowDropDownIcon> :\n            <ArrowRightIcon onClick={handleVersion}></ArrowRightIcon>}\n          </Grid>\n      </Box> \n      </ThemeProvider>\n    )\n}\nif(toggleWhy===true){\n    return (\n<ThemeProvider theme={theme}>\n        <Box\n          sx={{\n            marginTop: 2,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent:\"flex-start\",\n          }}\n        >\n        <Grid item component={Typography} variant=\"h2\" color=\"black\" align=\"left\">\n            About CriticShelf\n          </Grid>\n        <Grid item component={Box}\n        sx={{\n            marginTop: 3,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"left\",\n            justifyContent:\"flex-start\",\n          }}>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:0}}>\n                CriticShelf is a website for those who love to think critically.\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n                If you have opinions on the things you watch, read or listen to, CriticShelf is for you.\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n                It's simple: \n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n            After you finish that movie, TV show, book, new album, or video game...\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n            Log in to your CriticShelf account, and leave it a rating and review.\n            </Grid>\n        </Grid>\n        <Grid item component={Typography} variant=\"h4\" color=\"black\" align=\"left\">\n            Why?\n            <ArrowDropDownIcon onClick={handleWhy}></ArrowDropDownIcon> \n          </Grid>\n          <Grid item component={Box}\n        sx={{\n            marginTop: 2,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"left\",\n            justifyContent:\"flex-start\",\n          }}>\n          <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n                There are plenty of similar websites. Some that are quite good.\n            </Grid>  \n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n                But to my knowledge, most of these sites are dedicated to only one form of art:\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n                Letterboxd is fantastic, but only does movies. Goodreads is fine, but only does books.\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n                When the new Netflix series, Kanye album or Marvel movie comes out, we find out:\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n                Everyone's a critic.\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n                So why not have a place to share those opinions? To see what others think?\n            </Grid>             \n          </Grid>\n          </Box>\n          </ThemeProvider>\n    )\n}\nif(toggleTech===true){\n    return (\n<ThemeProvider theme={theme}>\n        <Box\n          sx={{\n            marginTop: 2,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent:\"flex-start\",\n          }}\n        >\n        <Grid item component={Typography} variant=\"h2\" color=\"black\" align=\"left\">\n            About CriticShelf\n          </Grid>\n        <Grid item component={Box}\n        sx={{\n            marginTop: 3,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"left\",\n            justifyContent:\"flex-start\",\n          }}>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:0}}>\n                CriticShelf is a website for those who love to think critically.\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n                If you have opinions on the things you watch, read or listen to, CriticShelf is for you.\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n                It's simple: \n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n            After you finish that movie, TV show, book, new album, or video game...\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n            Log in to your CriticShelf account, and leave it a rating and review.\n            </Grid>\n        </Grid>\n        <Grid item component={Typography} variant=\"h4\" color=\"black\" align=\"left\">\n            Technology\n            <ArrowDropDownIcon onClick={handleTech}></ArrowDropDownIcon>\n          </Grid>\n          <Grid item component={Box}\n        sx={{\n            marginTop: 2,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"left\",\n            justifyContent:\"flex-start\",\n          }}>\n          <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n                CriticShelf is built with a React front-end, a Rails back, and styled with Material UI.\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n                It draws from four APIs as data sources, all credited at the bottom of the page.\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n                Users, reviews, and other site data is managed on a PostgreSQL database.\n            </Grid>      \n          </Grid>\n          </Box>\n          </ThemeProvider>\n    )\n}\nif(toggleAboutMe===true){\n    return (\n<ThemeProvider theme={theme}>\n        <Box\n          sx={{\n            marginTop: 2,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent:\"flex-start\",\n          }}\n        >\n        <Grid item component={Typography} variant=\"h2\" color=\"black\" align=\"left\">\n            About CriticShelf\n          </Grid>\n        <Grid item component={Box}\n        sx={{\n            marginTop: 3,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"left\",\n            justifyContent:\"flex-start\",\n          }}>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:0}}>\n                CriticShelf is a website for those who love to think critically.\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n                If you have opinions on the things you watch, read or listen to, CriticShelf is for you.\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n                It's simple: \n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n            After you finish that movie, TV show, book, new album, or video game...\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n            Log in to your CriticShelf account, and leave it a rating and review.\n            </Grid>\n        </Grid>\n        <Grid item noWrap component={Typography} variant=\"h4\" color=\"black\" align=\"left\">\n            About Me\n            <ArrowDropDownIcon onClick={handleAboutMe}></ArrowDropDownIcon>\n          </Grid>\n          <Grid item component={Box}\n        sx={{\n            marginTop: 2,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"left\",\n            justifyContent:\"flex-start\",\n          }}>\n          <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1, pl:18}}>\n                My name is Wes Schierenbeck, and I created CriticShelf.\n            </Grid>\n            <Grid item component={Stack} \n            sx={{mb:1}}\n            direction={{xs:\"column\", sm:\"row\"}} spacing={2} justifyContent=\"center\"> \n                <IconButton \n                href=\"https://www.linkedin.com/in/kanyewes/\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n                // sx={{border:1,borderColor:\"black\"}} \n                aria-label=\"Example\">\n                    <LinkedInIcon icon={LinkedInIcon} />\n                </IconButton>\n                <IconButton \n                href=\"https://www.linkedin.com/in/kanyewes/\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n                // sx={{border:1,borderColor:\"black\"}} \n                aria-label=\"Example\">\n                    <GitHubIcon icon={GitHubIcon} />\n                </IconButton>\n                <IconButton \n                href=\"https://twitter.com/theweswing\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n                // sx={{border:1,borderColor:\"black\"}} \n                aria-label=\"Example\">\n                    <TwitterIcon icon={TwitterIcon} />\n                </IconButton>\n                <IconButton \n                href=\"https://theweswing.substack.com/\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n                // sx={{border:1,borderColor:\"black\"}} \n                aria-label=\"Example\">\n                    <RssFeedIcon icon={RssFeedIcon} />\n                </IconButton>\n                <IconButton \n                component=\"a\"\n                href=\"mailto:wes@wschierenbeck.com\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n                // sx={{border:1,borderColor:\"black\"}} \n                aria-label=\"Example\">\n                    <EmailIcon icon={EmailIcon} />\n                </IconButton>\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n                I'm from Brooklyn, NY and I love talking about things I enjoyed-- and things I hated.\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n                CriticShelf was born when Goodreads ignored my emails about adding half-star ratings.\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n                It was my final project at the Flatiron School's Full-Stack Software Engineer Bootcamp.\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n                Please enjoy, and feel free to reach out with any feedback.\n            </Grid>      \n          </Grid>\n          </Box>\n          </ThemeProvider>\n    )\n}\nif(toggleVersion===true){\n    return (\n        <ThemeProvider theme={theme}>\n        <Box\n          sx={{\n            marginTop: 2,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent:\"flex-start\",\n          }}\n        >\n        <Grid item component={Typography} variant=\"h2\" color=\"black\" align=\"left\">\n            About CriticShelf\n          </Grid>\n        <Grid item component={Box}\n        sx={{\n            marginTop: 3,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"left\",\n            justifyContent:\"flex-start\",\n          }}>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:0}}>\n                CriticShelf is a website for those who love to think critically.\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n                If you have opinions on the things you watch, read or listen to, CriticShelf is for you.\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n                It's simple: \n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n            After you finish that movie, TV show, book, new album, or video game...\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n            Log in to your CriticShelf account, and leave it a rating and review.\n            </Grid>\n        </Grid>\n        <Grid item component={Typography} variant=\"h4\" color=\"black\" align=\"left\">\n            Version Info\n            <ArrowDropDownIcon onClick={handleVersion}></ArrowDropDownIcon>\n          </Grid>\n          <Grid item component={Box}\n        sx={{\n            marginTop: 2,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"left\",\n            justifyContent:\"flex-start\",\n          }}>\n          <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n                CriticShelf is in its first launched version, v0.5\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n                In 0.5, users can review and rate media, and view their \"shelf\" of reviews.\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n                Users can see a piece of media's average rating and number of ratings.\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n                Known Issues:\n            </Grid> \n            <Grid item component={Typography} xs={12} variant=\"h7\" color=\"black\" sx={{mb:1}}>\n            • It is deeply, deeply mobile unfriendly. Use a computer.\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h7\" color=\"black\" sx={{mb:1}}>\n            • The search function can be a bit finnicky if you speed type through it.\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h7\" color=\"black\" sx={{mb:1}}>\n            • The Music database is a bit incomplete for some modern releases.\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n                1.0 Goals:\n            </Grid> \n            <Grid item component={Typography} xs={12} variant=\"h7\" color=\"black\" sx={{mb:1}}>\n            • Adding Friends, and viewing other users' shelves\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h7\" color=\"black\" sx={{mb:1}}>\n            • A feed of recent reviews and new releases\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h7\" color=\"black\" sx={{mb:1}}>\n            • Users naming their \"Favorites\" and \"GOAT\" pieces of media\n            </Grid>\n            <Grid item component={Typography} xs={12} variant=\"h7\" color=\"black\" sx={{mb:1}}>\n            • Improved styling and a mobile-friendly site.\n            </Grid>              \n          </Grid>\n          </Box>\n          </ThemeProvider>    \n    )\n}\n// return (\n// <ThemeProvider theme={theme}>\n//         <Box\n//           sx={{\n//             marginTop: 2,\n//             display: \"flex\",\n//             flexDirection: \"column\",\n//             alignItems: \"center\",\n//             justifyContent:\"flex-start\",\n//           }}\n//         >\n//         <Grid item component={Typography} variant=\"h2\" color=\"black\" align=\"left\">\n//             About CriticShelf\n//           </Grid>\n//         <Grid item component={Box}\n//         sx={{\n//             marginTop: 3,\n//             display: \"flex\",\n//             flexDirection: \"column\",\n//             alignItems: \"left\",\n//             justifyContent:\"flex-start\",\n//           }}>\n//             <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:0}}>\n//                 CriticShelf is a website for those who love to think critically.\n//             </Grid>\n//             <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n//                 If you have opinions on the things you watch, read or listen to, CriticShelf is for you.\n//             </Grid>\n//             <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n//                 It's simple: \n//             </Grid>\n//             <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n//             After you finish that movie, TV show, book, new album, or video game...\n//             </Grid>\n//             <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n//             Log in to your CriticShelf account, and leave it a rating and review.\n//             </Grid>\n//         </Grid>\n//         <Grid item component={Typography} variant=\"h4\" color=\"black\" align=\"left\">\n//             Why? {toggleWhy ? \n//             <ArrowDropDownIcon onClick={handleWhy}></ArrowDropDownIcon> :\n//             <ArrowRightIcon onClick={handleWhy}></ArrowRightIcon>}\n//           </Grid>\n//           {toggleWhy ?\n//           <Grid item component={Box}\n//         sx={{\n//             marginTop: 2,\n//             display: \"flex\",\n//             flexDirection: \"column\",\n//             alignItems: \"left\",\n//             justifyContent:\"flex-start\",\n//           }}>\n//           <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n//                 There are plenty of similar websites. Some that are quite good.\n//             </Grid>  \n//             <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n//                 But to my knowledge, most of these sites are dedicated to only one type of media:\n//             </Grid>\n//             <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n//                 Letterboxd is fantastic, but only for movies. Goodreads is fine enough, but just books.\n//             </Grid>\n//             <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n//                 When the new Netflix series, Kanye album or Marvel movie comes out, we find out:\n//             </Grid>\n//             <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n//                 Everyone's a critic.\n//             </Grid>\n//             <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n//                 So why not have a place to share those opinions? To see what others think?\n//             </Grid>             \n//           </Grid> : null}\n//           <Grid item component={Typography} variant=\"h4\" color=\"black\" align=\"left\">\n//             Technology {toggleTech ? \n//             <ArrowDropDownIcon onClick={handleTech}></ArrowDropDownIcon> :\n//             <ArrowRightIcon onClick={handleTech}></ArrowRightIcon>}\n//           </Grid>\n//           {toggleTech ?\n//           <Grid item component={Box}\n//         sx={{\n//             marginTop: 2,\n//             display: \"flex\",\n//             flexDirection: \"column\",\n//             alignItems: \"left\",\n//             justifyContent:\"flex-start\",\n//           }}>\n//           <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n//                 CriticShelf is built with a React front-end, a Rails back, and styled with Material UI.\n//             </Grid>\n//             <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n//                 It draws from four APIs as data sources, all credited at the bottom of the page.\n//             </Grid>\n//             <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n//                 Users, reviews, and other site data is managed on a PostgreSQL database.\n//             </Grid>      \n//           </Grid> : null}\n//           <Grid item noWrap component={Typography} variant=\"h4\" color=\"black\" align=\"left\">\n//             About Me {toggleAboutMe ? \n//             <ArrowDropDownIcon onClick={handleAboutMe}></ArrowDropDownIcon> :\n//             <ArrowRightIcon onClick={handleAboutMe}></ArrowRightIcon>}\n//           </Grid>\n//           {toggleAboutMe ?\n//           <Grid item component={Box}\n//         sx={{\n//             marginTop: 2,\n//             display: \"flex\",\n//             flexDirection: \"column\",\n//             alignItems: \"left\",\n//             justifyContent:\"flex-start\",\n//           }}>\n//           <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1, pl:18}}>\n//                 My name is Wes Schierenbeck, and I created CriticShelf.\n//             </Grid>\n//             <Grid item component={Stack} \n//             sx={{mb:1}}\n//             direction={{xs:\"column\", sm:\"row\"}} spacing={2} justifyContent=\"center\"> \n//                 <IconButton \n//                 href=\"https://www.linkedin.com/in/kanyewes/\"\n//                 target=\"_blank\"\n//                 rel=\"noreferrer noopener\"\n//                 // sx={{border:1,borderColor:\"black\"}} \n//                 aria-label=\"Example\">\n//                     <LinkedInIcon icon={LinkedInIcon} />\n//                 </IconButton>\n//                 <IconButton \n//                 href=\"https://www.linkedin.com/in/kanyewes/\"\n//                 target=\"_blank\"\n//                 rel=\"noreferrer noopener\"\n//                 // sx={{border:1,borderColor:\"black\"}} \n//                 aria-label=\"Example\">\n//                     <GitHubIcon icon={GitHubIcon} />\n//                 </IconButton>\n//                 <IconButton \n//                 href=\"https://twitter.com/theweswing\"\n//                 target=\"_blank\"\n//                 rel=\"noreferrer noopener\"\n//                 // sx={{border:1,borderColor:\"black\"}} \n//                 aria-label=\"Example\">\n//                     <TwitterIcon icon={TwitterIcon} />\n//                 </IconButton>\n//                 <IconButton \n//                 href=\"https://theweswing.substack.com/\"\n//                 target=\"_blank\"\n//                 rel=\"noreferrer noopener\"\n//                 // sx={{border:1,borderColor:\"black\"}} \n//                 aria-label=\"Example\">\n//                     <RssFeedIcon icon={RssFeedIcon} />\n//                 </IconButton>\n//                 <IconButton \n//                 component=\"a\"\n//                 href=\"mailto:wes@wschierenbeck.com\"\n//                 target=\"_blank\"\n//                 rel=\"noreferrer noopener\"\n//                 // sx={{border:1,borderColor:\"black\"}} \n//                 aria-label=\"Example\">\n//                     <EmailIcon icon={EmailIcon} />\n//                 </IconButton>\n//             </Grid>\n//             <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n//                 I'm from Brooklyn, NY and I love talking about the stuff I like. And yes, the stuff I hate.\n//             </Grid>\n//             <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n//                 CriticShelf was born when Goodreads ignored my emails about adding half-star ratings.\n//             </Grid>\n//             <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n//                 It was my final project at the Flatiron School's Full-Stack Software Engineer Bootcamp.\n//             </Grid>\n//             <Grid item component={Typography} xs={12} variant=\"h6\" color=\"black\" sx={{mb:1}}>\n//                 Please enjoy, and feel free to reach out with any feedback.\n//             </Grid>\n//           </Grid>\n//            : null}\n//       </Box> \n//       </ThemeProvider>\n//     );\n  };\nexport default About","import React, { useEffect, useState } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { createTheme, ThemeProvider, CssBaseline } from \"@mui/material/styles\";\nimport Header from \"./Header\";\nimport HeaderStranger from \"./HeaderStranger\";\nimport Welcome from \"./Welcome\";\nimport SignUp from \"./SignUp\";\nimport Login from \"./Login\";\nimport SearchMedia from \"./SearchMedia\";\nimport MyShelf from \"./MyShelf\";\nimport { Typography } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { Grid } from \"@mui/material\";\nimport MovieShelf from \"./MovieShelf\";\nimport TVShelf from \"./TVShelf\";\nimport AlbumShelf from \"./AlbumShelf\";\nimport BookShelf from \"./BookShelf\";\nimport GameShelf from \"./GameShelf\";\nimport About from \"./About\";\nimport { Box } from \"@mui/system\";\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    // auto-login\n    fetch(\"/me\").then((r) => {\n      if (r.ok) {\n        r.json().then((user) => {\n          setUser(user)\n        });\n      }\n    });\n  }, []);\n\n  const colorTheme = createTheme({\n    palette: {\n       primary: {\n          // main: blueGrey[600],\n          // contrastText: grey[50]\n          main: \"#000000\",\n          contrastText: \"#FFFFFF\"\n       },\n       secondary: {\n          // main: blueGrey[600],\n          // contrastText: grey[50]\n          main: \"#000000\",\n          contrastText: \"#FFFFFF\"\n       }\n    }\n });\n\n  if (!user) return (\n    <>\n    <HeaderStranger theme={colorTheme} user={user} setUser={setUser}/>\n    <Switch>\n    <Route exact path=\"/\">\n            <Welcome setUser={setUser} user={user} theme={colorTheme}/>\n          </Route>\n          <Route exact path=\"/about\">\n            <About theme={colorTheme}/>\n          </Route>\n          <Route exact path=\"/signup\">\n            <SignUp setUser={setUser} user={user} theme={colorTheme}/>\n          </Route>\n          <Route exact path=\"/login\">\n            <Login setUser={setUser} user={user} theme={colorTheme}/>\n          </Route>\n          <Route path=\"*\">\n            <Welcome setUser={setUser} user={user} theme={colorTheme}/>\n          </Route>\n    </Switch>\n    <Copyright sx={{ mt: 4, mb: 1 }} />\n</>\n  );\n\n  return (\n    <>\n    <Header theme={colorTheme} user={user} setUser={setUser}/>\n    <Switch>\n      <Route exact path=\"/search\">\n      <SearchMedia theme={colorTheme} user={user}/>\n      </Route>\n      <Route exact path=\"/about\">\n            <About theme={colorTheme}/>\n      </Route>\n      <Route exact path=\"/myshelf\">\n      <MyShelf theme={colorTheme} user={user}/>\n      </Route>\n      <Route exact path=\"/myshelf/movies\">\n      <MovieShelf theme={colorTheme} user={user}/>\n      </Route>\n      <Route exact path=\"/myshelf/tv\">\n      <TVShelf theme={colorTheme} user={user}/>\n      </Route>\n      <Route exact path=\"/myshelf/music\">\n      <AlbumShelf theme={colorTheme} user={user}/>\n      </Route>\n      <Route exact path=\"/myshelf/books\">\n      <BookShelf theme={colorTheme} user={user}/>\n      </Route>\n      <Route exact path=\"/myshelf/games\">\n      <GameShelf theme={colorTheme} user={user}/>\n      </Route>\n      <Route path=\"*\">\n      <SearchMedia theme={colorTheme} user={user}/>\n      </Route>\n    </Switch>\n    <Copyright sx={{ mt: 4, mb: 1 }} />\n    </>\n  );\n}\n\nconst Copyright = (props) => {\n  return (\n    <Box spacing={0}\n    direction=\"column\"\n    justifyContent=\"center\"\n    alignItems=\"center\"\n    sx={{mt:2}}>\n    <Grid container\n            spacing={0}\n            direction=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"stretch\">\n    <Grid item component={Typography}\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n    >\n      {\"Copyright © \"}\n      <a  href=\"/about\">\n        CriticShelf\n      </a>{\" \"}\n      {new Date().getFullYear()}\n      </Grid>\n      <Grid item component={Typography}\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n    >\n      Version 0.5 (01.27.22)\n      </Grid>\n      </Grid>\n      <Grid container\n            spacing={.5}\n            direction=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"stretch\"\n            sx={{mt: 1}}>\n        <Grid item component={Typography} xs={12} variant=\"body2\" color=\"text.secondary\" align=\"center\">\n          Database Powered By:\n        </Grid>\n        <Grid item component={Typography} xs={12} variant=\"body2\" color=\"text.secondary\" align=\"center\">\n          {\"Movies & TV: \"}\n          <a  href=\"https://www.themoviedb.org/\">\n        TMDB\n      </a>\n        </Grid>\n        <Grid item component={Typography} xs={12} variant=\"body2\" color=\"text.secondary\" align=\"center\">\n          {\"Music: \"}\n          <a  href=\"https://www.last.fm/api\">\n        Last.FM\n      </a>\n        </Grid>\n        <Grid item component={Typography} xs={12} variant=\"body2\" color=\"text.secondary\" align=\"center\">\n          {\"Video Games: \"}\n          <a  href=\"https://rawg.io/\">\n        RAWG\n      </a>\n        </Grid>\n        <Grid item component={Typography} xs={12} variant=\"body2\" color=\"text.secondary\" align=\"center\">\n          {\"Books: \"}\n          <a href=\"https://developer.google.com/books\">\n        Google Books API Family\n      </a>\n        </Grid>\n        <Grid item component={Typography} xs={12} variant=\"body2\" color=\"text.secondary\" align=\"center\">\n          \n        </Grid>\n      </Grid>\n      </Box>\n    \n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  *,\n  *::before, \n  *::after {\n    box-sizing: border-box;\n  }\n\n  html, body {\n    margin: 0;\n  }\n\n  body {\n    font-family: BlinkMacSystemFont,-apple-system,\"Segoe UI\",Roboto,Oxygen,Ubuntu,Cantarell,\"Fira Sans\",\"Droid Sans\",\"Helvetica Neue\",Helvetica,Arial,sans-serif;\n  }\n`;\n\nReactDOM.render(\n  <BrowserRouter>\n    <GlobalStyle />\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}